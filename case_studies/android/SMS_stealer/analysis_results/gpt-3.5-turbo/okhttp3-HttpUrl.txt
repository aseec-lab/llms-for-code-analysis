The `HttpUrl` class in the `okhttp3` package represents an HTTP or HTTPS URL.

The class provides methods for creating and manipulating URLs, including parsing, encoding, and decoding URL components.

It also provides methods for handling query parameters, path segments, and URL fragments.

The class is immutable and can be used to create and manipulate URLs in a thread-safe manner.This code snippet is a part of the implementation of the `HttpUrl` class in the `okhttp3` package. It includes methods for manipulating and retrieving information from an HTTP or HTTPS URL.

The methods shown in the code deal with encoding and decoding URL components, handling query parameters and path segments, and retrieving various parts of the URL such as the host, path, query, and fragment.

The code also includes methods for checking if a URL component is percent-encoded and for converting a query string into a list of names and values.

Additionally, there are methods for creating a new `HttpUrl` object based on the existing one, checking if the URL is using the HTTPS scheme, and resolving a relative URL against the base URL.

Overall, this code is part of the core functionality for working with HTTP and HTTPS URLs in the `okhttp3` library.The remaining code snippets are part of the implementation of the `HttpUrl` class in the `okhttp3` package.

The `uri()` method returns a `URI` object representing the URL. It creates a new `HttpUrl` using the `newBuilder()` method, encodes it for a URI, and then creates a `URI` object from the resulting string.

The `url()` method returns a `URL` object representing the URL. It creates a new `URL` object using the `url` field of the `HttpUrl`.

The `username()` method returns the username component of the URL.

The `Builder` class is an inner class that provides a fluent interface for constructing `HttpUrl` objects. It includes methods for manipulating various components of the URL such as the fragment, password, path, query, username, host, and port. It also includes methods for validating and encoding the URL components.

The remaining methods in the `Builder` class are helper methods that are used for constructing and manipulating the URL components. They handle operations such as adding path segments, resolving paths, canonicalizing hosts and ports, and parsing port numbers.

Overall, these code snippets provide the necessary functionality for constructing and manipulating HTTP and HTTPS URLs using the `HttpUrl` class in the `okhttp3` library.The `addEncodedPathSegment` method adds an encoded path segment to the URL.
The `addEncodedPathSegments` method adds multiple encoded path segments to the URL.
The `addEncodedQueryParameter` method adds an encoded query parameter to the URL.
The `addPathSegment` method adds a path segment to the URL.
The `addPathSegments` method adds multiple path segments to the URL.
The `addQueryParameter` method adds a query parameter to the URL.
The `build` method constructs and returns a new HttpUrl object.
The `effectivePort` method returns the effective port number of the URL.
The `encodedFragment` method sets the encoded fragment of the URL.
The `encodedPassword` method sets the encoded password of the URL.
The `encodedPath` method sets the encoded path of the URL.
The `encodedQuery` method sets the encoded query string of the URL.
The `encodedUsername` method sets the encoded username of the URL.
The `fragment` method sets the fragment of the URL.
The `host` method sets the host of the URL.
The `parse` method parses a string representation of a URL and populates the builder with the parsed components.The `password` method sets the password for the URL.
The `port` method sets the port number for the URL.
The `query` method sets the query string for the URL.
The `reencodeForUri` method re-encodes certain components of the URL to conform to URI specifications.
The `removeAllEncodedQueryParameters` method removes all query parameters with the given name from the URL.
The `removeAllQueryParameters` method removes all query parameters with the given name from the URL.The `removeQueryParameter` method removes a query parameter with the given name from the URL.
The `scheme` method sets the scheme (http or https) for the URL.
The `setEncodedPathSegment` method sets an encoded path segment at the given index in the URL.
The `setEncodedQueryParameter` method sets an encoded query parameter with the given name and value in the URL.
The `setPathSegment` method sets a path segment at the given index in the URL.
The `setQueryParameter` method sets a query parameter with the given name and value in the URL.
The `toString` method returns the string representation of the URL.
The `username` method sets the username for the URL.
The `ParseResult` enum represents the possible results of parsing a URL.