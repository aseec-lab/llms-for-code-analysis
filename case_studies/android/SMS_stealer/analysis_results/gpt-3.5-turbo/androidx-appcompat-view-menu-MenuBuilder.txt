The `MenuBuilder` class is a class that implements the `SupportMenu` interface and is responsible for building and managing a menu.

The class has properties such as `mItems` for storing the menu items, `mVisibleItems` for storing the visible menu items, `mNonActionItems` for storing the non-action menu items, and `mActionItems` for storing the action menu items.

It provides methods for adding menu items, creating new menu items, dispatching updates to menu presenters, restoring and saving the menu state, and handling submenus.

The class also has methods for setting the menu header, setting the visibility of shortcuts, and removing menu items.

It uses resources and context to access and manipulate menu information and items.The `addMenuPresenter` method adds a `MenuPresenter` to the menu and initializes it for the menu.

The `addSubMenu` methods add a submenu to the menu.

The `changeMenuMode` method notifies the callback that the menu mode has changed.

The `clear` method clears all the items from the menu.

The `clearAll` method clears all the items from the menu, as well as the menu header and presenters.

The `clearHeader` method clears the menu header.

The `close` method closes the menu by calling the `onCloseMenu` method on all the presenters.

The `collapseItemActionView` method collapses the action view for the specified menu item, if it is expanded.

The `dispatchMenuItemSelected` method dispatches the selected menu item to the callback.

The `expandItemActionView` method expands the action view for the specified menu item, if it is not expanded.

The `findGroupIndex` methods find the index of the first item in the specified group.

The `findItem` method finds the menu item with the specified ID.

The `findItemIndex` method finds the index of the menu item with the specified ID.

The `findItemWithShortcutForKey` method finds the menu item that has the specified shortcut key.

The `findItemsWithShortcutForKey` method finds all the menu items that have the specified shortcut key.

The `flagActionItems` method determines which menu items are action items and flags them accordingly.

The `getActionItems` method returns a list of the action items in the menu.

The `getActionViewStatesKey` method returns the key used to save and restore the state of action views.The remaining part of the code includes methods such as `getContext`, `getExpandedItem`, `getHeaderIcon`, `getHeaderTitle`, `getHeaderView`, `getItem`, `getNonActionItems`, `getOptionalIconsVisible`, `getResources`, `getRootMenu`, `getVisibleItems`, `hasVisibleItems`, `isGroupDividerEnabled`, `isQwertyMode`, `isShortcutKey`, `isShortcutsVisible`, `onItemActionRequestChanged`, `onItemVisibleChanged`, `onItemsChanged`, `performIdentifierAction`, `performItemAction`, `performShortcut`, `removeGroup`, `removeItem`, `removeItemAt`, `removeMenuPresenter`, `restoreActionViewStates`, `restorePresenterStates`, `saveActionViewStates`, `savePresenterStates`, `setCallback`, `setCurrentMenuInfo`, `setDefaultShowAsAction`, and `setExclusiveItemChecked`.The remaining part of the code includes methods related to setting properties and attributes of the menu, such as setting group checkable, group divider enabled, group visibility, header icon, header title, header view, optional icons visible, override visible items, qwerty mode, shortcuts visible, size, start and stop dispatching items changed, and callback and item invoker interfaces.