The `InspectableProperty` annotation is defined in the `androidx.annotation` package. It is used to annotate methods.

The `InspectableProperty` annotation has a retention policy of `RetentionPolicy.SOURCE`, meaning it is only retained in the source code and not in the compiled bytecode.

The `InspectableProperty` annotation has several attributes:
- `attributeId`: an integer value representing the attribute ID.
- `enumMapping`: an array of `EnumEntry` annotations.
- `flagMapping`: an array of `FlagEntry` annotations.
- `hasAttributeId`: a boolean value indicating if the annotated property has an attribute ID.
- `name`: a string value representing the name of the property.
- `valueType`: an enum value representing the type of the property value.

The `InspectableProperty` annotation also defines two additional annotations:
- `EnumEntry`: an annotation used to map enum names and values.
- `FlagEntry`: an annotation used to map flag names, masks, and target values.

The `InspectableProperty.ValueType` enum defines different types of property values, such as color, gravity, inferred, int enum, int flag, none, and resource ID.