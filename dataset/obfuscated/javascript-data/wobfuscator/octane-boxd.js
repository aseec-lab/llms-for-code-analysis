const __universalAtob = function (b64Encoded) {
    try {
        let binary_string = atob(b64Encoded), len = binary_string.length, bytes = new Uint8Array(len);
        for (let i = 0; i < len; i++) {
            bytes[i] = binary_string.charCodeAt(i);
        }
        return bytes;
    } catch (err) {
        return new Uint8Array(global.Buffer.from(b64Encoded, 'base64'));
    }
};
const __aB = 'AGFzbQEAAAABiYCAgAACYAAAYAJ/fwADg4CAgAACAQAFg4CAgAABAAEGhoCAgAABfwFBAAsHkYCAgAACBm1lbW9yeQIABGFycjAAAQqrgICAAAKPgICAAAAjACAAQQRsaiABNgIAC5GAgIAAAQF/QRAkAEEAQdTLywIQAAs=', __wAM = new WebAssembly.Instance(new WebAssembly.Module((() => {
        try {
            let binary_string = atob(__aB), len = binary_string.length, bytes = new Uint8Array(len);
            for (let i = 0; i < len; i++) {
                bytes[i] = binary_string.charCodeAt(i);
            }
            return bytes;
        } catch (err) {
            return new Uint8Array(global.Buffer.from(__aB, 'base64'));
        }
    })()));
const ac = new Map();
const __lA = (pos, stIdx, eIdx) => {
    if (ac.has(pos)) {
        return ac.get(pos);
    } else {
        const sK = `arr${ pos }`;
        __wAM.exports[sK]();
        let mem = new Uint32Array(__wAM.exports.memory.buffer, stIdx, (eIdx - stIdx) / 4 + 1);
        const rA = Array.from(mem);
        ac.set(pos, rA);
        return rA;
    }
};
const __forWasmBuffer = 'AGFzbQEAAAABiICAgAACYAAAYAABfwKkgICAAAMDZW52BHRlc3QAAQNlbnYGdXBkYXRlAAADZW52BGJvZHkAAAOCgICAAAEABISAgIAAAXAAAAWDgICAAAEAAQeRgICAAAIGbWVtb3J5AgAEZGF0YQADCpmAgIAAAZOAgIAAAAJAA0AQAEUNARACEAEMAAsLCw==';
const __forWasmModule = new WebAssembly.Module((() => {
    try {
        let binary_string = atob(__forWasmBuffer), len = binary_string.length, bytes = new Uint8Array(len);
        for (let i = 0; i < len; i++) {
            bytes[i] = binary_string.charCodeAt(i);
        }
        return bytes;
    } catch (err) {
        return new Uint8Array(global.Buffer.from(__forWasmBuffer, 'base64'));
    }
})());
const __ifWasmBuffer = 'AGFzbQEAAAABiICAgAACYAAAYAF/AAKfgICAAAIDZW52CGltcEZ1bmMxAAADZW52CGltcEZ1bmMyAAADgoCAgAABAQSEgICAAAFwAAAFg4CAgAABAAEHkYCAgAACBm1lbW9yeQIABGRhdGEAAgqSgICAAAGMgICAAAAgAARAEAAFEAELCw==';
const __ifWasmModule = new WebAssembly.Module((() => {
    try {
        let binary_string = atob(__ifWasmBuffer), len = binary_string.length, bytes = new Uint8Array(len);
        for (let i = 0; i < len; i++) {
            bytes[i] = binary_string.charCodeAt(i);
        }
        return bytes;
    } catch (err) {
        return new Uint8Array(global.Buffer.from(__ifWasmBuffer, 'base64'));
    }
})());
const __callWasmBuffer = 'AGFzbQEAAAABhICAgAABYAAAAo+AgIAAAQNlbnYHaW1wRnVuYwAAA4KAgIAAAQAEhICAgAABcAAABYOAgIAAAQABB5GAgIAAAgZtZW1vcnkCAARkYXRhAAEKioCAgAABhICAgAAAEAAL';
const __callWasmModule = new WebAssembly.Module((() => {
    try {
        let binary_string = atob(__callWasmBuffer), len = binary_string.length, bytes = new Uint8Array(len);
        for (let i = 0; i < len; i++) {
            bytes[i] = binary_string.charCodeAt(i);
        }
        return bytes;
    } catch (err) {
        return new Uint8Array(global.Buffer.from(__callWasmBuffer, 'base64'));
    }
})());
const __wasmStringModules = ['AGFzbQEAAAAFg4CAgAABAAEGzYGAgAAjfwBBAQt/AEEMC38AQRgLfwBBJAt/AEEwC38AQTwLfwBByAALfwBB1AALfwBB4AALfwBB7AALfwBBigELfwBBpAELfwBBqgELfwBBsAELfwBBwAELfwBB0AELfwBB3gELfwBB7AELfwBB/AELfwBBjAILfwBBkgILfwBBmAILfwBBnAILfwBBoAILfwBBpAILfwBBrAILfwBBwAILfwBBygILfwBBiAMLfwBBkAMLfwBBlgMLfwBBnAMLfwBBogMLfwBBpgMLfwBBrgMLB7uCgIAAJAZtZW1vcnkCAAVkYXRhMAMABWRhdGExAwEFZGF0YTIDAgVkYXRhMwMDBWRhdGE0AwQFZGF0YTUDBQVkYXRhNgMGBWRhdGE3AwcFZGF0YTgDCAVkYXRhOQMJBmRhdGExMAMKBmRhdGExMQMLBmRhdGExMgMMBmRhdGExMwMNBmRhdGExNAMOBmRhdGExNQMPBmRhdGExNgMQBmRhdGExNwMRBmRhdGExOAMSBmRhdGExOQMTBmRhdGEyMAMUBmRhdGEyMQMVBmRhdGEyMgMWBmRhdGEyMwMXBmRhdGEyNAMYBmRhdGEyNQMZBmRhdGEyNgMaBmRhdGEyNwMbBmRhdGEyOAMcBmRhdGEyOQMdBmRhdGEzMAMeBmRhdGEzMQMfBmRhdGEzMgMgBmRhdGEzMwMhBmRhdGEzNAMiC8aEgIAAIwBBAQsKdW5kZWZpbmVkAABBDAsKdW5kZWZpbmVkAABBGAsKdW5kZWZpbmVkAABBJAsKdW5kZWZpbmVkAABBMAsKdW5kZWZpbmVkAABBPAsKdW5kZWZpbmVkAABByAALCnVuZGVmaW5lZAAAQdQACwp1bmRlZmluZWQAAEHgAAsKdW5kZWZpbmVkAABB7AALHEJveDJELkNvbGxpc2lvbi5JQnJvYWRQaGFzZQAAQYoBCxhCb3gyRC5Db21tb24uYjJpbnRlcm5hbAAAQaQBCwRrZXkAAEGqAQsEa2V5AABBsAELDnJlZmVyZW5jZUVkZ2UAAEHAAQsOcmVmZXJlbmNlRWRnZQAAQdABCw1pbmNpZGVudEVkZ2UAAEHeAQsNaW5jaWRlbnRFZGdlAABB7AELD2luY2lkZW50VmVydGV4AABB/AELD2luY2lkZW50VmVydGV4AABBjAILBWZsaXAAAEGSAgsFZmxpcAAAQZgCCwJyAABBnAILAmcAAEGgAgsCYgAAQaQCCwZjb2xvcgAAQawCCxNBc3NlcnRpb24lMjBGYWlsZWQAAEHAAgsJMi4xYWxwaGEAAEHKAgs9Q29udHJvbGxlciUyMGNhbiUyMG9ubHklMjBiZSUyMGElMjBtZW1iZXIlMjBvZiUyMG9uZSUyMHdvcmxkAABBiAMLBnJnYmEoAABBkAMLBCUyQwAAQZYDCwQlMkMAAEGcAwsEJTJDAABBogMLAikAAEGmAwsGQm94MkQAAEGuAwsGQm94MkQA'].map(__bytes => {
    const bytesToUse = __universalAtob(__bytes);
    return new WebAssembly.Instance(new WebAssembly.Module(bytesToUse));
});
const lS = (wI, pos, iWC) => {
    let __str = '';
    if (!Array.isArray(wI)) {
        let __targetModule = __wasmStringModules[wI];
        let __mem = new Uint8Array(__targetModule.exports.memory.buffer);
        const __stringKey = `data${ pos }`;
        let __start = __targetModule.exports[__stringKey] - 1;
        let __str = '';
        let i = __start;
        let __c = __mem[i++];
        while (!(parseInt(__c) & 128) && __mem[i]) {
            __str += __c;
            __c = String.fromCharCode(__mem[i++]);
        }
        __str += __c;
        __str = decodeURIComponent(__str.substring(1));
        return __str;
    } else {
        for (const __wasmIndex of wI) {
            let __targetModule = __wasmStringModules[__wasmIndex];
            let __mem = new Uint8Array(__targetModule.exports.memory.buffer);
            const __stringKey = `data${ pos }`;
            let __start = __targetModule.exports[__stringKey] - 1;
            let i = __start;
            let __c = __mem[i++];
            while (!(parseInt(__c) & 128) && __mem[i]) {
                __str += __c;
                __c = String.fromCharCode(__mem[i++]);
            }
            __str += __c;
        }
        __str = decodeURIComponent(__str.substring(1));
        return __str;
    }
};
var Box2D = {};
(() => {
    const __callInstance893 = new WebAssembly.Instance(__callWasmModule, {
        env: {
            impFunc: () => {
                (function (F, G) {
                    function K() {
                    }
                    (() => {
                        const __ifInstance0 = new WebAssembly.Instance(__ifWasmModule, {
                            env: {
                                impFunc1: () => {
                                    Object.defineProperty = function (y, w, A) {
                                        A.get instanceof Function && y.__defineGetter__(w, A.get);
                                        A.set instanceof Function && y.__defineSetter__(w, A.set);
                                    };
                                },
                                impFunc2: () => {
                                }
                            }
                        });
                        const __exports = __ifInstance0.exports;
                        return __exports.data(!(Object.defineProperty instanceof Function) && Object.prototype.__defineGetter__ instanceof Function && Object.prototype.__defineSetter__ instanceof Function ? 1 : 0);
                    })();
                    F.inherit = function (y, w) {
                        K.prototype = w.prototype;
                        y.prototype = new K();
                        y.prototype.constructor = y;
                    };
                    F.generateCallback = function (y, w) {
                        return function () {
                            (() => {
                                const __callInstance892 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            w.apply(y, arguments);
                                        }
                                    }
                                });
                                const __exports = __callInstance892.exports;
                                return __exports.data();
                            })();
                        };
                    };
                    F.NVector = function (y) {
                        (() => {
                            const __ifInstance1 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        y = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance1.exports;
                            return __exports.data(y === G ? 1 : 0);
                        })();
                        (() => {
                            var w = Array(y || 0), A = 0;
                            const __forInstance0 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return A < y ? 1 : 0;
                                    },
                                    update: () => {
                                        ++A;
                                    },
                                    body: () => {
                                        w[A] = 0;
                                    }
                                }
                            });
                            const __exports = __forInstance0.exports;
                            return __exports.data();
                        })();
                        return w;
                    };
                    F.is = function (y, w) {
                        if (y === null)
                            return false;
                        if (w instanceof Function && y instanceof w)
                            return true;
                        if (y.constructor.__implements != G && y.constructor.__implements[w])
                            return true;
                        return false;
                    };
                    F.parseUInt = function (y) {
                        return Math.abs(parseInt(y));
                    };
                }(Box2D));
            }
        }
    });
    const __exports = __callInstance893.exports;
    return __exports.data();
})();
var Vector = Array, Vector_a2j_Number = Box2D.NVector;
(() => {
    const __ifInstance2 = new WebAssembly.Instance(__ifWasmModule, {
        env: {
            impFunc1: () => {
                Box2D = {};
            },
            impFunc2: () => {
            }
        }
    });
    const __exports = __ifInstance2.exports;
    return __exports.data(typeof Box2D === lS(0, 0) ? 1 : 0);
})();
(() => {
    const __ifInstance3 = new WebAssembly.Instance(__ifWasmModule, {
        env: {
            impFunc1: () => {
                Box2D.Collision = {};
            },
            impFunc2: () => {
            }
        }
    });
    const __exports = __ifInstance3.exports;
    return __exports.data(typeof Box2D.Collision === lS(0, 1) ? 1 : 0);
})();
(() => {
    const __ifInstance4 = new WebAssembly.Instance(__ifWasmModule, {
        env: {
            impFunc1: () => {
                Box2D.Collision.Shapes = {};
            },
            impFunc2: () => {
            }
        }
    });
    const __exports = __ifInstance4.exports;
    return __exports.data(typeof Box2D.Collision.Shapes === lS(0, 2) ? 1 : 0);
})();
(() => {
    const __ifInstance5 = new WebAssembly.Instance(__ifWasmModule, {
        env: {
            impFunc1: () => {
                Box2D.Common = {};
            },
            impFunc2: () => {
            }
        }
    });
    const __exports = __ifInstance5.exports;
    return __exports.data(typeof Box2D.Common === lS(0, 3) ? 1 : 0);
})();
(() => {
    const __ifInstance6 = new WebAssembly.Instance(__ifWasmModule, {
        env: {
            impFunc1: () => {
                Box2D.Common.Math = {};
            },
            impFunc2: () => {
            }
        }
    });
    const __exports = __ifInstance6.exports;
    return __exports.data(typeof Box2D.Common.Math === lS(0, 4) ? 1 : 0);
})();
(() => {
    const __ifInstance7 = new WebAssembly.Instance(__ifWasmModule, {
        env: {
            impFunc1: () => {
                Box2D.Dynamics = {};
            },
            impFunc2: () => {
            }
        }
    });
    const __exports = __ifInstance7.exports;
    return __exports.data(typeof Box2D.Dynamics === lS(0, 5) ? 1 : 0);
})();
(() => {
    const __ifInstance8 = new WebAssembly.Instance(__ifWasmModule, {
        env: {
            impFunc1: () => {
                Box2D.Dynamics.Contacts = {};
            },
            impFunc2: () => {
            }
        }
    });
    const __exports = __ifInstance8.exports;
    return __exports.data(typeof Box2D.Dynamics.Contacts === lS(0, 6) ? 1 : 0);
})();
(() => {
    const __ifInstance9 = new WebAssembly.Instance(__ifWasmModule, {
        env: {
            impFunc1: () => {
                Box2D.Dynamics.Controllers = {};
            },
            impFunc2: () => {
            }
        }
    });
    const __exports = __ifInstance9.exports;
    return __exports.data(typeof Box2D.Dynamics.Controllers === lS(0, 7) ? 1 : 0);
})();
(() => {
    const __ifInstance10 = new WebAssembly.Instance(__ifWasmModule, {
        env: {
            impFunc1: () => {
                Box2D.Dynamics.Joints = {};
            },
            impFunc2: () => {
            }
        }
    });
    const __exports = __ifInstance10.exports;
    return __exports.data(typeof Box2D.Dynamics.Joints === lS(0, 8) ? 1 : 0);
})();
(() => {
    const __callInstance891 = new WebAssembly.Instance(__callWasmModule, {
        env: {
            impFunc: () => {
                (function () {
                    function F() {
                        (() => {
                            const __callInstance890 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        F.b2AABB.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance890.exports;
                            return __exports.data();
                        })();
                    }
                    function G() {
                        (() => {
                            const __callInstance889 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        G.b2Bound.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance889.exports;
                            return __exports.data();
                        })();
                    }
                    function K() {
                        (() => {
                            const __callInstance888 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        K.b2BoundValues.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance888.exports;
                            return __exports.data();
                        })();
                        this.constructor === K && this.b2BoundValues.apply(this, arguments);
                    }
                    function y() {
                        (() => {
                            const __callInstance887 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        y.b2Collision.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance887.exports;
                            return __exports.data();
                        })();
                    }
                    function w() {
                        (() => {
                            const __callInstance886 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        w.b2ContactID.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance886.exports;
                            return __exports.data();
                        })();
                        this.constructor === w && this.b2ContactID.apply(this, arguments);
                    }
                    function A() {
                        (() => {
                            const __callInstance885 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        A.b2ContactPoint.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance885.exports;
                            return __exports.data();
                        })();
                    }
                    function U() {
                        (() => {
                            const __callInstance884 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        U.b2Distance.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance884.exports;
                            return __exports.data();
                        })();
                    }
                    function p() {
                        (() => {
                            const __callInstance883 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        p.b2DistanceInput.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance883.exports;
                            return __exports.data();
                        })();
                    }
                    function B() {
                        (() => {
                            const __callInstance882 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        B.b2DistanceOutput.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance882.exports;
                            return __exports.data();
                        })();
                    }
                    function Q() {
                        (() => {
                            const __callInstance881 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Q.b2DistanceProxy.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance881.exports;
                            return __exports.data();
                        })();
                    }
                    function V() {
                        (() => {
                            const __callInstance880 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        V.b2DynamicTree.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance880.exports;
                            return __exports.data();
                        })();
                        this.constructor === V && this.b2DynamicTree.apply(this, arguments);
                    }
                    function M() {
                        (() => {
                            const __callInstance879 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        M.b2DynamicTreeBroadPhase.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance879.exports;
                            return __exports.data();
                        })();
                    }
                    function L() {
                        (() => {
                            const __callInstance878 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        L.b2DynamicTreeNode.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance878.exports;
                            return __exports.data();
                        })();
                    }
                    function I() {
                        (() => {
                            const __callInstance877 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        I.b2DynamicTreePair.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance877.exports;
                            return __exports.data();
                        })();
                    }
                    function W() {
                        (() => {
                            const __callInstance876 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        W.b2Manifold.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance876.exports;
                            return __exports.data();
                        })();
                        this.constructor === W && this.b2Manifold.apply(this, arguments);
                    }
                    function Y() {
                        (() => {
                            const __callInstance875 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Y.b2ManifoldPoint.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance875.exports;
                            return __exports.data();
                        })();
                        this.constructor === Y && this.b2ManifoldPoint.apply(this, arguments);
                    }
                    function k() {
                        (() => {
                            const __callInstance874 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        k.b2Point.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance874.exports;
                            return __exports.data();
                        })();
                    }
                    function z() {
                        (() => {
                            const __callInstance873 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        z.b2RayCastInput.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance873.exports;
                            return __exports.data();
                        })();
                        this.constructor === z && this.b2RayCastInput.apply(this, arguments);
                    }
                    function u() {
                        (() => {
                            const __callInstance872 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        u.b2RayCastOutput.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance872.exports;
                            return __exports.data();
                        })();
                    }
                    function D() {
                        (() => {
                            const __callInstance871 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        D.b2Segment.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance871.exports;
                            return __exports.data();
                        })();
                    }
                    function H() {
                        (() => {
                            const __callInstance870 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        H.b2SeparationFunction.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance870.exports;
                            return __exports.data();
                        })();
                    }
                    function O() {
                        (() => {
                            const __callInstance869 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        O.b2Simplex.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance869.exports;
                            return __exports.data();
                        })();
                        this.constructor === O && this.b2Simplex.apply(this, arguments);
                    }
                    function E() {
                        (() => {
                            const __callInstance868 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        E.b2SimplexCache.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance868.exports;
                            return __exports.data();
                        })();
                    }
                    function R() {
                        (() => {
                            const __callInstance867 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        R.b2SimplexVertex.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance867.exports;
                            return __exports.data();
                        })();
                    }
                    function N() {
                        (() => {
                            const __callInstance866 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        N.b2TimeOfImpact.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance866.exports;
                            return __exports.data();
                        })();
                    }
                    function S() {
                        (() => {
                            const __callInstance865 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        S.b2TOIInput.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance865.exports;
                            return __exports.data();
                        })();
                    }
                    function aa() {
                        (() => {
                            const __callInstance864 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        aa.b2WorldManifold.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance864.exports;
                            return __exports.data();
                        })();
                        this.constructor === aa && this.b2WorldManifold.apply(this, arguments);
                    }
                    function Z() {
                        (() => {
                            const __callInstance863 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Z.ClipVertex.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance863.exports;
                            return __exports.data();
                        })();
                    }
                    function d() {
                        (() => {
                            const __callInstance862 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        d.Features.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance862.exports;
                            return __exports.data();
                        })();
                    }
                    function h() {
                        (() => {
                            const __callInstance861 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        h.b2CircleShape.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance861.exports;
                            return __exports.data();
                        })();
                        this.constructor === h && this.b2CircleShape.apply(this, arguments);
                    }
                    function l() {
                        (() => {
                            const __callInstance860 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        l.b2EdgeChainDef.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance860.exports;
                            return __exports.data();
                        })();
                        this.constructor === l && this.b2EdgeChainDef.apply(this, arguments);
                    }
                    function j() {
                        (() => {
                            const __callInstance859 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        j.b2EdgeShape.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance859.exports;
                            return __exports.data();
                        })();
                        this.constructor === j && this.b2EdgeShape.apply(this, arguments);
                    }
                    function o() {
                        (() => {
                            const __callInstance858 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        o.b2MassData.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance858.exports;
                            return __exports.data();
                        })();
                    }
                    function q() {
                        (() => {
                            const __callInstance857 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        q.b2PolygonShape.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance857.exports;
                            return __exports.data();
                        })();
                        this.constructor === q && this.b2PolygonShape.apply(this, arguments);
                    }
                    function n() {
                        (() => {
                            const __callInstance856 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        n.b2Shape.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance856.exports;
                            return __exports.data();
                        })();
                        this.constructor === n && this.b2Shape.apply(this, arguments);
                    }
                    function a() {
                        (() => {
                            const __callInstance855 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        a.b2Color.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance855.exports;
                            return __exports.data();
                        })();
                        this.constructor === a && this.b2Color.apply(this, arguments);
                    }
                    function c() {
                        (() => {
                            const __callInstance854 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        c.b2Settings.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance854.exports;
                            return __exports.data();
                        })();
                    }
                    function g() {
                        (() => {
                            const __callInstance853 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        g.b2Mat22.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance853.exports;
                            return __exports.data();
                        })();
                        this.constructor === g && this.b2Mat22.apply(this, arguments);
                    }
                    function b() {
                        (() => {
                            const __callInstance852 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        b.b2Mat33.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance852.exports;
                            return __exports.data();
                        })();
                        this.constructor === b && this.b2Mat33.apply(this, arguments);
                    }
                    function e() {
                        (() => {
                            const __callInstance851 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        e.b2Math.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance851.exports;
                            return __exports.data();
                        })();
                    }
                    function f() {
                        (() => {
                            const __callInstance850 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        f.b2Sweep.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance850.exports;
                            return __exports.data();
                        })();
                    }
                    function m() {
                        (() => {
                            const __callInstance849 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        m.b2Transform.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance849.exports;
                            return __exports.data();
                        })();
                        this.constructor === m && this.b2Transform.apply(this, arguments);
                    }
                    function r() {
                        (() => {
                            const __callInstance848 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        r.b2Vec2.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance848.exports;
                            return __exports.data();
                        })();
                        this.constructor === r && this.b2Vec2.apply(this, arguments);
                    }
                    function s() {
                        (() => {
                            const __callInstance847 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        s.b2Vec3.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance847.exports;
                            return __exports.data();
                        })();
                        this.constructor === s && this.b2Vec3.apply(this, arguments);
                    }
                    function v() {
                        (() => {
                            const __callInstance846 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        v.b2Body.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance846.exports;
                            return __exports.data();
                        })();
                        this.constructor === v && this.b2Body.apply(this, arguments);
                    }
                    function t() {
                        (() => {
                            const __callInstance845 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        t.b2BodyDef.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance845.exports;
                            return __exports.data();
                        })();
                        this.constructor === t && this.b2BodyDef.apply(this, arguments);
                    }
                    function x() {
                        (() => {
                            const __callInstance844 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        x.b2ContactFilter.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance844.exports;
                            return __exports.data();
                        })();
                    }
                    function C() {
                        (() => {
                            const __callInstance843 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        C.b2ContactImpulse.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance843.exports;
                            return __exports.data();
                        })();
                    }
                    function J() {
                        (() => {
                            const __callInstance842 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        J.b2ContactListener.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance842.exports;
                            return __exports.data();
                        })();
                    }
                    function T() {
                        (() => {
                            const __callInstance841 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        T.b2ContactManager.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance841.exports;
                            return __exports.data();
                        })();
                        this.constructor === T && this.b2ContactManager.apply(this, arguments);
                    }
                    function P() {
                        (() => {
                            const __callInstance840 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        P.b2DebugDraw.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance840.exports;
                            return __exports.data();
                        })();
                        this.constructor === P && this.b2DebugDraw.apply(this, arguments);
                    }
                    function X() {
                        (() => {
                            const __callInstance839 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        X.b2DestructionListener.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance839.exports;
                            return __exports.data();
                        })();
                    }
                    function $() {
                        (() => {
                            const __callInstance838 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        $.b2FilterData.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance838.exports;
                            return __exports.data();
                        })();
                    }
                    function ba() {
                        (() => {
                            const __callInstance837 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        ba.b2Fixture.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance837.exports;
                            return __exports.data();
                        })();
                        this.constructor === ba && this.b2Fixture.apply(this, arguments);
                    }
                    function ca() {
                        (() => {
                            const __callInstance836 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        ca.b2FixtureDef.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance836.exports;
                            return __exports.data();
                        })();
                        this.constructor === ca && this.b2FixtureDef.apply(this, arguments);
                    }
                    function da() {
                        (() => {
                            const __callInstance835 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        da.b2Island.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance835.exports;
                            return __exports.data();
                        })();
                        this.constructor === da && this.b2Island.apply(this, arguments);
                    }
                    function Fa() {
                        (() => {
                            const __callInstance834 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Fa.b2TimeStep.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance834.exports;
                            return __exports.data();
                        })();
                    }
                    function ea() {
                        (() => {
                            const __callInstance833 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        ea.b2World.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance833.exports;
                            return __exports.data();
                        })();
                        this.constructor === ea && this.b2World.apply(this, arguments);
                    }
                    function Ga() {
                        (() => {
                            const __callInstance832 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Ga.b2CircleContact.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance832.exports;
                            return __exports.data();
                        })();
                    }
                    function fa() {
                        (() => {
                            const __callInstance831 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        fa.b2Contact.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance831.exports;
                            return __exports.data();
                        })();
                        this.constructor === fa && this.b2Contact.apply(this, arguments);
                    }
                    function ga() {
                        (() => {
                            const __callInstance830 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        ga.b2ContactConstraint.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance830.exports;
                            return __exports.data();
                        })();
                        this.constructor === ga && this.b2ContactConstraint.apply(this, arguments);
                    }
                    function Ha() {
                        (() => {
                            const __callInstance829 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Ha.b2ContactConstraintPoint.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance829.exports;
                            return __exports.data();
                        })();
                    }
                    function Ia() {
                        (() => {
                            const __callInstance828 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Ia.b2ContactEdge.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance828.exports;
                            return __exports.data();
                        })();
                    }
                    function ha() {
                        (() => {
                            const __callInstance827 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        ha.b2ContactFactory.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance827.exports;
                            return __exports.data();
                        })();
                        this.constructor === ha && this.b2ContactFactory.apply(this, arguments);
                    }
                    function Ja() {
                        (() => {
                            const __callInstance826 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Ja.b2ContactRegister.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance826.exports;
                            return __exports.data();
                        })();
                    }
                    function Ka() {
                        (() => {
                            const __callInstance825 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Ka.b2ContactResult.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance825.exports;
                            return __exports.data();
                        })();
                    }
                    function ia() {
                        (() => {
                            const __callInstance824 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        ia.b2ContactSolver.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance824.exports;
                            return __exports.data();
                        })();
                        this.constructor === ia && this.b2ContactSolver.apply(this, arguments);
                    }
                    function La() {
                        (() => {
                            const __callInstance823 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        La.b2EdgeAndCircleContact.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance823.exports;
                            return __exports.data();
                        })();
                    }
                    function ja() {
                        (() => {
                            const __callInstance822 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        ja.b2NullContact.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance822.exports;
                            return __exports.data();
                        })();
                        this.constructor === ja && this.b2NullContact.apply(this, arguments);
                    }
                    function Ma() {
                        (() => {
                            const __callInstance821 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Ma.b2PolyAndCircleContact.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance821.exports;
                            return __exports.data();
                        })();
                    }
                    function Na() {
                        (() => {
                            const __callInstance820 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Na.b2PolyAndEdgeContact.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance820.exports;
                            return __exports.data();
                        })();
                    }
                    function Oa() {
                        (() => {
                            const __callInstance819 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Oa.b2PolygonContact.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance819.exports;
                            return __exports.data();
                        })();
                    }
                    function ka() {
                        (() => {
                            const __callInstance818 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        ka.b2PositionSolverManifold.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance818.exports;
                            return __exports.data();
                        })();
                        this.constructor === ka && this.b2PositionSolverManifold.apply(this, arguments);
                    }
                    function Pa() {
                        (() => {
                            const __callInstance817 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Pa.b2BuoyancyController.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance817.exports;
                            return __exports.data();
                        })();
                    }
                    function Qa() {
                        (() => {
                            const __callInstance816 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Qa.b2ConstantAccelController.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance816.exports;
                            return __exports.data();
                        })();
                    }
                    function Ra() {
                        (() => {
                            const __callInstance815 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Ra.b2ConstantForceController.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance815.exports;
                            return __exports.data();
                        })();
                    }
                    function Sa() {
                        (() => {
                            const __callInstance814 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Sa.b2Controller.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance814.exports;
                            return __exports.data();
                        })();
                    }
                    function Ta() {
                        (() => {
                            const __callInstance813 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Ta.b2ControllerEdge.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance813.exports;
                            return __exports.data();
                        })();
                    }
                    function Ua() {
                        (() => {
                            const __callInstance812 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Ua.b2GravityController.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance812.exports;
                            return __exports.data();
                        })();
                    }
                    function Va() {
                        (() => {
                            const __callInstance811 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Va.b2TensorDampingController.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance811.exports;
                            return __exports.data();
                        })();
                    }
                    function la() {
                        (() => {
                            const __callInstance810 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        la.b2DistanceJoint.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance810.exports;
                            return __exports.data();
                        })();
                        this.constructor === la && this.b2DistanceJoint.apply(this, arguments);
                    }
                    function ma() {
                        (() => {
                            const __callInstance809 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        ma.b2DistanceJointDef.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance809.exports;
                            return __exports.data();
                        })();
                        this.constructor === ma && this.b2DistanceJointDef.apply(this, arguments);
                    }
                    function na() {
                        (() => {
                            const __callInstance808 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        na.b2FrictionJoint.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance808.exports;
                            return __exports.data();
                        })();
                        this.constructor === na && this.b2FrictionJoint.apply(this, arguments);
                    }
                    function oa() {
                        (() => {
                            const __callInstance807 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        oa.b2FrictionJointDef.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance807.exports;
                            return __exports.data();
                        })();
                        this.constructor === oa && this.b2FrictionJointDef.apply(this, arguments);
                    }
                    function pa() {
                        (() => {
                            const __callInstance806 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        pa.b2GearJoint.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance806.exports;
                            return __exports.data();
                        })();
                        this.constructor === pa && this.b2GearJoint.apply(this, arguments);
                    }
                    function qa() {
                        (() => {
                            const __callInstance805 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        qa.b2GearJointDef.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance805.exports;
                            return __exports.data();
                        })();
                        this.constructor === qa && this.b2GearJointDef.apply(this, arguments);
                    }
                    function Wa() {
                        (() => {
                            const __callInstance804 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Wa.b2Jacobian.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance804.exports;
                            return __exports.data();
                        })();
                    }
                    function ra() {
                        (() => {
                            const __callInstance803 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        ra.b2Joint.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance803.exports;
                            return __exports.data();
                        })();
                        this.constructor === ra && this.b2Joint.apply(this, arguments);
                    }
                    function sa() {
                        (() => {
                            const __callInstance802 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        sa.b2JointDef.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance802.exports;
                            return __exports.data();
                        })();
                        this.constructor === sa && this.b2JointDef.apply(this, arguments);
                    }
                    function Xa() {
                        (() => {
                            const __callInstance801 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Xa.b2JointEdge.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance801.exports;
                            return __exports.data();
                        })();
                    }
                    function ta() {
                        (() => {
                            const __callInstance800 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        ta.b2LineJoint.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance800.exports;
                            return __exports.data();
                        })();
                        this.constructor === ta && this.b2LineJoint.apply(this, arguments);
                    }
                    function ua() {
                        (() => {
                            const __callInstance799 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        ua.b2LineJointDef.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance799.exports;
                            return __exports.data();
                        })();
                        this.constructor === ua && this.b2LineJointDef.apply(this, arguments);
                    }
                    function va() {
                        (() => {
                            const __callInstance798 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        va.b2MouseJoint.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance798.exports;
                            return __exports.data();
                        })();
                        this.constructor === va && this.b2MouseJoint.apply(this, arguments);
                    }
                    function wa() {
                        (() => {
                            const __callInstance797 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        wa.b2MouseJointDef.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance797.exports;
                            return __exports.data();
                        })();
                        this.constructor === wa && this.b2MouseJointDef.apply(this, arguments);
                    }
                    function xa() {
                        (() => {
                            const __callInstance796 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        xa.b2PrismaticJoint.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance796.exports;
                            return __exports.data();
                        })();
                        this.constructor === xa && this.b2PrismaticJoint.apply(this, arguments);
                    }
                    function ya() {
                        (() => {
                            const __callInstance795 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        ya.b2PrismaticJointDef.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance795.exports;
                            return __exports.data();
                        })();
                        this.constructor === ya && this.b2PrismaticJointDef.apply(this, arguments);
                    }
                    function za() {
                        (() => {
                            const __callInstance794 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        za.b2PulleyJoint.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance794.exports;
                            return __exports.data();
                        })();
                        this.constructor === za && this.b2PulleyJoint.apply(this, arguments);
                    }
                    function Aa() {
                        (() => {
                            const __callInstance793 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Aa.b2PulleyJointDef.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance793.exports;
                            return __exports.data();
                        })();
                        this.constructor === Aa && this.b2PulleyJointDef.apply(this, arguments);
                    }
                    function Ba() {
                        (() => {
                            const __callInstance792 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Ba.b2RevoluteJoint.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance792.exports;
                            return __exports.data();
                        })();
                        this.constructor === Ba && this.b2RevoluteJoint.apply(this, arguments);
                    }
                    function Ca() {
                        (() => {
                            const __callInstance791 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Ca.b2RevoluteJointDef.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance791.exports;
                            return __exports.data();
                        })();
                        this.constructor === Ca && this.b2RevoluteJointDef.apply(this, arguments);
                    }
                    function Da() {
                        (() => {
                            const __callInstance790 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Da.b2WeldJoint.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance790.exports;
                            return __exports.data();
                        })();
                        this.constructor === Da && this.b2WeldJoint.apply(this, arguments);
                    }
                    function Ea() {
                        (() => {
                            const __callInstance789 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Ea.b2WeldJointDef.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance789.exports;
                            return __exports.data();
                        })();
                        this.constructor === Ea && this.b2WeldJointDef.apply(this, arguments);
                    }
                    Box2D.Collision.IBroadPhase = lS(0, 9);
                    Box2D.Collision.b2AABB = F;
                    Box2D.Collision.b2Bound = G;
                    Box2D.Collision.b2BoundValues = K;
                    Box2D.Collision.b2Collision = y;
                    Box2D.Collision.b2ContactID = w;
                    Box2D.Collision.b2ContactPoint = A;
                    Box2D.Collision.b2Distance = U;
                    Box2D.Collision.b2DistanceInput = p;
                    Box2D.Collision.b2DistanceOutput = B;
                    Box2D.Collision.b2DistanceProxy = Q;
                    Box2D.Collision.b2DynamicTree = V;
                    Box2D.Collision.b2DynamicTreeBroadPhase = M;
                    Box2D.Collision.b2DynamicTreeNode = L;
                    Box2D.Collision.b2DynamicTreePair = I;
                    Box2D.Collision.b2Manifold = W;
                    Box2D.Collision.b2ManifoldPoint = Y;
                    Box2D.Collision.b2Point = k;
                    Box2D.Collision.b2RayCastInput = z;
                    Box2D.Collision.b2RayCastOutput = u;
                    Box2D.Collision.b2Segment = D;
                    Box2D.Collision.b2SeparationFunction = H;
                    Box2D.Collision.b2Simplex = O;
                    Box2D.Collision.b2SimplexCache = E;
                    Box2D.Collision.b2SimplexVertex = R;
                    Box2D.Collision.b2TimeOfImpact = N;
                    Box2D.Collision.b2TOIInput = S;
                    Box2D.Collision.b2WorldManifold = aa;
                    Box2D.Collision.ClipVertex = Z;
                    Box2D.Collision.Features = d;
                    Box2D.Collision.Shapes.b2CircleShape = h;
                    Box2D.Collision.Shapes.b2EdgeChainDef = l;
                    Box2D.Collision.Shapes.b2EdgeShape = j;
                    Box2D.Collision.Shapes.b2MassData = o;
                    Box2D.Collision.Shapes.b2PolygonShape = q;
                    Box2D.Collision.Shapes.b2Shape = n;
                    Box2D.Common.b2internal = lS(0, 10);
                    Box2D.Common.b2Color = a;
                    Box2D.Common.b2Settings = c;
                    Box2D.Common.Math.b2Mat22 = g;
                    Box2D.Common.Math.b2Mat33 = b;
                    Box2D.Common.Math.b2Math = e;
                    Box2D.Common.Math.b2Sweep = f;
                    Box2D.Common.Math.b2Transform = m;
                    Box2D.Common.Math.b2Vec2 = r;
                    Box2D.Common.Math.b2Vec3 = s;
                    Box2D.Dynamics.b2Body = v;
                    Box2D.Dynamics.b2BodyDef = t;
                    Box2D.Dynamics.b2ContactFilter = x;
                    Box2D.Dynamics.b2ContactImpulse = C;
                    Box2D.Dynamics.b2ContactListener = J;
                    Box2D.Dynamics.b2ContactManager = T;
                    Box2D.Dynamics.b2DebugDraw = P;
                    Box2D.Dynamics.b2DestructionListener = X;
                    Box2D.Dynamics.b2FilterData = $;
                    Box2D.Dynamics.b2Fixture = ba;
                    Box2D.Dynamics.b2FixtureDef = ca;
                    Box2D.Dynamics.b2Island = da;
                    Box2D.Dynamics.b2TimeStep = Fa;
                    Box2D.Dynamics.b2World = ea;
                    Box2D.Dynamics.Contacts.b2CircleContact = Ga;
                    Box2D.Dynamics.Contacts.b2Contact = fa;
                    Box2D.Dynamics.Contacts.b2ContactConstraint = ga;
                    Box2D.Dynamics.Contacts.b2ContactConstraintPoint = Ha;
                    Box2D.Dynamics.Contacts.b2ContactEdge = Ia;
                    Box2D.Dynamics.Contacts.b2ContactFactory = ha;
                    Box2D.Dynamics.Contacts.b2ContactRegister = Ja;
                    Box2D.Dynamics.Contacts.b2ContactResult = Ka;
                    Box2D.Dynamics.Contacts.b2ContactSolver = ia;
                    Box2D.Dynamics.Contacts.b2EdgeAndCircleContact = La;
                    Box2D.Dynamics.Contacts.b2NullContact = ja;
                    Box2D.Dynamics.Contacts.b2PolyAndCircleContact = Ma;
                    Box2D.Dynamics.Contacts.b2PolyAndEdgeContact = Na;
                    Box2D.Dynamics.Contacts.b2PolygonContact = Oa;
                    Box2D.Dynamics.Contacts.b2PositionSolverManifold = ka;
                    Box2D.Dynamics.Controllers.b2BuoyancyController = Pa;
                    Box2D.Dynamics.Controllers.b2ConstantAccelController = Qa;
                    Box2D.Dynamics.Controllers.b2ConstantForceController = Ra;
                    Box2D.Dynamics.Controllers.b2Controller = Sa;
                    Box2D.Dynamics.Controllers.b2ControllerEdge = Ta;
                    Box2D.Dynamics.Controllers.b2GravityController = Ua;
                    Box2D.Dynamics.Controllers.b2TensorDampingController = Va;
                    Box2D.Dynamics.Joints.b2DistanceJoint = la;
                    Box2D.Dynamics.Joints.b2DistanceJointDef = ma;
                    Box2D.Dynamics.Joints.b2FrictionJoint = na;
                    Box2D.Dynamics.Joints.b2FrictionJointDef = oa;
                    Box2D.Dynamics.Joints.b2GearJoint = pa;
                    Box2D.Dynamics.Joints.b2GearJointDef = qa;
                    Box2D.Dynamics.Joints.b2Jacobian = Wa;
                    Box2D.Dynamics.Joints.b2Joint = ra;
                    Box2D.Dynamics.Joints.b2JointDef = sa;
                    Box2D.Dynamics.Joints.b2JointEdge = Xa;
                    Box2D.Dynamics.Joints.b2LineJoint = ta;
                    Box2D.Dynamics.Joints.b2LineJointDef = ua;
                    Box2D.Dynamics.Joints.b2MouseJoint = va;
                    Box2D.Dynamics.Joints.b2MouseJointDef = wa;
                    Box2D.Dynamics.Joints.b2PrismaticJoint = xa;
                    Box2D.Dynamics.Joints.b2PrismaticJointDef = ya;
                    Box2D.Dynamics.Joints.b2PulleyJoint = za;
                    Box2D.Dynamics.Joints.b2PulleyJointDef = Aa;
                    Box2D.Dynamics.Joints.b2RevoluteJoint = Ba;
                    Box2D.Dynamics.Joints.b2RevoluteJointDef = Ca;
                    Box2D.Dynamics.Joints.b2WeldJoint = Da;
                    Box2D.Dynamics.Joints.b2WeldJointDef = Ea;
                }());
            }
        }
    });
    const __exports = __callInstance891.exports;
    return __exports.data();
})();
Box2D.postDefs = [];
(() => {
    const __callInstance788 = new WebAssembly.Instance(__callWasmModule, {
        env: {
            impFunc: () => {
                (function () {
                    var F = Box2D.Collision.Shapes.b2CircleShape, G = Box2D.Collision.Shapes.b2PolygonShape, K = Box2D.Collision.Shapes.b2Shape, y = Box2D.Common.b2Settings, w = Box2D.Common.Math.b2Math, A = Box2D.Common.Math.b2Sweep, U = Box2D.Common.Math.b2Transform, p = Box2D.Common.Math.b2Vec2, B = Box2D.Collision.b2AABB, Q = Box2D.Collision.b2Bound, V = Box2D.Collision.b2BoundValues, M = Box2D.Collision.b2Collision, L = Box2D.Collision.b2ContactID, I = Box2D.Collision.b2ContactPoint, W = Box2D.Collision.b2Distance, Y = Box2D.Collision.b2DistanceInput, k = Box2D.Collision.b2DistanceOutput, z = Box2D.Collision.b2DistanceProxy, u = Box2D.Collision.b2DynamicTree, D = Box2D.Collision.b2DynamicTreeBroadPhase, H = Box2D.Collision.b2DynamicTreeNode, O = Box2D.Collision.b2DynamicTreePair, E = Box2D.Collision.b2Manifold, R = Box2D.Collision.b2ManifoldPoint, N = Box2D.Collision.b2Point, S = Box2D.Collision.b2RayCastInput, aa = Box2D.Collision.b2RayCastOutput, Z = Box2D.Collision.b2Segment, d = Box2D.Collision.b2SeparationFunction, h = Box2D.Collision.b2Simplex, l = Box2D.Collision.b2SimplexCache, j = Box2D.Collision.b2SimplexVertex, o = Box2D.Collision.b2TimeOfImpact, q = Box2D.Collision.b2TOIInput, n = Box2D.Collision.b2WorldManifold, a = Box2D.Collision.ClipVertex, c = Box2D.Collision.Features, g = Box2D.Collision.IBroadPhase;
                    B.b2AABB = function () {
                        this.lowerBound = new p();
                        this.upperBound = new p();
                    };
                    B.prototype.IsValid = function () {
                        var b = this.upperBound.y - this.lowerBound.y;
                        return b = (b = this.upperBound.x - this.lowerBound.x >= 0 && b >= 0) && this.lowerBound.IsValid() && this.upperBound.IsValid();
                    };
                    B.prototype.GetCenter = function () {
                        return new p((this.lowerBound.x + this.upperBound.x) / 2, (this.lowerBound.y + this.upperBound.y) / 2);
                    };
                    B.prototype.GetExtents = function () {
                        return new p((this.upperBound.x - this.lowerBound.x) / 2, (this.upperBound.y - this.lowerBound.y) / 2);
                    };
                    B.prototype.Contains = function (b) {
                        var e = true;
                        return e = (e = (e = (e = e && this.lowerBound.x <= b.lowerBound.x) && this.lowerBound.y <= b.lowerBound.y) && b.upperBound.x <= this.upperBound.x) && b.upperBound.y <= this.upperBound.y;
                    };
                    B.prototype.RayCast = function (b, e) {
                        var f = -Number.MAX_VALUE, m = Number.MAX_VALUE, r = e.p1.x, s = e.p1.y, v = e.p2.x - e.p1.x, t = e.p2.y - e.p1.y, x = Math.abs(t), C = b.normal, J = 0, T = 0, P = J = 0;
                        P = 0;
                        if (Math.abs(v) < Number.MIN_VALUE) {
                            if (r < this.lowerBound.x || this.upperBound.x < r)
                                return false;
                        } else {
                            J = 1 / v;
                            T = (this.lowerBound.x - r) * J;
                            J = (this.upperBound.x - r) * J;
                            P = -1;
                            (() => {
                                const __ifInstance11 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                P = T;
                                                T = J;
                                                J = P;
                                                P = 1;
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance11.exports;
                                return __exports.data(T > J ? 1 : 0);
                            })();
                            (() => {
                                const __ifInstance12 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                C.x = P;
                                                C.y = 0;
                                                f = T;
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance12.exports;
                                return __exports.data(T > f ? 1 : 0);
                            })();
                            m = Math.min(m, J);
                            if (f > m)
                                return false;
                        }
                        if (x < Number.MIN_VALUE) {
                            if (s < this.lowerBound.y || this.upperBound.y < s)
                                return false;
                        } else {
                            J = 1 / t;
                            T = (this.lowerBound.y - s) * J;
                            J = (this.upperBound.y - s) * J;
                            P = -1;
                            (() => {
                                const __ifInstance13 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                P = T;
                                                T = J;
                                                J = P;
                                                P = 1;
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance13.exports;
                                return __exports.data(T > J ? 1 : 0);
                            })();
                            (() => {
                                const __ifInstance14 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                C.y = P;
                                                C.x = 0;
                                                f = T;
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance14.exports;
                                return __exports.data(T > f ? 1 : 0);
                            })();
                            m = Math.min(m, J);
                            if (f > m)
                                return false;
                        }
                        b.fraction = f;
                        return true;
                    };
                    B.prototype.TestOverlap = function (b) {
                        var e = b.lowerBound.y - this.upperBound.y, f = this.lowerBound.y - b.upperBound.y;
                        if (b.lowerBound.x - this.upperBound.x > 0 || e > 0)
                            return false;
                        if (this.lowerBound.x - b.upperBound.x > 0 || f > 0)
                            return false;
                        return true;
                    };
                    B.Combine = function (b, e) {
                        var f = new B();
                        (() => {
                            const __callInstance787 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        f.Combine(b, e);
                                    }
                                }
                            });
                            const __exports = __callInstance787.exports;
                            return __exports.data();
                        })();
                        return f;
                    };
                    B.prototype.Combine = function (b, e) {
                        this.lowerBound.x = Math.min(b.lowerBound.x, e.lowerBound.x);
                        this.lowerBound.y = Math.min(b.lowerBound.y, e.lowerBound.y);
                        this.upperBound.x = Math.max(b.upperBound.x, e.upperBound.x);
                        this.upperBound.y = Math.max(b.upperBound.y, e.upperBound.y);
                    };
                    Q.b2Bound = function () {
                    };
                    Q.prototype.IsLower = function () {
                        return (this.value & 1) == 0;
                    };
                    Q.prototype.IsUpper = function () {
                        return (this.value & 1) == 1;
                    };
                    Q.prototype.Swap = function (b) {
                        var e = this.value, f = this.proxy, m = this.stabbingCount;
                        this.value = b.value;
                        this.proxy = b.proxy;
                        this.stabbingCount = b.stabbingCount;
                        b.value = e;
                        b.proxy = f;
                        b.stabbingCount = m;
                    };
                    V.b2BoundValues = function () {
                    };
                    V.prototype.b2BoundValues = function () {
                        this.lowerValues = new Vector_a2j_Number();
                        this.lowerValues[0] = 0;
                        this.lowerValues[1] = 0;
                        this.upperValues = new Vector_a2j_Number();
                        this.upperValues[0] = 0;
                        this.upperValues[1] = 0;
                    };
                    M.b2Collision = function () {
                    };
                    M.ClipSegmentToLine = function (b, e, f, m) {
                        (() => {
                            const __ifInstance15 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        m = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance15.exports;
                            return __exports.data(m === undefined ? 1 : 0);
                        })();
                        var r, s = 0;
                        r = e[0];
                        var v = r.v;
                        r = e[1];
                        var t = r.v, x = f.x * v.x + f.y * v.y - m;
                        r = f.x * t.x + f.y * t.y - m;
                        x <= 0 && b[s++].Set(e[0]);
                        r <= 0 && b[s++].Set(e[1]);
                        (() => {
                            const __ifInstance16 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            f = x / (x - r);
                                            r = b[s];
                                            r = r.v;
                                            r.x = v.x + f * (t.x - v.x);
                                            r.y = v.y + f * (t.y - v.y);
                                            r = b[s];
                                            r.id = (x > 0 ? e[0] : e[1]).id;
                                            ++s;
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance16.exports;
                            return __exports.data(x * r < 0 ? 1 : 0);
                        })();
                        return s;
                    };
                    M.EdgeSeparation = function (b, e, f, m, r) {
                        (() => {
                            const __ifInstance17 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        f = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance17.exports;
                            return __exports.data(f === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __callInstance786 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        parseInt(b.m_vertexCount);
                                    }
                                }
                            });
                            const __exports = __callInstance786.exports;
                            return __exports.data();
                        })();
                        var s = b.m_vertices;
                        b = b.m_normals;
                        var v = parseInt(m.m_vertexCount), t = m.m_vertices, x, C;
                        x = e.R;
                        C = b[f];
                        b = x.col1.x * C.x + x.col2.x * C.y;
                        m = x.col1.y * C.x + x.col2.y * C.y;
                        x = r.R;
                        var J = x.col1.x * b + x.col1.y * m;
                        x = x.col2.x * b + x.col2.y * m;
                        (() => {
                            var T = 0, P = Number.MAX_VALUE, X = 0;
                            const __forInstance1 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return X < v ? 1 : 0;
                                    },
                                    update: () => {
                                        ++X;
                                    },
                                    body: () => {
                                        {
                                            C = t[X];
                                            C = C.x * J + C.y * x;
                                            (() => {
                                                const __ifInstance18 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                P = C;
                                                                T = X;
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance18.exports;
                                                return __exports.data(C < P ? 1 : 0);
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance1.exports;
                            return __exports.data();
                        })();
                        C = s[f];
                        x = e.R;
                        f = e.position.x + (x.col1.x * C.x + x.col2.x * C.y);
                        e = e.position.y + (x.col1.y * C.x + x.col2.y * C.y);
                        C = t[T];
                        x = r.R;
                        s = r.position.x + (x.col1.x * C.x + x.col2.x * C.y);
                        r = r.position.y + (x.col1.y * C.x + x.col2.y * C.y);
                        s -= f;
                        r -= e;
                        return s * b + r * m;
                    };
                    M.FindMaxSeparation = function (b, e, f, m, r) {
                        var s = parseInt(e.m_vertexCount), v = e.m_normals, t, x;
                        x = r.R;
                        t = m.m_centroid;
                        var C = r.position.x + (x.col1.x * t.x + x.col2.x * t.y), J = r.position.y + (x.col1.y * t.x + x.col2.y * t.y);
                        x = f.R;
                        t = e.m_centroid;
                        C -= f.position.x + (x.col1.x * t.x + x.col2.x * t.y);
                        J -= f.position.y + (x.col1.y * t.x + x.col2.y * t.y);
                        x = C * f.R.col1.x + J * f.R.col1.y;
                        J = C * f.R.col2.x + J * f.R.col2.y;
                        C = 0;
                        (() => {
                            var T = -Number.MAX_VALUE, P = 0;
                            const __forInstance2 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return P < s ? 1 : 0;
                                    },
                                    update: () => {
                                        ++P;
                                    },
                                    body: () => {
                                        {
                                            t = v[P];
                                            t = t.x * x + t.y * J;
                                            (() => {
                                                const __ifInstance19 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                T = t;
                                                                C = P;
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance19.exports;
                                                return __exports.data(t > T ? 1 : 0);
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance2.exports;
                            return __exports.data();
                        })();
                        v = M.EdgeSeparation(e, f, C, m, r);
                        t = parseInt(C - 1 >= 0 ? C - 1 : s - 1);
                        x = M.EdgeSeparation(e, f, t, m, r);
                        J = parseInt(C + 1 < s ? C + 1 : 0);
                        T = M.EdgeSeparation(e, f, J, m, r);
                        var X = P = 0, $ = 0;
                        if (x > v && x > T) {
                            $ = -1;
                            P = t;
                            X = x;
                        } else if (T > v) {
                            $ = 1;
                            P = J;
                            X = T;
                        } else {
                            b[0] = C;
                            return v;
                        }
                        for (;;) {
                            C = $ == -1 ? P - 1 >= 0 ? P - 1 : s - 1 : P + 1 < s ? P + 1 : 0;
                            v = M.EdgeSeparation(e, f, C, m, r);
                            if (v > X) {
                                P = C;
                                X = v;
                            } else
                                break;
                        }
                        b[0] = P;
                        return X;
                    };
                    M.FindIncidentEdge = function (b, e, f, m, r, s) {
                        (() => {
                            const __ifInstance20 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        m = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance20.exports;
                            return __exports.data(m === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __callInstance785 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        parseInt(e.m_vertexCount);
                                    }
                                }
                            });
                            const __exports = __callInstance785.exports;
                            return __exports.data();
                        })();
                        var v = e.m_normals, t = parseInt(r.m_vertexCount);
                        e = r.m_vertices;
                        r = r.m_normals;
                        var x;
                        x = f.R;
                        f = v[m];
                        v = x.col1.x * f.x + x.col2.x * f.y;
                        var C = x.col1.y * f.x + x.col2.y * f.y;
                        x = s.R;
                        f = x.col1.x * v + x.col1.y * C;
                        C = x.col2.x * v + x.col2.y * C;
                        v = f;
                        x = 0;
                        (() => {
                            var J = Number.MAX_VALUE, T = 0;
                            const __forInstance3 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return T < t ? 1 : 0;
                                    },
                                    update: () => {
                                        ++T;
                                    },
                                    body: () => {
                                        {
                                            f = r[T];
                                            f = v * f.x + C * f.y;
                                            (() => {
                                                const __ifInstance21 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                J = f;
                                                                x = T;
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance21.exports;
                                                return __exports.data(f < J ? 1 : 0);
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance3.exports;
                            return __exports.data();
                        })();
                        r = parseInt(x);
                        v = parseInt(r + 1 < t ? r + 1 : 0);
                        t = b[0];
                        f = e[r];
                        x = s.R;
                        t.v.x = s.position.x + (x.col1.x * f.x + x.col2.x * f.y);
                        t.v.y = s.position.y + (x.col1.y * f.x + x.col2.y * f.y);
                        t.id.features.referenceEdge = m;
                        t.id.features.incidentEdge = r;
                        t.id.features.incidentVertex = 0;
                        t = b[1];
                        f = e[v];
                        x = s.R;
                        t.v.x = s.position.x + (x.col1.x * f.x + x.col2.x * f.y);
                        t.v.y = s.position.y + (x.col1.y * f.x + x.col2.y * f.y);
                        t.id.features.referenceEdge = m;
                        t.id.features.incidentEdge = v;
                        t.id.features.incidentVertex = 1;
                    };
                    M.MakeClipPointVector = function () {
                        var b = new Vector(2);
                        b[0] = new a();
                        b[1] = new a();
                        return b;
                    };
                    M.CollidePolygons = function (b, e, f, m, r) {
                        var s;
                        b.m_pointCount = 0;
                        var v = e.m_radius + m.m_radius;
                        s = 0;
                        M.s_edgeAO[0] = s;
                        var t = M.FindMaxSeparation(M.s_edgeAO, e, f, m, r);
                        s = M.s_edgeAO[0];
                        (() => {
                            const __ifInstance22 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            var x = 0;
                                            M.s_edgeBO[0] = x;
                                            var C = M.FindMaxSeparation(M.s_edgeBO, m, r, e, f);
                                            x = M.s_edgeBO[0];
                                            (() => {
                                                const __ifInstance23 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                var J = 0, T = 0;
                                                                (() => {
                                                                    const __ifInstance24 = new WebAssembly.Instance(__ifWasmModule, {
                                                                        env: {
                                                                            impFunc1: () => {
                                                                                {
                                                                                    t = m;
                                                                                    m = e;
                                                                                    e = r;
                                                                                    f = f;
                                                                                    J = x;
                                                                                    b.m_type = E.e_faceB;
                                                                                    T = 1;
                                                                                }
                                                                            },
                                                                            impFunc2: () => {
                                                                                {
                                                                                    t = e;
                                                                                    m = m;
                                                                                    e = f;
                                                                                    f = r;
                                                                                    J = s;
                                                                                    b.m_type = E.e_faceA;
                                                                                    T = 0;
                                                                                }
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __ifInstance24.exports;
                                                                    return __exports.data(C > 0.98 * t + 0.001 ? 1 : 0);
                                                                })();
                                                                s = M.s_incidentEdge;
                                                                (() => {
                                                                    const __callInstance784 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                M.FindIncidentEdge(s, t, e, J, m, f);
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance784.exports;
                                                                    return __exports.data();
                                                                })();
                                                                x = parseInt(t.m_vertexCount);
                                                                r = t.m_vertices;
                                                                t = r[J];
                                                                var P;
                                                                P = J + 1 < x ? r[parseInt(J + 1)] : r[0];
                                                                J = M.s_localTangent;
                                                                (() => {
                                                                    const __callInstance783 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                J.Set(P.x - t.x, P.y - t.y);
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance783.exports;
                                                                    return __exports.data();
                                                                })();
                                                                (() => {
                                                                    const __callInstance782 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                J.Normalize();
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance782.exports;
                                                                    return __exports.data();
                                                                })();
                                                                r = M.s_localNormal;
                                                                r.x = J.y;
                                                                r.y = -J.x;
                                                                m = M.s_planePoint;
                                                                (() => {
                                                                    const __callInstance781 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                m.Set(0.5 * (t.x + P.x), 0.5 * (t.y + P.y));
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance781.exports;
                                                                    return __exports.data();
                                                                })();
                                                                C = M.s_tangent;
                                                                x = e.R;
                                                                C.x = x.col1.x * J.x + x.col2.x * J.y;
                                                                C.y = x.col1.y * J.x + x.col2.y * J.y;
                                                                var X = M.s_tangent2;
                                                                X.x = -C.x;
                                                                X.y = -C.y;
                                                                J = M.s_normal;
                                                                J.x = C.y;
                                                                J.y = -C.x;
                                                                var $ = M.s_v11, ba = M.s_v12;
                                                                $.x = e.position.x + (x.col1.x * t.x + x.col2.x * t.y);
                                                                $.y = e.position.y + (x.col1.y * t.x + x.col2.y * t.y);
                                                                ba.x = e.position.x + (x.col1.x * P.x + x.col2.x * P.y);
                                                                ba.y = e.position.y + (x.col1.y * P.x + x.col2.y * P.y);
                                                                e = J.x * $.x + J.y * $.y;
                                                                x = C.x * ba.x + C.y * ba.y + v;
                                                                P = M.s_clipPoints1;
                                                                t = M.s_clipPoints2;
                                                                ba = 0;
                                                                ba = M.ClipSegmentToLine(P, s, X, -C.x * $.x - C.y * $.y + v);
                                                                (() => {
                                                                    const __ifInstance25 = new WebAssembly.Instance(__ifWasmModule, {
                                                                        env: {
                                                                            impFunc1: () => {
                                                                                {
                                                                                    ba = M.ClipSegmentToLine(t, P, C, x);
                                                                                    (() => {
                                                                                        const __ifInstance26 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                            env: {
                                                                                                impFunc1: () => {
                                                                                                    {
                                                                                                        (() => {
                                                                                                            const __callInstance780 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                env: {
                                                                                                                    impFunc: () => {
                                                                                                                        b.m_localPlaneNormal.SetV(r);
                                                                                                                    }
                                                                                                                }
                                                                                                            });
                                                                                                            const __exports = __callInstance780.exports;
                                                                                                            return __exports.data();
                                                                                                        })();
                                                                                                        (() => {
                                                                                                            const __callInstance779 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                env: {
                                                                                                                    impFunc: () => {
                                                                                                                        b.m_localPoint.SetV(m);
                                                                                                                    }
                                                                                                                }
                                                                                                            });
                                                                                                            const __exports = __callInstance779.exports;
                                                                                                            return __exports.data();
                                                                                                        })();
                                                                                                        (() => {
                                                                                                            m = r = 0;
                                                                                                            const __forInstance4 = new WebAssembly.Instance(__forWasmModule, {
                                                                                                                env: {
                                                                                                                    test: () => {
                                                                                                                        return m < y.b2_maxManifoldPoints ? 1 : 0;
                                                                                                                    },
                                                                                                                    update: () => {
                                                                                                                        ++m;
                                                                                                                    },
                                                                                                                    body: () => {
                                                                                                                        {
                                                                                                                            s = t[m];
                                                                                                                            (() => {
                                                                                                                                const __ifInstance27 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                                    env: {
                                                                                                                                        impFunc1: () => {
                                                                                                                                            {
                                                                                                                                                C = b.m_points[r];
                                                                                                                                                x = f.R;
                                                                                                                                                X = s.v.x - f.position.x;
                                                                                                                                                $ = s.v.y - f.position.y;
                                                                                                                                                C.m_localPoint.x = X * x.col1.x + $ * x.col1.y;
                                                                                                                                                C.m_localPoint.y = X * x.col2.x + $ * x.col2.y;
                                                                                                                                                (() => {
                                                                                                                                                    const __callInstance778 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                                                        env: {
                                                                                                                                                            impFunc: () => {
                                                                                                                                                                C.m_id.Set(s.id);
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    });
                                                                                                                                                    const __exports = __callInstance778.exports;
                                                                                                                                                    return __exports.data();
                                                                                                                                                })();
                                                                                                                                                C.m_id.features.flip = T;
                                                                                                                                                ++r;
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        impFunc2: () => {
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                });
                                                                                                                                const __exports = __ifInstance27.exports;
                                                                                                                                return __exports.data(J.x * s.v.x + J.y * s.v.y - e <= v ? 1 : 0);
                                                                                                                            })();
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            });
                                                                                                            const __exports = __forInstance4.exports;
                                                                                                            return __exports.data();
                                                                                                        })();
                                                                                                        b.m_pointCount = r;
                                                                                                    }
                                                                                                },
                                                                                                impFunc2: () => {
                                                                                                }
                                                                                            }
                                                                                        });
                                                                                        const __exports = __ifInstance26.exports;
                                                                                        return __exports.data(!(ba < 2) ? 1 : 0);
                                                                                    })();
                                                                                }
                                                                            },
                                                                            impFunc2: () => {
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __ifInstance25.exports;
                                                                    return __exports.data(!(ba < 2) ? 1 : 0);
                                                                })();
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance23.exports;
                                                return __exports.data(!(C > v) ? 1 : 0);
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance22.exports;
                            return __exports.data(!(t > v) ? 1 : 0);
                        })();
                    };
                    M.CollideCircles = function (b, e, f, m, r) {
                        b.m_pointCount = 0;
                        var s, v;
                        s = f.R;
                        v = e.m_p;
                        var t = f.position.x + (s.col1.x * v.x + s.col2.x * v.y);
                        f = f.position.y + (s.col1.y * v.x + s.col2.y * v.y);
                        s = r.R;
                        v = m.m_p;
                        t = r.position.x + (s.col1.x * v.x + s.col2.x * v.y) - t;
                        r = r.position.y + (s.col1.y * v.x + s.col2.y * v.y) - f;
                        s = e.m_radius + m.m_radius;
                        (() => {
                            const __ifInstance28 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            b.m_type = E.e_circles;
                                            (() => {
                                                const __callInstance777 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            b.m_localPoint.SetV(e.m_p);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance777.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance776 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            b.m_localPlaneNormal.SetZero();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance776.exports;
                                                return __exports.data();
                                            })();
                                            b.m_pointCount = 1;
                                            (() => {
                                                const __callInstance775 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            b.m_points[0].m_localPoint.SetV(m.m_p);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance775.exports;
                                                return __exports.data();
                                            })();
                                            b.m_points[0].m_id.key = 0;
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance28.exports;
                            return __exports.data(!(t * t + r * r > s * s) ? 1 : 0);
                        })();
                    };
                    M.CollidePolygonAndCircle = function (b, e, f, m, r) {
                        var s = b.m_pointCount = 0, v = 0, t, x;
                        x = r.R;
                        t = m.m_p;
                        var C = r.position.y + (x.col1.y * t.x + x.col2.y * t.y);
                        s = r.position.x + (x.col1.x * t.x + x.col2.x * t.y) - f.position.x;
                        v = C - f.position.y;
                        x = f.R;
                        f = s * x.col1.x + v * x.col1.y;
                        x = s * x.col2.x + v * x.col2.y;
                        var J = 0;
                        C = -Number.MAX_VALUE;
                        r = e.m_radius + m.m_radius;
                        var T = parseInt(e.m_vertexCount), P = e.m_vertices;
                        e = e.m_normals;
                        for (var X = 0; X < T; ++X) {
                            t = P[X];
                            s = f - t.x;
                            v = x - t.y;
                            t = e[X];
                            s = t.x * s + t.y * v;
                            if (s > r)
                                return;
                            (() => {
                                const __ifInstance29 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                C = s;
                                                J = X;
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance29.exports;
                                return __exports.data(s > C ? 1 : 0);
                            })();
                        }
                        s = parseInt(J);
                        v = parseInt(s + 1 < T ? s + 1 : 0);
                        t = P[s];
                        P = P[v];
                        if (C < Number.MIN_VALUE) {
                            b.m_pointCount = 1;
                            b.m_type = E.e_faceA;
                            (() => {
                                const __callInstance774 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            b.m_localPlaneNormal.SetV(e[J]);
                                        }
                                    }
                                });
                                const __exports = __callInstance774.exports;
                                return __exports.data();
                            })();
                            b.m_localPoint.x = 0.5 * (t.x + P.x);
                            b.m_localPoint.y = 0.5 * (t.y + P.y);
                        } else {
                            C = (f - P.x) * (t.x - P.x) + (x - P.y) * (t.y - P.y);
                            if ((f - t.x) * (P.x - t.x) + (x - t.y) * (P.y - t.y) <= 0) {
                                if ((f - t.x) * (f - t.x) + (x - t.y) * (x - t.y) > r * r)
                                    return;
                                b.m_pointCount = 1;
                                b.m_type = E.e_faceA;
                                b.m_localPlaneNormal.x = f - t.x;
                                b.m_localPlaneNormal.y = x - t.y;
                                (() => {
                                    const __callInstance773 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                b.m_localPlaneNormal.Normalize();
                                            }
                                        }
                                    });
                                    const __exports = __callInstance773.exports;
                                    return __exports.data();
                                })();
                                (() => {
                                    const __callInstance772 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                b.m_localPoint.SetV(t);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance772.exports;
                                    return __exports.data();
                                })();
                            } else if (C <= 0) {
                                if ((f - P.x) * (f - P.x) + (x - P.y) * (x - P.y) > r * r)
                                    return;
                                b.m_pointCount = 1;
                                b.m_type = E.e_faceA;
                                b.m_localPlaneNormal.x = f - P.x;
                                b.m_localPlaneNormal.y = x - P.y;
                                (() => {
                                    const __callInstance771 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                b.m_localPlaneNormal.Normalize();
                                            }
                                        }
                                    });
                                    const __exports = __callInstance771.exports;
                                    return __exports.data();
                                })();
                                (() => {
                                    const __callInstance770 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                b.m_localPoint.SetV(P);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance770.exports;
                                    return __exports.data();
                                })();
                            } else {
                                J = 0.5 * (t.x + P.x);
                                t = 0.5 * (t.y + P.y);
                                C = (f - J) * e[s].x + (x - t) * e[s].y;
                                if (C > r)
                                    return;
                                b.m_pointCount = 1;
                                b.m_type = E.e_faceA;
                                b.m_localPlaneNormal.x = e[s].x;
                                b.m_localPlaneNormal.y = e[s].y;
                                (() => {
                                    const __callInstance769 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                b.m_localPlaneNormal.Normalize();
                                            }
                                        }
                                    });
                                    const __exports = __callInstance769.exports;
                                    return __exports.data();
                                })();
                                (() => {
                                    const __callInstance768 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                b.m_localPoint.Set(J, t);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance768.exports;
                                    return __exports.data();
                                })();
                            }
                        }
                        (() => {
                            const __callInstance767 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        b.m_points[0].m_localPoint.SetV(m.m_p);
                                    }
                                }
                            });
                            const __exports = __callInstance767.exports;
                            return __exports.data();
                        })();
                        b.m_points[0].m_id.key = 0;
                    };
                    M.TestOverlap = function (b, e) {
                        var f = e.lowerBound, m = b.upperBound, r = f.x - m.x, s = f.y - m.y;
                        f = b.lowerBound;
                        m = e.upperBound;
                        var v = f.y - m.y;
                        if (r > 0 || s > 0)
                            return false;
                        if (f.x - m.x > 0 || v > 0)
                            return false;
                        return true;
                    };
                    (() => {
                        const __callInstance766 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.postDefs.push(function () {
                                        Box2D.Collision.b2Collision.s_incidentEdge = M.MakeClipPointVector();
                                        Box2D.Collision.b2Collision.s_clipPoints1 = M.MakeClipPointVector();
                                        Box2D.Collision.b2Collision.s_clipPoints2 = M.MakeClipPointVector();
                                        Box2D.Collision.b2Collision.s_edgeAO = new Vector_a2j_Number(1);
                                        Box2D.Collision.b2Collision.s_edgeBO = new Vector_a2j_Number(1);
                                        Box2D.Collision.b2Collision.s_localTangent = new p();
                                        Box2D.Collision.b2Collision.s_localNormal = new p();
                                        Box2D.Collision.b2Collision.s_planePoint = new p();
                                        Box2D.Collision.b2Collision.s_normal = new p();
                                        Box2D.Collision.b2Collision.s_tangent = new p();
                                        Box2D.Collision.b2Collision.s_tangent2 = new p();
                                        Box2D.Collision.b2Collision.s_v11 = new p();
                                        Box2D.Collision.b2Collision.s_v12 = new p();
                                        Box2D.Collision.b2Collision.b2CollidePolyTempVec = new p();
                                        Box2D.Collision.b2Collision.b2_nullFeature = 255;
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance766.exports;
                        return __exports.data();
                    })();
                    L.b2ContactID = function () {
                        this.features = new c();
                    };
                    L.prototype.b2ContactID = function () {
                        this.features._m_id = this;
                    };
                    L.prototype.Set = function (b) {
                        this.key = b._key;
                    };
                    L.prototype.Copy = function () {
                        var b = new L();
                        b.key = this.key;
                        return b;
                    };
                    (() => {
                        const __callInstance765 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Object.defineProperty(L.prototype, lS(0, 11), {
                                        enumerable: false,
                                        configurable: true,
                                        get: function () {
                                            return this._key;
                                        }
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance765.exports;
                        return __exports.data();
                    })();
                    (() => {
                        const __callInstance764 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Object.defineProperty(L.prototype, lS(0, 12), {
                                        enumerable: false,
                                        configurable: true,
                                        set: function (b) {
                                            (() => {
                                                const __ifInstance30 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            b = 0;
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance30.exports;
                                                return __exports.data(b === undefined ? 1 : 0);
                                            })();
                                            this._key = b;
                                            this.features._referenceEdge = this._key & 255;
                                            this.features._incidentEdge = (this._key & 65280) >> 8 & 255;
                                            this.features._incidentVertex = (this._key & 16711680) >> 16 & 255;
                                            this.features._flip = (this._key & 4278190080) >> 24 & 255;
                                        }
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance764.exports;
                        return __exports.data();
                    })();
                    I.b2ContactPoint = function () {
                        this.position = new p();
                        this.velocity = new p();
                        this.normal = new p();
                        this.id = new L();
                    };
                    W.b2Distance = function () {
                    };
                    W.Distance = function (b, e, f) {
                        ++W.b2_gjkCalls;
                        var m = f.proxyA, r = f.proxyB, s = f.transformA, v = f.transformB, t = W.s_simplex;
                        (() => {
                            const __callInstance763 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        t.ReadCache(e, m, s, r, v);
                                    }
                                }
                            });
                            const __exports = __callInstance763.exports;
                            return __exports.data();
                        })();
                        var x = t.m_vertices, C = W.s_saveA, J = W.s_saveB, T = 0;
                        (() => {
                            const __callInstance762 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        t.GetClosestPoint().LengthSquared();
                                    }
                                }
                            });
                            const __exports = __callInstance762.exports;
                            return __exports.data();
                        })();
                        for (var P = 0, X, $ = 0; $ < 20;) {
                            T = t.m_count;
                            (() => {
                                P = 0;
                                const __forInstance5 = new WebAssembly.Instance(__forWasmModule, {
                                    env: {
                                        test: () => {
                                            return P < T ? 1 : 0;
                                        },
                                        update: () => {
                                            P++;
                                        },
                                        body: () => {
                                            {
                                                C[P] = x[P].indexA;
                                                J[P] = x[P].indexB;
                                            }
                                        }
                                    }
                                });
                                const __exports = __forInstance5.exports;
                                return __exports.data();
                            })();
                            switch (t.m_count) {
                            case 1:
                                break;
                            case 2:
                                (() => {
                                    const __callInstance761 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                t.Solve2();
                                            }
                                        }
                                    });
                                    const __exports = __callInstance761.exports;
                                    return __exports.data();
                                })();
                                break;
                            case 3:
                                (() => {
                                    const __callInstance760 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                t.Solve3();
                                            }
                                        }
                                    });
                                    const __exports = __callInstance760.exports;
                                    return __exports.data();
                                })();
                                break;
                            default:
                                (() => {
                                    const __callInstance759 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                y.b2Assert(false);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance759.exports;
                                    return __exports.data();
                                })();
                            }
                            if (t.m_count == 3)
                                break;
                            X = t.GetClosestPoint();
                            (() => {
                                const __callInstance758 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            X.LengthSquared();
                                        }
                                    }
                                });
                                const __exports = __callInstance758.exports;
                                return __exports.data();
                            })();
                            P = t.GetSearchDirection();
                            if (P.LengthSquared() < Number.MIN_VALUE * Number.MIN_VALUE)
                                break;
                            X = x[t.m_count];
                            X.indexA = m.GetSupport(w.MulTMV(s.R, P.GetNegative()));
                            X.wA = w.MulX(s, m.GetVertex(X.indexA));
                            X.indexB = r.GetSupport(w.MulTMV(v.R, P));
                            X.wB = w.MulX(v, r.GetVertex(X.indexB));
                            X.w = w.SubtractVV(X.wB, X.wA);
                            ++$;
                            ++W.b2_gjkIters;
                            var ba = false;
                            for (P = 0; P < T; P++)
                                if (X.indexA == C[P] && X.indexB == J[P]) {
                                    ba = true;
                                    break;
                                }
                            if (ba)
                                break;
                            ++t.m_count;
                        }
                        W.b2_gjkMaxIters = w.Max(W.b2_gjkMaxIters, $);
                        (() => {
                            const __callInstance757 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        t.GetWitnessPoints(b.pointA, b.pointB);
                                    }
                                }
                            });
                            const __exports = __callInstance757.exports;
                            return __exports.data();
                        })();
                        b.distance = w.SubtractVV(b.pointA, b.pointB).Length();
                        b.iterations = $;
                        (() => {
                            const __callInstance756 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        t.WriteCache(e);
                                    }
                                }
                            });
                            const __exports = __callInstance756.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __ifInstance31 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            e = m.m_radius;
                                            r = r.m_radius;
                                            (() => {
                                                const __ifInstance32 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                b.distance -= e + r;
                                                                f = w.SubtractVV(b.pointB, b.pointA);
                                                                (() => {
                                                                    const __callInstance755 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                f.Normalize();
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance755.exports;
                                                                    return __exports.data();
                                                                })();
                                                                b.pointA.x += e * f.x;
                                                                b.pointA.y += e * f.y;
                                                                b.pointB.x -= r * f.x;
                                                                b.pointB.y -= r * f.y;
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                            {
                                                                X = new p();
                                                                X.x = 0.5 * (b.pointA.x + b.pointB.x);
                                                                X.y = 0.5 * (b.pointA.y + b.pointB.y);
                                                                b.pointA.x = b.pointB.x = X.x;
                                                                b.pointA.y = b.pointB.y = X.y;
                                                                b.distance = 0;
                                                            }
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance32.exports;
                                                return __exports.data(b.distance > e + r && b.distance > Number.MIN_VALUE ? 1 : 0);
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance31.exports;
                            return __exports.data(f.useRadii ? 1 : 0);
                        })();
                    };
                    (() => {
                        const __callInstance754 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.postDefs.push(function () {
                                        Box2D.Collision.b2Distance.s_simplex = new h();
                                        Box2D.Collision.b2Distance.s_saveA = new Vector_a2j_Number(3);
                                        Box2D.Collision.b2Distance.s_saveB = new Vector_a2j_Number(3);
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance754.exports;
                        return __exports.data();
                    })();
                    Y.b2DistanceInput = function () {
                    };
                    k.b2DistanceOutput = function () {
                        this.pointA = new p();
                        this.pointB = new p();
                    };
                    z.b2DistanceProxy = function () {
                    };
                    z.prototype.Set = function (b) {
                        switch (b.GetType()) {
                        case K.e_circleShape:
                            b = b instanceof F ? b : null;
                            this.m_vertices = new Vector(1, true);
                            this.m_vertices[0] = b.m_p;
                            this.m_count = 1;
                            this.m_radius = b.m_radius;
                            break;
                        case K.e_polygonShape:
                            b = b instanceof G ? b : null;
                            this.m_vertices = b.m_vertices;
                            this.m_count = b.m_vertexCount;
                            this.m_radius = b.m_radius;
                            break;
                        default:
                            (() => {
                                const __callInstance753 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            y.b2Assert(false);
                                        }
                                    }
                                });
                                const __exports = __callInstance753.exports;
                                return __exports.data();
                            })();
                        }
                    };
                    z.prototype.GetSupport = function (b) {
                        (() => {
                            var e = 0, f = this.m_vertices[0].x * b.x + this.m_vertices[0].y * b.y, m = 1;
                            const __forInstance6 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return m < this.m_count ? 1 : 0;
                                    },
                                    update: () => {
                                        ++m;
                                    },
                                    body: () => {
                                        {
                                            var r = this.m_vertices[m].x * b.x + this.m_vertices[m].y * b.y;
                                            (() => {
                                                const __ifInstance33 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                e = m;
                                                                f = r;
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance33.exports;
                                                return __exports.data(r > f ? 1 : 0);
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance6.exports;
                            return __exports.data();
                        })();
                        return e;
                    };
                    z.prototype.GetSupportVertex = function (b) {
                        (() => {
                            var e = 0, f = this.m_vertices[0].x * b.x + this.m_vertices[0].y * b.y, m = 1;
                            const __forInstance7 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return m < this.m_count ? 1 : 0;
                                    },
                                    update: () => {
                                        ++m;
                                    },
                                    body: () => {
                                        {
                                            var r = this.m_vertices[m].x * b.x + this.m_vertices[m].y * b.y;
                                            (() => {
                                                const __ifInstance34 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                e = m;
                                                                f = r;
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance34.exports;
                                                return __exports.data(r > f ? 1 : 0);
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance7.exports;
                            return __exports.data();
                        })();
                        return this.m_vertices[e];
                    };
                    z.prototype.GetVertexCount = function () {
                        return this.m_count;
                    };
                    z.prototype.GetVertex = function (b) {
                        (() => {
                            const __ifInstance35 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        b = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance35.exports;
                            return __exports.data(b === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __callInstance752 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        y.b2Assert(0 <= b && b < this.m_count);
                                    }
                                }
                            });
                            const __exports = __callInstance752.exports;
                            return __exports.data();
                        })();
                        return this.m_vertices[b];
                    };
                    u.b2DynamicTree = function () {
                    };
                    u.prototype.b2DynamicTree = function () {
                        this.m_freeList = this.m_root = null;
                        this.m_insertionCount = this.m_path = 0;
                    };
                    u.prototype.CreateProxy = function (b, e) {
                        var f = this.AllocateNode(), m = y.b2_aabbExtension, r = y.b2_aabbExtension;
                        f.aabb.lowerBound.x = b.lowerBound.x - m;
                        f.aabb.lowerBound.y = b.lowerBound.y - r;
                        f.aabb.upperBound.x = b.upperBound.x + m;
                        f.aabb.upperBound.y = b.upperBound.y + r;
                        f.userData = e;
                        (() => {
                            const __callInstance751 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.InsertLeaf(f);
                                    }
                                }
                            });
                            const __exports = __callInstance751.exports;
                            return __exports.data();
                        })();
                        return f;
                    };
                    u.prototype.DestroyProxy = function (b) {
                        (() => {
                            const __callInstance750 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.RemoveLeaf(b);
                                    }
                                }
                            });
                            const __exports = __callInstance750.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance749 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.FreeNode(b);
                                    }
                                }
                            });
                            const __exports = __callInstance749.exports;
                            return __exports.data();
                        })();
                    };
                    u.prototype.MoveProxy = function (b, e, f) {
                        (() => {
                            const __callInstance748 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        y.b2Assert(b.IsLeaf());
                                    }
                                }
                            });
                            const __exports = __callInstance748.exports;
                            return __exports.data();
                        })();
                        if (b.aabb.Contains(e))
                            return false;
                        (() => {
                            const __callInstance747 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.RemoveLeaf(b);
                                    }
                                }
                            });
                            const __exports = __callInstance747.exports;
                            return __exports.data();
                        })();
                        var m = y.b2_aabbExtension + y.b2_aabbMultiplier * (f.x > 0 ? f.x : -f.x);
                        f = y.b2_aabbExtension + y.b2_aabbMultiplier * (f.y > 0 ? f.y : -f.y);
                        b.aabb.lowerBound.x = e.lowerBound.x - m;
                        b.aabb.lowerBound.y = e.lowerBound.y - f;
                        b.aabb.upperBound.x = e.upperBound.x + m;
                        b.aabb.upperBound.y = e.upperBound.y + f;
                        (() => {
                            const __callInstance746 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.InsertLeaf(b);
                                    }
                                }
                            });
                            const __exports = __callInstance746.exports;
                            return __exports.data();
                        })();
                        return true;
                    };
                    u.prototype.Rebalance = function (b) {
                        (() => {
                            const __ifInstance36 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        b = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance36.exports;
                            return __exports.data(b === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance37 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        for (var e = 0; e < b; e++) {
                                            (() => {
                                                var f = this.m_root, m = 0;
                                                const __forInstance9 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return f.IsLeaf() == false ? 1 : 0;
                                                        },
                                                        update: () => {
                                                        },
                                                        body: () => {
                                                            {
                                                                f = this.m_path >> m & 1 ? f.child2 : f.child1;
                                                                m = m + 1 & 31;
                                                            }
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance9.exports;
                                                return __exports.data();
                                            })();
                                            ++this.m_path;
                                            (() => {
                                                const __callInstance745 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.RemoveLeaf(f);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance745.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance744 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.InsertLeaf(f);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance744.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance37.exports;
                            return __exports.data(this.m_root != null ? 1 : 0);
                        })();
                    };
                    u.prototype.GetFatAABB = function (b) {
                        return b.aabb;
                    };
                    u.prototype.GetUserData = function (b) {
                        return b.userData;
                    };
                    u.prototype.Query = function (b, e) {
                        if (this.m_root != null) {
                            var f = new Vector(), m = 0;
                            for (f[m++] = this.m_root; m > 0;) {
                                var r = f[--m];
                                if (r.aabb.TestOverlap(e))
                                    if (r.IsLeaf()) {
                                        if (!b(r))
                                            break;
                                    } else {
                                        f[m++] = r.child1;
                                        f[m++] = r.child2;
                                    }
                            }
                        }
                    };
                    u.prototype.RayCast = function (b, e) {
                        if (this.m_root != null) {
                            var f = e.p1, m = e.p2, r = w.SubtractVV(f, m);
                            (() => {
                                const __callInstance743 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            r.Normalize();
                                        }
                                    }
                                });
                                const __exports = __callInstance743.exports;
                                return __exports.data();
                            })();
                            r = w.CrossFV(1, r);
                            var s = w.AbsV(r), v = e.maxFraction, t = new B(), x = 0, C = 0;
                            x = f.x + v * (m.x - f.x);
                            C = f.y + v * (m.y - f.y);
                            t.lowerBound.x = Math.min(f.x, x);
                            t.lowerBound.y = Math.min(f.y, C);
                            t.upperBound.x = Math.max(f.x, x);
                            t.upperBound.y = Math.max(f.y, C);
                            var J = new Vector(), T = 0;
                            for (J[T++] = this.m_root; T > 0;) {
                                v = J[--T];
                                if (v.aabb.TestOverlap(t) != false) {
                                    x = v.aabb.GetCenter();
                                    C = v.aabb.GetExtents();
                                    if (!(Math.abs(r.x * (f.x - x.x) + r.y * (f.y - x.y)) - s.x * C.x - s.y * C.y > 0))
                                        if (v.IsLeaf()) {
                                            x = new S();
                                            x.p1 = e.p1;
                                            x.p2 = e.p2;
                                            x.maxFraction = e.maxFraction;
                                            v = b(x, v);
                                            if (v == 0)
                                                break;
                                            (() => {
                                                const __ifInstance38 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                x = f.x + v * (m.x - f.x);
                                                                C = f.y + v * (m.y - f.y);
                                                                t.lowerBound.x = Math.min(f.x, x);
                                                                t.lowerBound.y = Math.min(f.y, C);
                                                                t.upperBound.x = Math.max(f.x, x);
                                                                t.upperBound.y = Math.max(f.y, C);
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance38.exports;
                                                return __exports.data(v > 0 ? 1 : 0);
                                            })();
                                        } else {
                                            J[T++] = v.child1;
                                            J[T++] = v.child2;
                                        }
                                }
                            }
                        }
                    };
                    u.prototype.AllocateNode = function () {
                        if (this.m_freeList) {
                            var b = this.m_freeList;
                            this.m_freeList = b.parent;
                            b.parent = null;
                            b.child1 = null;
                            b.child2 = null;
                            return b;
                        }
                        return new H();
                    };
                    u.prototype.FreeNode = function (b) {
                        b.parent = this.m_freeList;
                        this.m_freeList = b;
                    };
                    u.prototype.InsertLeaf = function (b) {
                        ++this.m_insertionCount;
                        if (this.m_root == null) {
                            this.m_root = b;
                            this.m_root.parent = null;
                        } else {
                            var e = b.aabb.GetCenter(), f = this.m_root;
                            (() => {
                                const __ifInstance39 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                do {
                                                    var m = f.child1;
                                                    f = f.child2;
                                                    f = Math.abs((m.aabb.lowerBound.x + m.aabb.upperBound.x) / 2 - e.x) + Math.abs((m.aabb.lowerBound.y + m.aabb.upperBound.y) / 2 - e.y) < Math.abs((f.aabb.lowerBound.x + f.aabb.upperBound.x) / 2 - e.x) + Math.abs((f.aabb.lowerBound.y + f.aabb.upperBound.y) / 2 - e.y) ? m : f;
                                                } while (f.IsLeaf() == false);
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance39.exports;
                                return __exports.data(f.IsLeaf() == false ? 1 : 0);
                            })();
                            e = f.parent;
                            m = this.AllocateNode();
                            m.parent = e;
                            m.userData = null;
                            (() => {
                                const __callInstance742 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            m.aabb.Combine(b.aabb, f.aabb);
                                        }
                                    }
                                });
                                const __exports = __callInstance742.exports;
                                return __exports.data();
                            })();
                            if (e) {
                                (() => {
                                    const __ifInstance40 = new WebAssembly.Instance(__ifWasmModule, {
                                        env: {
                                            impFunc1: () => {
                                                e.child1 = m;
                                            },
                                            impFunc2: () => {
                                                e.child2 = m;
                                            }
                                        }
                                    });
                                    const __exports = __ifInstance40.exports;
                                    return __exports.data(f.parent.child1 == f ? 1 : 0);
                                })();
                                m.child1 = f;
                                m.child2 = b;
                                f.parent = m;
                                b.parent = m;
                                do {
                                    if (e.aabb.Contains(m.aabb))
                                        break;
                                    (() => {
                                        const __callInstance741 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    e.aabb.Combine(e.child1.aabb, e.child2.aabb);
                                                }
                                            }
                                        });
                                        const __exports = __callInstance741.exports;
                                        return __exports.data();
                                    })();
                                    m = e;
                                    e = e.parent;
                                } while (e);
                            } else {
                                m.child1 = f;
                                m.child2 = b;
                                f.parent = m;
                                this.m_root = b.parent = m;
                            }
                        }
                    };
                    u.prototype.RemoveLeaf = function (b) {
                        if (b == this.m_root)
                            this.m_root = null;
                        else {
                            var e = b.parent, f = e.parent;
                            b = e.child1 == b ? e.child2 : e.child1;
                            if (f) {
                                (() => {
                                    const __ifInstance41 = new WebAssembly.Instance(__ifWasmModule, {
                                        env: {
                                            impFunc1: () => {
                                                f.child1 = b;
                                            },
                                            impFunc2: () => {
                                                f.child2 = b;
                                            }
                                        }
                                    });
                                    const __exports = __ifInstance41.exports;
                                    return __exports.data(f.child1 == e ? 1 : 0);
                                })();
                                b.parent = f;
                                for (this.FreeNode(e); f;) {
                                    e = f.aabb;
                                    f.aabb = B.Combine(f.child1.aabb, f.child2.aabb);
                                    if (e.Contains(f.aabb))
                                        break;
                                    f = f.parent;
                                }
                            } else {
                                this.m_root = b;
                                b.parent = null;
                                (() => {
                                    const __callInstance740 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                this.FreeNode(e);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance740.exports;
                                    return __exports.data();
                                })();
                            }
                        }
                    };
                    D.b2DynamicTreeBroadPhase = function () {
                        this.m_tree = new u();
                        this.m_moveBuffer = new Vector();
                        this.m_pairBuffer = new Vector();
                        this.m_pairCount = 0;
                    };
                    D.prototype.CreateProxy = function (b, e) {
                        var f = this.m_tree.CreateProxy(b, e);
                        ++this.m_proxyCount;
                        (() => {
                            const __callInstance739 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.BufferMove(f);
                                    }
                                }
                            });
                            const __exports = __callInstance739.exports;
                            return __exports.data();
                        })();
                        return f;
                    };
                    D.prototype.DestroyProxy = function (b) {
                        (() => {
                            const __callInstance738 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.UnBufferMove(b);
                                    }
                                }
                            });
                            const __exports = __callInstance738.exports;
                            return __exports.data();
                        })();
                        --this.m_proxyCount;
                        (() => {
                            const __callInstance737 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_tree.DestroyProxy(b);
                                    }
                                }
                            });
                            const __exports = __callInstance737.exports;
                            return __exports.data();
                        })();
                    };
                    D.prototype.MoveProxy = function (b, e, f) {
                        this.m_tree.MoveProxy(b, e, f) && this.BufferMove(b);
                    };
                    D.prototype.TestOverlap = function (b, e) {
                        var f = this.m_tree.GetFatAABB(b), m = this.m_tree.GetFatAABB(e);
                        return f.TestOverlap(m);
                    };
                    D.prototype.GetUserData = function (b) {
                        return this.m_tree.GetUserData(b);
                    };
                    D.prototype.GetFatAABB = function (b) {
                        return this.m_tree.GetFatAABB(b);
                    };
                    D.prototype.GetProxyCount = function () {
                        return this.m_proxyCount;
                    };
                    D.prototype.UpdatePairs = function (b) {
                        var e = this;
                        var f = e.m_pairCount = 0, m;
                        for (f = 0; f < e.m_moveBuffer.length; ++f) {
                            m = e.m_moveBuffer[f];
                            var r = e.m_tree.GetFatAABB(m);
                            (() => {
                                const __callInstance736 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            e.m_tree.Query(function (t) {
                                                if (t == m)
                                                    return true;
                                                (() => {
                                                    const __ifInstance42 = new WebAssembly.Instance(__ifWasmModule, {
                                                        env: {
                                                            impFunc1: () => {
                                                                e.m_pairBuffer[e.m_pairCount] = new O();
                                                            },
                                                            impFunc2: () => {
                                                            }
                                                        }
                                                    });
                                                    const __exports = __ifInstance42.exports;
                                                    return __exports.data(e.m_pairCount == e.m_pairBuffer.length ? 1 : 0);
                                                })();
                                                var x = e.m_pairBuffer[e.m_pairCount];
                                                x.proxyA = t < m ? t : m;
                                                x.proxyB = t >= m ? t : m;
                                                ++e.m_pairCount;
                                                return true;
                                            }, r);
                                        }
                                    }
                                });
                                const __exports = __callInstance736.exports;
                                return __exports.data();
                            })();
                        }
                        for (f = e.m_moveBuffer.length = 0; f < e.m_pairCount;) {
                            r = e.m_pairBuffer[f];
                            var s = e.m_tree.GetUserData(r.proxyA), v = e.m_tree.GetUserData(r.proxyB);
                            (() => {
                                const __callInstance735 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            b(s, v);
                                        }
                                    }
                                });
                                const __exports = __callInstance735.exports;
                                return __exports.data();
                            })();
                            for (++f; f < e.m_pairCount;) {
                                s = e.m_pairBuffer[f];
                                if (s.proxyA != r.proxyA || s.proxyB != r.proxyB)
                                    break;
                                ++f;
                            }
                        }
                    };
                    D.prototype.Query = function (b, e) {
                        (() => {
                            const __callInstance734 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_tree.Query(b, e);
                                    }
                                }
                            });
                            const __exports = __callInstance734.exports;
                            return __exports.data();
                        })();
                    };
                    D.prototype.RayCast = function (b, e) {
                        (() => {
                            const __callInstance733 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_tree.RayCast(b, e);
                                    }
                                }
                            });
                            const __exports = __callInstance733.exports;
                            return __exports.data();
                        })();
                    };
                    D.prototype.Validate = function () {
                    };
                    D.prototype.Rebalance = function (b) {
                        (() => {
                            const __ifInstance43 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        b = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance43.exports;
                            return __exports.data(b === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __callInstance732 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_tree.Rebalance(b);
                                    }
                                }
                            });
                            const __exports = __callInstance732.exports;
                            return __exports.data();
                        })();
                    };
                    D.prototype.BufferMove = function (b) {
                        this.m_moveBuffer[this.m_moveBuffer.length] = b;
                    };
                    D.prototype.UnBufferMove = function (b) {
                        (() => {
                            const __callInstance731 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_moveBuffer.splice(parseInt(this.m_moveBuffer.indexOf(b)), 1);
                                    }
                                }
                            });
                            const __exports = __callInstance731.exports;
                            return __exports.data();
                        })();
                    };
                    D.prototype.ComparePairs = function () {
                        return 0;
                    };
                    D.__implements = {};
                    D.__implements[g] = true;
                    H.b2DynamicTreeNode = function () {
                        this.aabb = new B();
                    };
                    H.prototype.IsLeaf = function () {
                        return this.child1 == null;
                    };
                    O.b2DynamicTreePair = function () {
                    };
                    E.b2Manifold = function () {
                        this.m_pointCount = 0;
                    };
                    E.prototype.b2Manifold = function () {
                        this.m_points = new Vector(y.b2_maxManifoldPoints);
                        (() => {
                            var b = 0;
                            const __forInstance10 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return b < y.b2_maxManifoldPoints ? 1 : 0;
                                    },
                                    update: () => {
                                        b++;
                                    },
                                    body: () => {
                                        this.m_points[b] = new R();
                                    }
                                }
                            });
                            const __exports = __forInstance10.exports;
                            return __exports.data();
                        })();
                        this.m_localPlaneNormal = new p();
                        this.m_localPoint = new p();
                    };
                    E.prototype.Reset = function () {
                        (() => {
                            var b = 0;
                            const __forInstance11 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return b < y.b2_maxManifoldPoints ? 1 : 0;
                                    },
                                    update: () => {
                                        b++;
                                    },
                                    body: () => {
                                        (() => {
                                            const __callInstance730 = new WebAssembly.Instance(__callWasmModule, {
                                                env: {
                                                    impFunc: () => {
                                                        (this.m_points[b] instanceof R ? this.m_points[b] : null).Reset();
                                                    }
                                                }
                                            });
                                            const __exports = __callInstance730.exports;
                                            return __exports.data();
                                        })();
                                    }
                                }
                            });
                            const __exports = __forInstance11.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance729 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localPlaneNormal.SetZero();
                                    }
                                }
                            });
                            const __exports = __callInstance729.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance728 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localPoint.SetZero();
                                    }
                                }
                            });
                            const __exports = __callInstance728.exports;
                            return __exports.data();
                        })();
                        this.m_pointCount = this.m_type = 0;
                    };
                    E.prototype.Set = function (b) {
                        this.m_pointCount = b.m_pointCount;
                        (() => {
                            var e = 0;
                            const __forInstance12 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return e < y.b2_maxManifoldPoints ? 1 : 0;
                                    },
                                    update: () => {
                                        e++;
                                    },
                                    body: () => {
                                        (() => {
                                            const __callInstance727 = new WebAssembly.Instance(__callWasmModule, {
                                                env: {
                                                    impFunc: () => {
                                                        (this.m_points[e] instanceof R ? this.m_points[e] : null).Set(b.m_points[e]);
                                                    }
                                                }
                                            });
                                            const __exports = __callInstance727.exports;
                                            return __exports.data();
                                        })();
                                    }
                                }
                            });
                            const __exports = __forInstance12.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance726 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localPlaneNormal.SetV(b.m_localPlaneNormal);
                                    }
                                }
                            });
                            const __exports = __callInstance726.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance725 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localPoint.SetV(b.m_localPoint);
                                    }
                                }
                            });
                            const __exports = __callInstance725.exports;
                            return __exports.data();
                        })();
                        this.m_type = b.m_type;
                    };
                    E.prototype.Copy = function () {
                        var b = new E();
                        (() => {
                            const __callInstance724 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        b.Set(this);
                                    }
                                }
                            });
                            const __exports = __callInstance724.exports;
                            return __exports.data();
                        })();
                        return b;
                    };
                    (() => {
                        const __callInstance723 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.postDefs.push(function () {
                                        Box2D.Collision.b2Manifold.e_circles = 1;
                                        Box2D.Collision.b2Manifold.e_faceA = 2;
                                        Box2D.Collision.b2Manifold.e_faceB = 4;
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance723.exports;
                        return __exports.data();
                    })();
                    R.b2ManifoldPoint = function () {
                        this.m_localPoint = new p();
                        this.m_id = new L();
                    };
                    R.prototype.b2ManifoldPoint = function () {
                        (() => {
                            const __callInstance722 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.Reset();
                                    }
                                }
                            });
                            const __exports = __callInstance722.exports;
                            return __exports.data();
                        })();
                    };
                    R.prototype.Reset = function () {
                        (() => {
                            const __callInstance721 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localPoint.SetZero();
                                    }
                                }
                            });
                            const __exports = __callInstance721.exports;
                            return __exports.data();
                        })();
                        this.m_tangentImpulse = this.m_normalImpulse = 0;
                        this.m_id.key = 0;
                    };
                    R.prototype.Set = function (b) {
                        (() => {
                            const __callInstance720 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localPoint.SetV(b.m_localPoint);
                                    }
                                }
                            });
                            const __exports = __callInstance720.exports;
                            return __exports.data();
                        })();
                        this.m_normalImpulse = b.m_normalImpulse;
                        this.m_tangentImpulse = b.m_tangentImpulse;
                        (() => {
                            const __callInstance719 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_id.Set(b.m_id);
                                    }
                                }
                            });
                            const __exports = __callInstance719.exports;
                            return __exports.data();
                        })();
                    };
                    N.b2Point = function () {
                        this.p = new p();
                    };
                    N.prototype.Support = function () {
                        return this.p;
                    };
                    N.prototype.GetFirstVertex = function () {
                        return this.p;
                    };
                    S.b2RayCastInput = function () {
                        this.p1 = new p();
                        this.p2 = new p();
                    };
                    S.prototype.b2RayCastInput = function (b, e, f) {
                        (() => {
                            const __ifInstance44 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        b = null;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance44.exports;
                            return __exports.data(b === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance45 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        e = null;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance45.exports;
                            return __exports.data(e === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance46 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        f = 1;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance46.exports;
                            return __exports.data(f === undefined ? 1 : 0);
                        })();
                        b && this.p1.SetV(b);
                        e && this.p2.SetV(e);
                        this.maxFraction = f;
                    };
                    aa.b2RayCastOutput = function () {
                        this.normal = new p();
                    };
                    Z.b2Segment = function () {
                        this.p1 = new p();
                        this.p2 = new p();
                    };
                    Z.prototype.TestSegment = function (b, e, f, m) {
                        (() => {
                            const __ifInstance47 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        m = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance47.exports;
                            return __exports.data(m === undefined ? 1 : 0);
                        })();
                        var r = f.p1, s = f.p2.x - r.x, v = f.p2.y - r.y;
                        f = this.p2.y - this.p1.y;
                        var t = -(this.p2.x - this.p1.x), x = 100 * Number.MIN_VALUE, C = -(s * f + v * t);
                        if (C > x) {
                            var J = r.x - this.p1.x, T = r.y - this.p1.y;
                            r = J * f + T * t;
                            if (0 <= r && r <= m * C) {
                                m = -s * T + v * J;
                                if (-x * C <= m && m <= C * (1 + x)) {
                                    r /= C;
                                    m = Math.sqrt(f * f + t * t);
                                    f /= m;
                                    t /= m;
                                    b[0] = r;
                                    (() => {
                                        const __callInstance718 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    e.Set(f, t);
                                                }
                                            }
                                        });
                                        const __exports = __callInstance718.exports;
                                        return __exports.data();
                                    })();
                                    return true;
                                }
                            }
                        }
                        return false;
                    };
                    Z.prototype.Extend = function (b) {
                        (() => {
                            const __callInstance717 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.ExtendForward(b);
                                    }
                                }
                            });
                            const __exports = __callInstance717.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance716 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.ExtendBackward(b);
                                    }
                                }
                            });
                            const __exports = __callInstance716.exports;
                            return __exports.data();
                        })();
                    };
                    Z.prototype.ExtendForward = function (b) {
                        var e = this.p2.x - this.p1.x, f = this.p2.y - this.p1.y;
                        b = Math.min(e > 0 ? (b.upperBound.x - this.p1.x) / e : e < 0 ? (b.lowerBound.x - this.p1.x) / e : Number.POSITIVE_INFINITY, f > 0 ? (b.upperBound.y - this.p1.y) / f : f < 0 ? (b.lowerBound.y - this.p1.y) / f : Number.POSITIVE_INFINITY);
                        this.p2.x = this.p1.x + e * b;
                        this.p2.y = this.p1.y + f * b;
                    };
                    Z.prototype.ExtendBackward = function (b) {
                        var e = -this.p2.x + this.p1.x, f = -this.p2.y + this.p1.y;
                        b = Math.min(e > 0 ? (b.upperBound.x - this.p2.x) / e : e < 0 ? (b.lowerBound.x - this.p2.x) / e : Number.POSITIVE_INFINITY, f > 0 ? (b.upperBound.y - this.p2.y) / f : f < 0 ? (b.lowerBound.y - this.p2.y) / f : Number.POSITIVE_INFINITY);
                        this.p1.x = this.p2.x + e * b;
                        this.p1.y = this.p2.y + f * b;
                    };
                    d.b2SeparationFunction = function () {
                        this.m_localPoint = new p();
                        this.m_axis = new p();
                    };
                    d.prototype.Initialize = function (b, e, f, m, r) {
                        this.m_proxyA = e;
                        this.m_proxyB = m;
                        var s = parseInt(b.count);
                        (() => {
                            const __callInstance715 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        y.b2Assert(0 < s && s < 3);
                                    }
                                }
                            });
                            const __exports = __callInstance715.exports;
                            return __exports.data();
                        })();
                        var v, t, x, C, J = C = x = m = e = 0, T = 0;
                        J = 0;
                        (() => {
                            const __ifInstance48 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            this.m_type = d.e_points;
                                            v = this.m_proxyA.GetVertex(b.indexA[0]);
                                            t = this.m_proxyB.GetVertex(b.indexB[0]);
                                            s = v;
                                            b = f.R;
                                            e = f.position.x + (b.col1.x * s.x + b.col2.x * s.y);
                                            m = f.position.y + (b.col1.y * s.x + b.col2.y * s.y);
                                            s = t;
                                            b = r.R;
                                            x = r.position.x + (b.col1.x * s.x + b.col2.x * s.y);
                                            C = r.position.y + (b.col1.y * s.x + b.col2.y * s.y);
                                            this.m_axis.x = x - e;
                                            this.m_axis.y = C - m;
                                            (() => {
                                                const __callInstance714 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_axis.Normalize();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance714.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                        {
                                            (() => {
                                                const __ifInstance49 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                this.m_type = d.e_faceA;
                                                                e = this.m_proxyA.GetVertex(b.indexA[0]);
                                                                m = this.m_proxyA.GetVertex(b.indexA[1]);
                                                                t = this.m_proxyB.GetVertex(b.indexB[0]);
                                                                this.m_localPoint.x = 0.5 * (e.x + m.x);
                                                                this.m_localPoint.y = 0.5 * (e.y + m.y);
                                                                this.m_axis = w.CrossVF(w.SubtractVV(m, e), 1);
                                                                (() => {
                                                                    const __callInstance713 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                this.m_axis.Normalize();
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance713.exports;
                                                                    return __exports.data();
                                                                })();
                                                                s = this.m_axis;
                                                                b = f.R;
                                                                J = b.col1.x * s.x + b.col2.x * s.y;
                                                                T = b.col1.y * s.x + b.col2.y * s.y;
                                                                s = this.m_localPoint;
                                                                b = f.R;
                                                                e = f.position.x + (b.col1.x * s.x + b.col2.x * s.y);
                                                                m = f.position.y + (b.col1.y * s.x + b.col2.y * s.y);
                                                                s = t;
                                                                b = r.R;
                                                                x = r.position.x + (b.col1.x * s.x + b.col2.x * s.y);
                                                                C = r.position.y + (b.col1.y * s.x + b.col2.y * s.y);
                                                                J = (x - e) * J + (C - m) * T;
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                            (() => {
                                                                const __ifInstance50 = new WebAssembly.Instance(__ifWasmModule, {
                                                                    env: {
                                                                        impFunc1: () => {
                                                                            {
                                                                                this.m_type = d.e_faceB;
                                                                                x = this.m_proxyB.GetVertex(b.indexB[0]);
                                                                                C = this.m_proxyB.GetVertex(b.indexB[1]);
                                                                                v = this.m_proxyA.GetVertex(b.indexA[0]);
                                                                                this.m_localPoint.x = 0.5 * (x.x + C.x);
                                                                                this.m_localPoint.y = 0.5 * (x.y + C.y);
                                                                                this.m_axis = w.CrossVF(w.SubtractVV(C, x), 1);
                                                                                (() => {
                                                                                    const __callInstance712 = new WebAssembly.Instance(__callWasmModule, {
                                                                                        env: {
                                                                                            impFunc: () => {
                                                                                                this.m_axis.Normalize();
                                                                                            }
                                                                                        }
                                                                                    });
                                                                                    const __exports = __callInstance712.exports;
                                                                                    return __exports.data();
                                                                                })();
                                                                                s = this.m_axis;
                                                                                b = r.R;
                                                                                J = b.col1.x * s.x + b.col2.x * s.y;
                                                                                T = b.col1.y * s.x + b.col2.y * s.y;
                                                                                s = this.m_localPoint;
                                                                                b = r.R;
                                                                                x = r.position.x + (b.col1.x * s.x + b.col2.x * s.y);
                                                                                C = r.position.y + (b.col1.y * s.x + b.col2.y * s.y);
                                                                                s = v;
                                                                                b = f.R;
                                                                                e = f.position.x + (b.col1.x * s.x + b.col2.x * s.y);
                                                                                m = f.position.y + (b.col1.y * s.x + b.col2.y * s.y);
                                                                                J = (e - x) * J + (m - C) * T;
                                                                            }
                                                                        },
                                                                        impFunc2: () => {
                                                                            {
                                                                                e = this.m_proxyA.GetVertex(b.indexA[0]);
                                                                                m = this.m_proxyA.GetVertex(b.indexA[1]);
                                                                                x = this.m_proxyB.GetVertex(b.indexB[0]);
                                                                                C = this.m_proxyB.GetVertex(b.indexB[1]);
                                                                                (() => {
                                                                                    const __callInstance711 = new WebAssembly.Instance(__callWasmModule, {
                                                                                        env: {
                                                                                            impFunc: () => {
                                                                                                w.MulX(f, v);
                                                                                            }
                                                                                        }
                                                                                    });
                                                                                    const __exports = __callInstance711.exports;
                                                                                    return __exports.data();
                                                                                })();
                                                                                v = w.MulMV(f.R, w.SubtractVV(m, e));
                                                                                (() => {
                                                                                    const __callInstance710 = new WebAssembly.Instance(__callWasmModule, {
                                                                                        env: {
                                                                                            impFunc: () => {
                                                                                                w.MulX(r, t);
                                                                                            }
                                                                                        }
                                                                                    });
                                                                                    const __exports = __callInstance710.exports;
                                                                                    return __exports.data();
                                                                                })();
                                                                                J = w.MulMV(r.R, w.SubtractVV(C, x));
                                                                                r = v.x * v.x + v.y * v.y;
                                                                                t = J.x * J.x + J.y * J.y;
                                                                                b = w.SubtractVV(J, v);
                                                                                f = v.x * b.x + v.y * b.y;
                                                                                b = J.x * b.x + J.y * b.y;
                                                                                v = v.x * J.x + v.y * J.y;
                                                                                T = r * t - v * v;
                                                                                J = 0;
                                                                                (() => {
                                                                                    const __ifInstance51 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                        env: {
                                                                                            impFunc1: () => {
                                                                                                J = w.Clamp((v * b - f * t) / T, 0, 1);
                                                                                            },
                                                                                            impFunc2: () => {
                                                                                            }
                                                                                        }
                                                                                    });
                                                                                    const __exports = __ifInstance51.exports;
                                                                                    return __exports.data(T != 0 ? 1 : 0);
                                                                                })();
                                                                                (() => {
                                                                                    const __ifInstance52 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                        env: {
                                                                                            impFunc1: () => {
                                                                                                J = w.Clamp((v - f) / r, 0, 1);
                                                                                            },
                                                                                            impFunc2: () => {
                                                                                            }
                                                                                        }
                                                                                    });
                                                                                    const __exports = __ifInstance52.exports;
                                                                                    return __exports.data((v * J + b) / t < 0 ? 1 : 0);
                                                                                })();
                                                                                v = new p();
                                                                                v.x = e.x + J * (m.x - e.x);
                                                                                v.y = e.y + J * (m.y - e.y);
                                                                                t = new p();
                                                                                t.x = x.x + J * (C.x - x.x);
                                                                                t.y = x.y + J * (C.y - x.y);
                                                                                (() => {
                                                                                    const __ifInstance53 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                        env: {
                                                                                            impFunc1: () => {
                                                                                                {
                                                                                                    this.m_type = d.e_faceB;
                                                                                                    this.m_axis = w.CrossVF(w.SubtractVV(C, x), 1);
                                                                                                    (() => {
                                                                                                        const __callInstance709 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                            env: {
                                                                                                                impFunc: () => {
                                                                                                                    this.m_axis.Normalize();
                                                                                                                }
                                                                                                            }
                                                                                                        });
                                                                                                        const __exports = __callInstance709.exports;
                                                                                                        return __exports.data();
                                                                                                    })();
                                                                                                    this.m_localPoint = t;
                                                                                                }
                                                                                            },
                                                                                            impFunc2: () => {
                                                                                                {
                                                                                                    this.m_type = d.e_faceA;
                                                                                                    this.m_axis = w.CrossVF(w.SubtractVV(m, e), 1);
                                                                                                    this.m_localPoint = v;
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    });
                                                                                    const __exports = __ifInstance53.exports;
                                                                                    return __exports.data(J == 0 || J == 1 ? 1 : 0);
                                                                                })();
                                                                            }
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __ifInstance50.exports;
                                                                return __exports.data(b.indexA[0] == b.indexA[0] ? 1 : 0);
                                                            })();
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance49.exports;
                                                return __exports.data(b.indexB[0] == b.indexB[1] ? 1 : 0);
                                            })();
                                            J < 0 && this.m_axis.NegativeSelf();
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance48.exports;
                            return __exports.data(s == 1 ? 1 : 0);
                        })();
                    };
                    d.prototype.Evaluate = function (b, e) {
                        var f, m, r = 0;
                        switch (this.m_type) {
                        case d.e_points:
                            f = w.MulTMV(b.R, this.m_axis);
                            m = w.MulTMV(e.R, this.m_axis.GetNegative());
                            f = this.m_proxyA.GetSupportVertex(f);
                            m = this.m_proxyB.GetSupportVertex(m);
                            f = w.MulX(b, f);
                            m = w.MulX(e, m);
                            return r = (m.x - f.x) * this.m_axis.x + (m.y - f.y) * this.m_axis.y;
                        case d.e_faceA:
                            r = w.MulMV(b.R, this.m_axis);
                            f = w.MulX(b, this.m_localPoint);
                            m = w.MulTMV(e.R, r.GetNegative());
                            m = this.m_proxyB.GetSupportVertex(m);
                            m = w.MulX(e, m);
                            return r = (m.x - f.x) * r.x + (m.y - f.y) * r.y;
                        case d.e_faceB:
                            r = w.MulMV(e.R, this.m_axis);
                            m = w.MulX(e, this.m_localPoint);
                            f = w.MulTMV(b.R, r.GetNegative());
                            f = this.m_proxyA.GetSupportVertex(f);
                            f = w.MulX(b, f);
                            return r = (f.x - m.x) * r.x + (f.y - m.y) * r.y;
                        default:
                            (() => {
                                const __callInstance708 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            y.b2Assert(false);
                                        }
                                    }
                                });
                                const __exports = __callInstance708.exports;
                                return __exports.data();
                            })();
                            return 0;
                        }
                    };
                    (() => {
                        const __callInstance707 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.postDefs.push(function () {
                                        Box2D.Collision.b2SeparationFunction.e_points = 1;
                                        Box2D.Collision.b2SeparationFunction.e_faceA = 2;
                                        Box2D.Collision.b2SeparationFunction.e_faceB = 4;
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance707.exports;
                        return __exports.data();
                    })();
                    h.b2Simplex = function () {
                        this.m_v1 = new j();
                        this.m_v2 = new j();
                        this.m_v3 = new j();
                        this.m_vertices = new Vector(3);
                    };
                    h.prototype.b2Simplex = function () {
                        this.m_vertices[0] = this.m_v1;
                        this.m_vertices[1] = this.m_v2;
                        this.m_vertices[2] = this.m_v3;
                    };
                    h.prototype.ReadCache = function (b, e, f, m, r) {
                        (() => {
                            const __callInstance706 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        y.b2Assert(0 <= b.count && b.count <= 3);
                                    }
                                }
                            });
                            const __exports = __callInstance706.exports;
                            return __exports.data();
                        })();
                        var s, v;
                        this.m_count = b.count;
                        (() => {
                            var t = this.m_vertices, x = 0;
                            const __forInstance13 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return x < this.m_count ? 1 : 0;
                                    },
                                    update: () => {
                                        x++;
                                    },
                                    body: () => {
                                        {
                                            var C = t[x];
                                            C.indexA = b.indexA[x];
                                            C.indexB = b.indexB[x];
                                            s = e.GetVertex(C.indexA);
                                            v = m.GetVertex(C.indexB);
                                            C.wA = w.MulX(f, s);
                                            C.wB = w.MulX(r, v);
                                            C.w = w.SubtractVV(C.wB, C.wA);
                                            C.a = 0;
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance13.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __ifInstance54 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            b = b.metric;
                                            s = this.GetMetric();
                                            (() => {
                                                const __ifInstance55 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            this.m_count = 0;
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance55.exports;
                                                return __exports.data(s < 0.5 * b || 2 * b < s || s < Number.MIN_VALUE ? 1 : 0);
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance54.exports;
                            return __exports.data(this.m_count > 1 ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance56 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            C = t[0];
                                            C.indexA = 0;
                                            C.indexB = 0;
                                            s = e.GetVertex(0);
                                            v = m.GetVertex(0);
                                            C.wA = w.MulX(f, s);
                                            C.wB = w.MulX(r, v);
                                            C.w = w.SubtractVV(C.wB, C.wA);
                                            this.m_count = 1;
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance56.exports;
                            return __exports.data(this.m_count == 0 ? 1 : 0);
                        })();
                    };
                    h.prototype.WriteCache = function (b) {
                        b.metric = this.GetMetric();
                        b.count = Box2D.parseUInt(this.m_count);
                        (() => {
                            var e = this.m_vertices, f = 0;
                            const __forInstance14 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return f < this.m_count ? 1 : 0;
                                    },
                                    update: () => {
                                        f++;
                                    },
                                    body: () => {
                                        {
                                            b.indexA[f] = Box2D.parseUInt(e[f].indexA);
                                            b.indexB[f] = Box2D.parseUInt(e[f].indexB);
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance14.exports;
                            return __exports.data();
                        })();
                    };
                    h.prototype.GetSearchDirection = function () {
                        switch (this.m_count) {
                        case 1:
                            return this.m_v1.w.GetNegative();
                        case 2:
                            var b = w.SubtractVV(this.m_v2.w, this.m_v1.w);
                            return w.CrossVV(b, this.m_v1.w.GetNegative()) > 0 ? w.CrossFV(1, b) : w.CrossVF(b, 1);
                        default:
                            (() => {
                                const __callInstance705 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            y.b2Assert(false);
                                        }
                                    }
                                });
                                const __exports = __callInstance705.exports;
                                return __exports.data();
                            })();
                            return new p();
                        }
                    };
                    h.prototype.GetClosestPoint = function () {
                        switch (this.m_count) {
                        case 0:
                            (() => {
                                const __callInstance704 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            y.b2Assert(false);
                                        }
                                    }
                                });
                                const __exports = __callInstance704.exports;
                                return __exports.data();
                            })();
                            return new p();
                        case 1:
                            return this.m_v1.w;
                        case 2:
                            return new p(this.m_v1.a * this.m_v1.w.x + this.m_v2.a * this.m_v2.w.x, this.m_v1.a * this.m_v1.w.y + this.m_v2.a * this.m_v2.w.y);
                        default:
                            (() => {
                                const __callInstance703 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            y.b2Assert(false);
                                        }
                                    }
                                });
                                const __exports = __callInstance703.exports;
                                return __exports.data();
                            })();
                            return new p();
                        }
                    };
                    h.prototype.GetWitnessPoints = function (b, e) {
                        switch (this.m_count) {
                        case 0:
                            (() => {
                                const __callInstance702 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            y.b2Assert(false);
                                        }
                                    }
                                });
                                const __exports = __callInstance702.exports;
                                return __exports.data();
                            })();
                            break;
                        case 1:
                            (() => {
                                const __callInstance701 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            b.SetV(this.m_v1.wA);
                                        }
                                    }
                                });
                                const __exports = __callInstance701.exports;
                                return __exports.data();
                            })();
                            (() => {
                                const __callInstance700 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            e.SetV(this.m_v1.wB);
                                        }
                                    }
                                });
                                const __exports = __callInstance700.exports;
                                return __exports.data();
                            })();
                            break;
                        case 2:
                            b.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x;
                            b.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y;
                            e.x = this.m_v1.a * this.m_v1.wB.x + this.m_v2.a * this.m_v2.wB.x;
                            e.y = this.m_v1.a * this.m_v1.wB.y + this.m_v2.a * this.m_v2.wB.y;
                            break;
                        case 3:
                            e.x = b.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x + this.m_v3.a * this.m_v3.wA.x;
                            e.y = b.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y + this.m_v3.a * this.m_v3.wA.y;
                            break;
                        default:
                            (() => {
                                const __callInstance699 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            y.b2Assert(false);
                                        }
                                    }
                                });
                                const __exports = __callInstance699.exports;
                                return __exports.data();
                            })();
                        }
                    };
                    h.prototype.GetMetric = function () {
                        switch (this.m_count) {
                        case 0:
                            (() => {
                                const __callInstance698 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            y.b2Assert(false);
                                        }
                                    }
                                });
                                const __exports = __callInstance698.exports;
                                return __exports.data();
                            })();
                            return 0;
                        case 1:
                            return 0;
                        case 2:
                            return w.SubtractVV(this.m_v1.w, this.m_v2.w).Length();
                        case 3:
                            return w.CrossVV(w.SubtractVV(this.m_v2.w, this.m_v1.w), w.SubtractVV(this.m_v3.w, this.m_v1.w));
                        default:
                            (() => {
                                const __callInstance697 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            y.b2Assert(false);
                                        }
                                    }
                                });
                                const __exports = __callInstance697.exports;
                                return __exports.data();
                            })();
                            return 0;
                        }
                    };
                    h.prototype.Solve2 = function () {
                        var b = this.m_v1.w, e = this.m_v2.w, f = w.SubtractVV(e, b);
                        b = -(b.x * f.x + b.y * f.y);
                        (() => {
                            const __ifInstance57 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_count = this.m_v1.a = 1;
                                    },
                                    impFunc2: () => {
                                        {
                                            e = e.x * f.x + e.y * f.y;
                                            (() => {
                                                const __ifInstance58 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                this.m_count = this.m_v2.a = 1;
                                                                (() => {
                                                                    const __callInstance696 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                this.m_v1.Set(this.m_v2);
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance696.exports;
                                                                    return __exports.data();
                                                                })();
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                            {
                                                                f = 1 / (e + b);
                                                                this.m_v1.a = e * f;
                                                                this.m_v2.a = b * f;
                                                                this.m_count = 2;
                                                            }
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance58.exports;
                                                return __exports.data(e <= 0 ? 1 : 0);
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance57.exports;
                            return __exports.data(b <= 0 ? 1 : 0);
                        })();
                    };
                    h.prototype.Solve3 = function () {
                        var b = this.m_v1.w, e = this.m_v2.w, f = this.m_v3.w, m = w.SubtractVV(e, b), r = w.Dot(b, m), s = w.Dot(e, m);
                        r = -r;
                        var v = w.SubtractVV(f, b), t = w.Dot(b, v), x = w.Dot(f, v);
                        t = -t;
                        var C = w.SubtractVV(f, e), J = w.Dot(e, C);
                        C = w.Dot(f, C);
                        J = -J;
                        v = w.CrossVV(m, v);
                        m = v * w.CrossVV(e, f);
                        f = v * w.CrossVV(f, b);
                        b = v * w.CrossVV(b, e);
                        (() => {
                            const __ifInstance59 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_count = this.m_v1.a = 1;
                                    },
                                    impFunc2: () => {
                                        (() => {
                                            const __ifInstance60 = new WebAssembly.Instance(__ifWasmModule, {
                                                env: {
                                                    impFunc1: () => {
                                                        {
                                                            x = 1 / (s + r);
                                                            this.m_v1.a = s * x;
                                                            this.m_v2.a = r * x;
                                                            this.m_count = 2;
                                                        }
                                                    },
                                                    impFunc2: () => {
                                                        (() => {
                                                            const __ifInstance61 = new WebAssembly.Instance(__ifWasmModule, {
                                                                env: {
                                                                    impFunc1: () => {
                                                                        {
                                                                            s = 1 / (x + t);
                                                                            this.m_v1.a = x * s;
                                                                            this.m_v3.a = t * s;
                                                                            this.m_count = 2;
                                                                            (() => {
                                                                                const __callInstance695 = new WebAssembly.Instance(__callWasmModule, {
                                                                                    env: {
                                                                                        impFunc: () => {
                                                                                            this.m_v2.Set(this.m_v3);
                                                                                        }
                                                                                    }
                                                                                });
                                                                                const __exports = __callInstance695.exports;
                                                                                return __exports.data();
                                                                            })();
                                                                        }
                                                                    },
                                                                    impFunc2: () => {
                                                                        (() => {
                                                                            const __ifInstance62 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                env: {
                                                                                    impFunc1: () => {
                                                                                        {
                                                                                            this.m_count = this.m_v2.a = 1;
                                                                                            (() => {
                                                                                                const __callInstance694 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                    env: {
                                                                                                        impFunc: () => {
                                                                                                            this.m_v1.Set(this.m_v2);
                                                                                                        }
                                                                                                    }
                                                                                                });
                                                                                                const __exports = __callInstance694.exports;
                                                                                                return __exports.data();
                                                                                            })();
                                                                                        }
                                                                                    },
                                                                                    impFunc2: () => {
                                                                                        (() => {
                                                                                            const __ifInstance63 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                env: {
                                                                                                    impFunc1: () => {
                                                                                                        {
                                                                                                            this.m_count = this.m_v3.a = 1;
                                                                                                            (() => {
                                                                                                                const __callInstance693 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                    env: {
                                                                                                                        impFunc: () => {
                                                                                                                            this.m_v1.Set(this.m_v3);
                                                                                                                        }
                                                                                                                    }
                                                                                                                });
                                                                                                                const __exports = __callInstance693.exports;
                                                                                                                return __exports.data();
                                                                                                            })();
                                                                                                        }
                                                                                                    },
                                                                                                    impFunc2: () => {
                                                                                                        (() => {
                                                                                                            const __ifInstance64 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                env: {
                                                                                                                    impFunc1: () => {
                                                                                                                        {
                                                                                                                            s = 1 / (C + J);
                                                                                                                            this.m_v2.a = C * s;
                                                                                                                            this.m_v3.a = J * s;
                                                                                                                            this.m_count = 2;
                                                                                                                            (() => {
                                                                                                                                const __callInstance692 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                                    env: {
                                                                                                                                        impFunc: () => {
                                                                                                                                            this.m_v1.Set(this.m_v3);
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                });
                                                                                                                                const __exports = __callInstance692.exports;
                                                                                                                                return __exports.data();
                                                                                                                            })();
                                                                                                                        }
                                                                                                                    },
                                                                                                                    impFunc2: () => {
                                                                                                                        {
                                                                                                                            s = 1 / (m + f + b);
                                                                                                                            this.m_v1.a = m * s;
                                                                                                                            this.m_v2.a = f * s;
                                                                                                                            this.m_v3.a = b * s;
                                                                                                                            this.m_count = 3;
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            });
                                                                                                            const __exports = __ifInstance64.exports;
                                                                                                            return __exports.data(C > 0 && J > 0 && m <= 0 ? 1 : 0);
                                                                                                        })();
                                                                                                    }
                                                                                                }
                                                                                            });
                                                                                            const __exports = __ifInstance63.exports;
                                                                                            return __exports.data(x <= 0 && C <= 0 ? 1 : 0);
                                                                                        })();
                                                                                    }
                                                                                }
                                                                            });
                                                                            const __exports = __ifInstance62.exports;
                                                                            return __exports.data(s <= 0 && J <= 0 ? 1 : 0);
                                                                        })();
                                                                    }
                                                                }
                                                            });
                                                            const __exports = __ifInstance61.exports;
                                                            return __exports.data(x > 0 && t > 0 && f <= 0 ? 1 : 0);
                                                        })();
                                                    }
                                                }
                                            });
                                            const __exports = __ifInstance60.exports;
                                            return __exports.data(s > 0 && r > 0 && b <= 0 ? 1 : 0);
                                        })();
                                    }
                                }
                            });
                            const __exports = __ifInstance59.exports;
                            return __exports.data(r <= 0 && t <= 0 ? 1 : 0);
                        })();
                    };
                    l.b2SimplexCache = function () {
                        this.indexA = new Vector_a2j_Number(3);
                        this.indexB = new Vector_a2j_Number(3);
                    };
                    j.b2SimplexVertex = function () {
                    };
                    j.prototype.Set = function (b) {
                        (() => {
                            const __callInstance691 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.wA.SetV(b.wA);
                                    }
                                }
                            });
                            const __exports = __callInstance691.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance690 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.wB.SetV(b.wB);
                                    }
                                }
                            });
                            const __exports = __callInstance690.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance689 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.w.SetV(b.w);
                                    }
                                }
                            });
                            const __exports = __callInstance689.exports;
                            return __exports.data();
                        })();
                        this.a = b.a;
                        this.indexA = b.indexA;
                        this.indexB = b.indexB;
                    };
                    o.b2TimeOfImpact = function () {
                    };
                    o.TimeOfImpact = function (b) {
                        ++o.b2_toiCalls;
                        var e = b.proxyA, f = b.proxyB, m = b.sweepA, r = b.sweepB;
                        (() => {
                            const __callInstance688 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        y.b2Assert(m.t0 == r.t0);
                                    }
                                }
                            });
                            const __exports = __callInstance688.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance687 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        y.b2Assert(1 - m.t0 > Number.MIN_VALUE);
                                    }
                                }
                            });
                            const __exports = __callInstance687.exports;
                            return __exports.data();
                        })();
                        var s = e.m_radius + f.m_radius;
                        b = b.tolerance;
                        var v = 0, t = 0, x = 0;
                        o.s_cache.count = 0;
                        for (o.s_distanceInput.useRadii = false;;) {
                            (() => {
                                const __callInstance686 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            m.GetTransform(o.s_xfA, v);
                                        }
                                    }
                                });
                                const __exports = __callInstance686.exports;
                                return __exports.data();
                            })();
                            (() => {
                                const __callInstance685 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            r.GetTransform(o.s_xfB, v);
                                        }
                                    }
                                });
                                const __exports = __callInstance685.exports;
                                return __exports.data();
                            })();
                            o.s_distanceInput.proxyA = e;
                            o.s_distanceInput.proxyB = f;
                            o.s_distanceInput.transformA = o.s_xfA;
                            o.s_distanceInput.transformB = o.s_xfB;
                            (() => {
                                const __callInstance684 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            W.Distance(o.s_distanceOutput, o.s_cache, o.s_distanceInput);
                                        }
                                    }
                                });
                                const __exports = __callInstance684.exports;
                                return __exports.data();
                            })();
                            if (o.s_distanceOutput.distance <= 0) {
                                v = 1;
                                break;
                            }
                            (() => {
                                const __callInstance683 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            o.s_fcn.Initialize(o.s_cache, e, o.s_xfA, f, o.s_xfB);
                                        }
                                    }
                                });
                                const __exports = __callInstance683.exports;
                                return __exports.data();
                            })();
                            var C = o.s_fcn.Evaluate(o.s_xfA, o.s_xfB);
                            if (C <= 0) {
                                v = 1;
                                break;
                            }
                            (() => {
                                const __ifInstance65 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            x = C > s ? w.Max(s - b, 0.75 * s) : w.Max(C - b, 0.02 * s);
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance65.exports;
                                return __exports.data(t == 0 ? 1 : 0);
                            })();
                            if (C - x < 0.5 * b) {
                                if (t == 0) {
                                    v = 1;
                                    break;
                                }
                                break;
                            }
                            var J = v, T = v, P = 1;
                            C = C;
                            (() => {
                                const __callInstance682 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            m.GetTransform(o.s_xfA, P);
                                        }
                                    }
                                });
                                const __exports = __callInstance682.exports;
                                return __exports.data();
                            })();
                            (() => {
                                const __callInstance681 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            r.GetTransform(o.s_xfB, P);
                                        }
                                    }
                                });
                                const __exports = __callInstance681.exports;
                                return __exports.data();
                            })();
                            var X = o.s_fcn.Evaluate(o.s_xfA, o.s_xfB);
                            if (X >= x) {
                                v = 1;
                                break;
                            }
                            for (var $ = 0;;) {
                                var ba = 0;
                                ba = $ & 1 ? T + (x - C) * (P - T) / (X - C) : 0.5 * (T + P);
                                (() => {
                                    const __callInstance680 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                m.GetTransform(o.s_xfA, ba);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance680.exports;
                                    return __exports.data();
                                })();
                                (() => {
                                    const __callInstance679 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                r.GetTransform(o.s_xfB, ba);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance679.exports;
                                    return __exports.data();
                                })();
                                var ca = o.s_fcn.Evaluate(o.s_xfA, o.s_xfB);
                                if (w.Abs(ca - x) < 0.025 * b) {
                                    J = ba;
                                    break;
                                }
                                (() => {
                                    const __ifInstance66 = new WebAssembly.Instance(__ifWasmModule, {
                                        env: {
                                            impFunc1: () => {
                                                {
                                                    T = ba;
                                                    C = ca;
                                                }
                                            },
                                            impFunc2: () => {
                                                {
                                                    P = ba;
                                                    X = ca;
                                                }
                                            }
                                        }
                                    });
                                    const __exports = __ifInstance66.exports;
                                    return __exports.data(ca > x ? 1 : 0);
                                })();
                                ++$;
                                ++o.b2_toiRootIters;
                                if ($ == 50)
                                    break;
                            }
                            o.b2_toiMaxRootIters = w.Max(o.b2_toiMaxRootIters, $);
                            if (J < (1 + 100 * Number.MIN_VALUE) * v)
                                break;
                            v = J;
                            t++;
                            ++o.b2_toiIters;
                            if (t == 1000)
                                break;
                        }
                        o.b2_toiMaxIters = w.Max(o.b2_toiMaxIters, t);
                        return v;
                    };
                    (() => {
                        const __callInstance678 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.postDefs.push(function () {
                                        Box2D.Collision.b2TimeOfImpact.b2_toiCalls = 0;
                                        Box2D.Collision.b2TimeOfImpact.b2_toiIters = 0;
                                        Box2D.Collision.b2TimeOfImpact.b2_toiMaxIters = 0;
                                        Box2D.Collision.b2TimeOfImpact.b2_toiRootIters = 0;
                                        Box2D.Collision.b2TimeOfImpact.b2_toiMaxRootIters = 0;
                                        Box2D.Collision.b2TimeOfImpact.s_cache = new l();
                                        Box2D.Collision.b2TimeOfImpact.s_distanceInput = new Y();
                                        Box2D.Collision.b2TimeOfImpact.s_xfA = new U();
                                        Box2D.Collision.b2TimeOfImpact.s_xfB = new U();
                                        Box2D.Collision.b2TimeOfImpact.s_fcn = new d();
                                        Box2D.Collision.b2TimeOfImpact.s_distanceOutput = new k();
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance678.exports;
                        return __exports.data();
                    })();
                    q.b2TOIInput = function () {
                        this.proxyA = new z();
                        this.proxyB = new z();
                        this.sweepA = new A();
                        this.sweepB = new A();
                    };
                    n.b2WorldManifold = function () {
                        this.m_normal = new p();
                    };
                    n.prototype.b2WorldManifold = function () {
                        this.m_points = new Vector(y.b2_maxManifoldPoints);
                        (() => {
                            var b = 0;
                            const __forInstance15 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return b < y.b2_maxManifoldPoints ? 1 : 0;
                                    },
                                    update: () => {
                                        b++;
                                    },
                                    body: () => {
                                        this.m_points[b] = new p();
                                    }
                                }
                            });
                            const __exports = __forInstance15.exports;
                            return __exports.data();
                        })();
                    };
                    n.prototype.Initialize = function (b, e, f, m, r) {
                        (() => {
                            const __ifInstance67 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        f = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance67.exports;
                            return __exports.data(f === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance68 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        r = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance68.exports;
                            return __exports.data(r === undefined ? 1 : 0);
                        })();
                        if (b.m_pointCount != 0) {
                            var s = 0, v, t, x = 0, C = 0, J = 0, T = 0, P = 0;
                            v = 0;
                            switch (b.m_type) {
                            case E.e_circles:
                                t = e.R;
                                v = b.m_localPoint;
                                s = e.position.x + t.col1.x * v.x + t.col2.x * v.y;
                                e = e.position.y + t.col1.y * v.x + t.col2.y * v.y;
                                t = m.R;
                                v = b.m_points[0].m_localPoint;
                                b = m.position.x + t.col1.x * v.x + t.col2.x * v.y;
                                m = m.position.y + t.col1.y * v.x + t.col2.y * v.y;
                                v = b - s;
                                t = m - e;
                                x = v * v + t * t;
                                (() => {
                                    const __ifInstance69 = new WebAssembly.Instance(__ifWasmModule, {
                                        env: {
                                            impFunc1: () => {
                                                {
                                                    x = Math.sqrt(x);
                                                    this.m_normal.x = v / x;
                                                    this.m_normal.y = t / x;
                                                }
                                            },
                                            impFunc2: () => {
                                                {
                                                    this.m_normal.x = 1;
                                                    this.m_normal.y = 0;
                                                }
                                            }
                                        }
                                    });
                                    const __exports = __ifInstance69.exports;
                                    return __exports.data(x > Number.MIN_VALUE * Number.MIN_VALUE ? 1 : 0);
                                })();
                                v = e + f * this.m_normal.y;
                                m = m - r * this.m_normal.y;
                                this.m_points[0].x = 0.5 * (s + f * this.m_normal.x + (b - r * this.m_normal.x));
                                this.m_points[0].y = 0.5 * (v + m);
                                break;
                            case E.e_faceA:
                                t = e.R;
                                v = b.m_localPlaneNormal;
                                x = t.col1.x * v.x + t.col2.x * v.y;
                                C = t.col1.y * v.x + t.col2.y * v.y;
                                t = e.R;
                                v = b.m_localPoint;
                                J = e.position.x + t.col1.x * v.x + t.col2.x * v.y;
                                T = e.position.y + t.col1.y * v.x + t.col2.y * v.y;
                                this.m_normal.x = x;
                                this.m_normal.y = C;
                                (() => {
                                    s = 0;
                                    const __forInstance16 = new WebAssembly.Instance(__forWasmModule, {
                                        env: {
                                            test: () => {
                                                return s < b.m_pointCount ? 1 : 0;
                                            },
                                            update: () => {
                                                s++;
                                            },
                                            body: () => {
                                                {
                                                    t = m.R;
                                                    v = b.m_points[s].m_localPoint;
                                                    P = m.position.x + t.col1.x * v.x + t.col2.x * v.y;
                                                    v = m.position.y + t.col1.y * v.x + t.col2.y * v.y;
                                                    this.m_points[s].x = P + 0.5 * (f - (P - J) * x - (v - T) * C - r) * x;
                                                    this.m_points[s].y = v + 0.5 * (f - (P - J) * x - (v - T) * C - r) * C;
                                                }
                                            }
                                        }
                                    });
                                    const __exports = __forInstance16.exports;
                                    return __exports.data();
                                })();
                                break;
                            case E.e_faceB:
                                t = m.R;
                                v = b.m_localPlaneNormal;
                                x = t.col1.x * v.x + t.col2.x * v.y;
                                C = t.col1.y * v.x + t.col2.y * v.y;
                                t = m.R;
                                v = b.m_localPoint;
                                J = m.position.x + t.col1.x * v.x + t.col2.x * v.y;
                                T = m.position.y + t.col1.y * v.x + t.col2.y * v.y;
                                this.m_normal.x = -x;
                                this.m_normal.y = -C;
                                (() => {
                                    s = 0;
                                    const __forInstance17 = new WebAssembly.Instance(__forWasmModule, {
                                        env: {
                                            test: () => {
                                                return s < b.m_pointCount ? 1 : 0;
                                            },
                                            update: () => {
                                                s++;
                                            },
                                            body: () => {
                                                {
                                                    t = e.R;
                                                    v = b.m_points[s].m_localPoint;
                                                    P = e.position.x + t.col1.x * v.x + t.col2.x * v.y;
                                                    v = e.position.y + t.col1.y * v.x + t.col2.y * v.y;
                                                    this.m_points[s].x = P + 0.5 * (r - (P - J) * x - (v - T) * C - f) * x;
                                                    this.m_points[s].y = v + 0.5 * (r - (P - J) * x - (v - T) * C - f) * C;
                                                }
                                            }
                                        }
                                    });
                                    const __exports = __forInstance17.exports;
                                    return __exports.data();
                                })();
                            }
                        }
                    };
                    a.ClipVertex = function () {
                        this.v = new p();
                        this.id = new L();
                    };
                    a.prototype.Set = function (b) {
                        (() => {
                            const __callInstance677 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.v.SetV(b.v);
                                    }
                                }
                            });
                            const __exports = __callInstance677.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance676 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.id.Set(b.id);
                                    }
                                }
                            });
                            const __exports = __callInstance676.exports;
                            return __exports.data();
                        })();
                    };
                    c.Features = function () {
                    };
                    (() => {
                        const __callInstance675 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Object.defineProperty(c.prototype, lS(0, 13), {
                                        enumerable: false,
                                        configurable: true,
                                        get: function () {
                                            return this._referenceEdge;
                                        }
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance675.exports;
                        return __exports.data();
                    })();
                    (() => {
                        const __callInstance674 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Object.defineProperty(c.prototype, lS(0, 14), {
                                        enumerable: false,
                                        configurable: true,
                                        set: function (b) {
                                            (() => {
                                                const __ifInstance70 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            b = 0;
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance70.exports;
                                                return __exports.data(b === undefined ? 1 : 0);
                                            })();
                                            this._referenceEdge = b;
                                            this._m_id._key = this._m_id._key & 4294967040 | this._referenceEdge & 255;
                                        }
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance674.exports;
                        return __exports.data();
                    })();
                    (() => {
                        const __callInstance673 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Object.defineProperty(c.prototype, lS(0, 15), {
                                        enumerable: false,
                                        configurable: true,
                                        get: function () {
                                            return this._incidentEdge;
                                        }
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance673.exports;
                        return __exports.data();
                    })();
                    (() => {
                        const __callInstance672 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Object.defineProperty(c.prototype, lS(0, 16), {
                                        enumerable: false,
                                        configurable: true,
                                        set: function (b) {
                                            (() => {
                                                const __ifInstance71 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            b = 0;
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance71.exports;
                                                return __exports.data(b === undefined ? 1 : 0);
                                            })();
                                            this._incidentEdge = b;
                                            this._m_id._key = this._m_id._key & 4294902015 | this._incidentEdge << 8 & 65280;
                                        }
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance672.exports;
                        return __exports.data();
                    })();
                    (() => {
                        const __callInstance671 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Object.defineProperty(c.prototype, lS(0, 17), {
                                        enumerable: false,
                                        configurable: true,
                                        get: function () {
                                            return this._incidentVertex;
                                        }
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance671.exports;
                        return __exports.data();
                    })();
                    (() => {
                        const __callInstance670 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Object.defineProperty(c.prototype, lS(0, 18), {
                                        enumerable: false,
                                        configurable: true,
                                        set: function (b) {
                                            (() => {
                                                const __ifInstance72 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            b = 0;
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance72.exports;
                                                return __exports.data(b === undefined ? 1 : 0);
                                            })();
                                            this._incidentVertex = b;
                                            this._m_id._key = this._m_id._key & 4278255615 | this._incidentVertex << 16 & 16711680;
                                        }
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance670.exports;
                        return __exports.data();
                    })();
                    (() => {
                        const __callInstance669 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Object.defineProperty(c.prototype, lS(0, 19), {
                                        enumerable: false,
                                        configurable: true,
                                        get: function () {
                                            return this._flip;
                                        }
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance669.exports;
                        return __exports.data();
                    })();
                    (() => {
                        const __callInstance668 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Object.defineProperty(c.prototype, lS(0, 20), {
                                        enumerable: false,
                                        configurable: true,
                                        set: function (b) {
                                            (() => {
                                                const __ifInstance73 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            b = 0;
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance73.exports;
                                                return __exports.data(b === undefined ? 1 : 0);
                                            })();
                                            this._flip = b;
                                            this._m_id._key = this._m_id._key & 16777215 | this._flip << 24 & 4278190080;
                                        }
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance668.exports;
                        return __exports.data();
                    })();
                }());
            }
        }
    });
    const __exports = __callInstance788.exports;
    return __exports.data();
})();
(() => {
    const __callInstance667 = new WebAssembly.Instance(__callWasmModule, {
        env: {
            impFunc: () => {
                (function () {
                    var F = Box2D.Common.b2Settings, G = Box2D.Collision.Shapes.b2CircleShape, K = Box2D.Collision.Shapes.b2EdgeChainDef, y = Box2D.Collision.Shapes.b2EdgeShape, w = Box2D.Collision.Shapes.b2MassData, A = Box2D.Collision.Shapes.b2PolygonShape, U = Box2D.Collision.Shapes.b2Shape, p = Box2D.Common.Math.b2Mat22, B = Box2D.Common.Math.b2Math, Q = Box2D.Common.Math.b2Transform, V = Box2D.Common.Math.b2Vec2, M = Box2D.Collision.b2Distance, L = Box2D.Collision.b2DistanceInput, I = Box2D.Collision.b2DistanceOutput, W = Box2D.Collision.b2DistanceProxy, Y = Box2D.Collision.b2SimplexCache;
                    (() => {
                        const __callInstance666 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(G, Box2D.Collision.Shapes.b2Shape);
                                }
                            }
                        });
                        const __exports = __callInstance666.exports;
                        return __exports.data();
                    })();
                    G.prototype.__super = Box2D.Collision.Shapes.b2Shape.prototype;
                    G.b2CircleShape = function () {
                        (() => {
                            const __callInstance665 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Collision.Shapes.b2Shape.b2Shape.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance665.exports;
                            return __exports.data();
                        })();
                        this.m_p = new V();
                    };
                    G.prototype.Copy = function () {
                        var k = new G();
                        (() => {
                            const __callInstance664 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        k.Set(this);
                                    }
                                }
                            });
                            const __exports = __callInstance664.exports;
                            return __exports.data();
                        })();
                        return k;
                    };
                    G.prototype.Set = function (k) {
                        (() => {
                            const __callInstance663 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.Set.call(this, k);
                                    }
                                }
                            });
                            const __exports = __callInstance663.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __ifInstance74 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        (() => {
                                            const __callInstance662 = new WebAssembly.Instance(__callWasmModule, {
                                                env: {
                                                    impFunc: () => {
                                                        this.m_p.SetV((k instanceof G ? k : null).m_p);
                                                    }
                                                }
                                            });
                                            const __exports = __callInstance662.exports;
                                            return __exports.data();
                                        })();
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance74.exports;
                            return __exports.data(Box2D.is(k, G) ? 1 : 0);
                        })();
                    };
                    G.prototype.TestPoint = function (k, z) {
                        var u = k.R, D = k.position.x + (u.col1.x * this.m_p.x + u.col2.x * this.m_p.y);
                        u = k.position.y + (u.col1.y * this.m_p.x + u.col2.y * this.m_p.y);
                        D = z.x - D;
                        u = z.y - u;
                        return D * D + u * u <= this.m_radius * this.m_radius;
                    };
                    G.prototype.RayCast = function (k, z, u) {
                        var D = u.R, H = z.p1.x - (u.position.x + (D.col1.x * this.m_p.x + D.col2.x * this.m_p.y));
                        u = z.p1.y - (u.position.y + (D.col1.y * this.m_p.x + D.col2.y * this.m_p.y));
                        D = z.p2.x - z.p1.x;
                        var O = z.p2.y - z.p1.y, E = H * D + u * O, R = D * D + O * O, N = E * E - R * (H * H + u * u - this.m_radius * this.m_radius);
                        if (N < 0 || R < Number.MIN_VALUE)
                            return false;
                        E = -(E + Math.sqrt(N));
                        if (0 <= E && E <= z.maxFraction * R) {
                            E /= R;
                            k.fraction = E;
                            k.normal.x = H + E * D;
                            k.normal.y = u + E * O;
                            (() => {
                                const __callInstance661 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            k.normal.Normalize();
                                        }
                                    }
                                });
                                const __exports = __callInstance661.exports;
                                return __exports.data();
                            })();
                            return true;
                        }
                        return false;
                    };
                    G.prototype.ComputeAABB = function (k, z) {
                        var u = z.R, D = z.position.x + (u.col1.x * this.m_p.x + u.col2.x * this.m_p.y);
                        u = z.position.y + (u.col1.y * this.m_p.x + u.col2.y * this.m_p.y);
                        (() => {
                            const __callInstance660 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        k.lowerBound.Set(D - this.m_radius, u - this.m_radius);
                                    }
                                }
                            });
                            const __exports = __callInstance660.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance659 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        k.upperBound.Set(D + this.m_radius, u + this.m_radius);
                                    }
                                }
                            });
                            const __exports = __callInstance659.exports;
                            return __exports.data();
                        })();
                    };
                    G.prototype.ComputeMass = function (k, z) {
                        (() => {
                            const __ifInstance75 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        z = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance75.exports;
                            return __exports.data(z === undefined ? 1 : 0);
                        })();
                        k.mass = z * F.b2_pi * this.m_radius * this.m_radius;
                        (() => {
                            const __callInstance658 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        k.center.SetV(this.m_p);
                                    }
                                }
                            });
                            const __exports = __callInstance658.exports;
                            return __exports.data();
                        })();
                        k.I = k.mass * (0.5 * this.m_radius * this.m_radius + (this.m_p.x * this.m_p.x + this.m_p.y * this.m_p.y));
                    };
                    G.prototype.ComputeSubmergedArea = function (k, z, u, D) {
                        (() => {
                            const __ifInstance76 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        z = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance76.exports;
                            return __exports.data(z === undefined ? 1 : 0);
                        })();
                        u = B.MulX(u, this.m_p);
                        var H = -(B.Dot(k, u) - z);
                        if (H < -this.m_radius + Number.MIN_VALUE)
                            return 0;
                        if (H > this.m_radius) {
                            (() => {
                                const __callInstance657 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            D.SetV(u);
                                        }
                                    }
                                });
                                const __exports = __callInstance657.exports;
                                return __exports.data();
                            })();
                            return Math.PI * this.m_radius * this.m_radius;
                        }
                        z = this.m_radius * this.m_radius;
                        var O = H * H;
                        H = z * (Math.asin(H / this.m_radius) + Math.PI / 2) + H * Math.sqrt(z - O);
                        z = -2 / 3 * Math.pow(z - O, 1.5) / H;
                        D.x = u.x + k.x * z;
                        D.y = u.y + k.y * z;
                        return H;
                    };
                    G.prototype.GetLocalPosition = function () {
                        return this.m_p;
                    };
                    G.prototype.SetLocalPosition = function (k) {
                        (() => {
                            const __callInstance656 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_p.SetV(k);
                                    }
                                }
                            });
                            const __exports = __callInstance656.exports;
                            return __exports.data();
                        })();
                    };
                    G.prototype.GetRadius = function () {
                        return this.m_radius;
                    };
                    G.prototype.SetRadius = function (k) {
                        (() => {
                            const __ifInstance77 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        k = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance77.exports;
                            return __exports.data(k === undefined ? 1 : 0);
                        })();
                        this.m_radius = k;
                    };
                    G.prototype.b2CircleShape = function (k) {
                        (() => {
                            const __ifInstance78 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        k = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance78.exports;
                            return __exports.data(k === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __callInstance655 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.b2Shape.call(this);
                                    }
                                }
                            });
                            const __exports = __callInstance655.exports;
                            return __exports.data();
                        })();
                        this.m_type = U.e_circleShape;
                        this.m_radius = k;
                    };
                    K.b2EdgeChainDef = function () {
                    };
                    K.prototype.b2EdgeChainDef = function () {
                        this.vertexCount = 0;
                        this.isALoop = true;
                        this.vertices = [];
                    };
                    (() => {
                        const __callInstance654 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(y, Box2D.Collision.Shapes.b2Shape);
                                }
                            }
                        });
                        const __exports = __callInstance654.exports;
                        return __exports.data();
                    })();
                    y.prototype.__super = Box2D.Collision.Shapes.b2Shape.prototype;
                    y.b2EdgeShape = function () {
                        (() => {
                            const __callInstance653 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Collision.Shapes.b2Shape.b2Shape.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance653.exports;
                            return __exports.data();
                        })();
                        this.s_supportVec = new V();
                        this.m_v1 = new V();
                        this.m_v2 = new V();
                        this.m_coreV1 = new V();
                        this.m_coreV2 = new V();
                        this.m_normal = new V();
                        this.m_direction = new V();
                        this.m_cornerDir1 = new V();
                        this.m_cornerDir2 = new V();
                    };
                    y.prototype.TestPoint = function () {
                        return false;
                    };
                    y.prototype.RayCast = function (k, z, u) {
                        var D, H = z.p2.x - z.p1.x, O = z.p2.y - z.p1.y;
                        D = u.R;
                        var E = u.position.x + (D.col1.x * this.m_v1.x + D.col2.x * this.m_v1.y), R = u.position.y + (D.col1.y * this.m_v1.x + D.col2.y * this.m_v1.y), N = u.position.y + (D.col1.y * this.m_v2.x + D.col2.y * this.m_v2.y) - R;
                        u = -(u.position.x + (D.col1.x * this.m_v2.x + D.col2.x * this.m_v2.y) - E);
                        D = 100 * Number.MIN_VALUE;
                        var S = -(H * N + O * u);
                        if (S > D) {
                            E = z.p1.x - E;
                            var aa = z.p1.y - R;
                            R = E * N + aa * u;
                            if (0 <= R && R <= z.maxFraction * S) {
                                z = -H * aa + O * E;
                                if (-D * S <= z && z <= S * (1 + D)) {
                                    R /= S;
                                    k.fraction = R;
                                    z = Math.sqrt(N * N + u * u);
                                    k.normal.x = N / z;
                                    k.normal.y = u / z;
                                    return true;
                                }
                            }
                        }
                        return false;
                    };
                    y.prototype.ComputeAABB = function (k, z) {
                        var u = z.R, D = z.position.x + (u.col1.x * this.m_v1.x + u.col2.x * this.m_v1.y), H = z.position.y + (u.col1.y * this.m_v1.x + u.col2.y * this.m_v1.y), O = z.position.x + (u.col1.x * this.m_v2.x + u.col2.x * this.m_v2.y);
                        u = z.position.y + (u.col1.y * this.m_v2.x + u.col2.y * this.m_v2.y);
                        (() => {
                            const __ifInstance79 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            k.lowerBound.x = D;
                                            k.upperBound.x = O;
                                        }
                                    },
                                    impFunc2: () => {
                                        {
                                            k.lowerBound.x = O;
                                            k.upperBound.x = D;
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance79.exports;
                            return __exports.data(D < O ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance80 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            k.lowerBound.y = H;
                                            k.upperBound.y = u;
                                        }
                                    },
                                    impFunc2: () => {
                                        {
                                            k.lowerBound.y = u;
                                            k.upperBound.y = H;
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance80.exports;
                            return __exports.data(H < u ? 1 : 0);
                        })();
                    };
                    y.prototype.ComputeMass = function (k) {
                        k.mass = 0;
                        (() => {
                            const __callInstance652 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        k.center.SetV(this.m_v1);
                                    }
                                }
                            });
                            const __exports = __callInstance652.exports;
                            return __exports.data();
                        })();
                        k.I = 0;
                    };
                    y.prototype.ComputeSubmergedArea = function (k, z, u, D) {
                        (() => {
                            const __ifInstance81 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        z = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance81.exports;
                            return __exports.data(z === undefined ? 1 : 0);
                        })();
                        var H = new V(k.x * z, k.y * z), O = B.MulX(u, this.m_v1);
                        u = B.MulX(u, this.m_v2);
                        var E = B.Dot(k, O) - z;
                        k = B.Dot(k, u) - z;
                        if (E > 0)
                            if (k > 0)
                                return 0;
                            else {
                                O.x = -k / (E - k) * O.x + E / (E - k) * u.x;
                                O.y = -k / (E - k) * O.y + E / (E - k) * u.y;
                            }
                        else
                            (() => {
                                const __ifInstance82 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                u.x = -k / (E - k) * O.x + E / (E - k) * u.x;
                                                u.y = -k / (E - k) * O.y + E / (E - k) * u.y;
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance82.exports;
                                return __exports.data(k > 0 ? 1 : 0);
                            })();
                        D.x = (H.x + O.x + u.x) / 3;
                        D.y = (H.y + O.y + u.y) / 3;
                        return 0.5 * ((O.x - H.x) * (u.y - H.y) - (O.y - H.y) * (u.x - H.x));
                    };
                    y.prototype.GetLength = function () {
                        return this.m_length;
                    };
                    y.prototype.GetVertex1 = function () {
                        return this.m_v1;
                    };
                    y.prototype.GetVertex2 = function () {
                        return this.m_v2;
                    };
                    y.prototype.GetCoreVertex1 = function () {
                        return this.m_coreV1;
                    };
                    y.prototype.GetCoreVertex2 = function () {
                        return this.m_coreV2;
                    };
                    y.prototype.GetNormalVector = function () {
                        return this.m_normal;
                    };
                    y.prototype.GetDirectionVector = function () {
                        return this.m_direction;
                    };
                    y.prototype.GetCorner1Vector = function () {
                        return this.m_cornerDir1;
                    };
                    y.prototype.GetCorner2Vector = function () {
                        return this.m_cornerDir2;
                    };
                    y.prototype.Corner1IsConvex = function () {
                        return this.m_cornerConvex1;
                    };
                    y.prototype.Corner2IsConvex = function () {
                        return this.m_cornerConvex2;
                    };
                    y.prototype.GetFirstVertex = function (k) {
                        var z = k.R;
                        return new V(k.position.x + (z.col1.x * this.m_coreV1.x + z.col2.x * this.m_coreV1.y), k.position.y + (z.col1.y * this.m_coreV1.x + z.col2.y * this.m_coreV1.y));
                    };
                    y.prototype.GetNextEdge = function () {
                        return this.m_nextEdge;
                    };
                    y.prototype.GetPrevEdge = function () {
                        return this.m_prevEdge;
                    };
                    y.prototype.Support = function (k, z, u) {
                        (() => {
                            const __ifInstance83 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        z = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance83.exports;
                            return __exports.data(z === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance84 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        u = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance84.exports;
                            return __exports.data(u === undefined ? 1 : 0);
                        })();
                        var D = k.R, H = k.position.x + (D.col1.x * this.m_coreV1.x + D.col2.x * this.m_coreV1.y), O = k.position.y + (D.col1.y * this.m_coreV1.x + D.col2.y * this.m_coreV1.y), E = k.position.x + (D.col1.x * this.m_coreV2.x + D.col2.x * this.m_coreV2.y);
                        k = k.position.y + (D.col1.y * this.m_coreV2.x + D.col2.y * this.m_coreV2.y);
                        (() => {
                            const __ifInstance85 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            this.s_supportVec.x = H;
                                            this.s_supportVec.y = O;
                                        }
                                    },
                                    impFunc2: () => {
                                        {
                                            this.s_supportVec.x = E;
                                            this.s_supportVec.y = k;
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance85.exports;
                            return __exports.data(H * z + O * u > E * z + k * u ? 1 : 0);
                        })();
                        return this.s_supportVec;
                    };
                    y.prototype.b2EdgeShape = function (k, z) {
                        (() => {
                            const __callInstance651 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.b2Shape.call(this);
                                    }
                                }
                            });
                            const __exports = __callInstance651.exports;
                            return __exports.data();
                        })();
                        this.m_type = U.e_edgeShape;
                        this.m_nextEdge = this.m_prevEdge = null;
                        this.m_v1 = k;
                        this.m_v2 = z;
                        (() => {
                            const __callInstance650 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_direction.Set(this.m_v2.x - this.m_v1.x, this.m_v2.y - this.m_v1.y);
                                    }
                                }
                            });
                            const __exports = __callInstance650.exports;
                            return __exports.data();
                        })();
                        this.m_length = this.m_direction.Normalize();
                        (() => {
                            const __callInstance649 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_normal.Set(this.m_direction.y, -this.m_direction.x);
                                    }
                                }
                            });
                            const __exports = __callInstance649.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance648 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_coreV1.Set(-F.b2_toiSlop * (this.m_normal.x - this.m_direction.x) + this.m_v1.x, -F.b2_toiSlop * (this.m_normal.y - this.m_direction.y) + this.m_v1.y);
                                    }
                                }
                            });
                            const __exports = __callInstance648.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance647 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_coreV2.Set(-F.b2_toiSlop * (this.m_normal.x + this.m_direction.x) + this.m_v2.x, -F.b2_toiSlop * (this.m_normal.y + this.m_direction.y) + this.m_v2.y);
                                    }
                                }
                            });
                            const __exports = __callInstance647.exports;
                            return __exports.data();
                        })();
                        this.m_cornerDir1 = this.m_normal;
                        (() => {
                            const __callInstance646 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_cornerDir2.Set(-this.m_normal.x, -this.m_normal.y);
                                    }
                                }
                            });
                            const __exports = __callInstance646.exports;
                            return __exports.data();
                        })();
                    };
                    y.prototype.SetPrevEdge = function (k, z, u, D) {
                        this.m_prevEdge = k;
                        this.m_coreV1 = z;
                        this.m_cornerDir1 = u;
                        this.m_cornerConvex1 = D;
                    };
                    y.prototype.SetNextEdge = function (k, z, u, D) {
                        this.m_nextEdge = k;
                        this.m_coreV2 = z;
                        this.m_cornerDir2 = u;
                        this.m_cornerConvex2 = D;
                    };
                    w.b2MassData = function () {
                        this.mass = 0;
                        this.center = new V(0, 0);
                        this.I = 0;
                    };
                    (() => {
                        const __callInstance645 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(A, Box2D.Collision.Shapes.b2Shape);
                                }
                            }
                        });
                        const __exports = __callInstance645.exports;
                        return __exports.data();
                    })();
                    A.prototype.__super = Box2D.Collision.Shapes.b2Shape.prototype;
                    A.b2PolygonShape = function () {
                        (() => {
                            const __callInstance644 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Collision.Shapes.b2Shape.b2Shape.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance644.exports;
                            return __exports.data();
                        })();
                    };
                    A.prototype.Copy = function () {
                        var k = new A();
                        (() => {
                            const __callInstance643 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        k.Set(this);
                                    }
                                }
                            });
                            const __exports = __callInstance643.exports;
                            return __exports.data();
                        })();
                        return k;
                    };
                    A.prototype.Set = function (k) {
                        (() => {
                            const __callInstance642 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.Set.call(this, k);
                                    }
                                }
                            });
                            const __exports = __callInstance642.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __ifInstance86 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            k = k instanceof A ? k : null;
                                            (() => {
                                                const __callInstance641 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_centroid.SetV(k.m_centroid);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance641.exports;
                                                return __exports.data();
                                            })();
                                            this.m_vertexCount = k.m_vertexCount;
                                            (() => {
                                                const __callInstance640 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.Reserve(this.m_vertexCount);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance640.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                var z = 0;
                                                const __forInstance18 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return z < this.m_vertexCount ? 1 : 0;
                                                        },
                                                        update: () => {
                                                            z++;
                                                        },
                                                        body: () => {
                                                            {
                                                                (() => {
                                                                    const __callInstance639 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                this.m_vertices[z].SetV(k.m_vertices[z]);
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance639.exports;
                                                                    return __exports.data();
                                                                })();
                                                                (() => {
                                                                    const __callInstance638 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                this.m_normals[z].SetV(k.m_normals[z]);
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance638.exports;
                                                                    return __exports.data();
                                                                })();
                                                            }
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance18.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance86.exports;
                            return __exports.data(Box2D.is(k, A) ? 1 : 0);
                        })();
                    };
                    A.prototype.SetAsArray = function (k, z) {
                        (() => {
                            const __ifInstance87 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        z = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance87.exports;
                            return __exports.data(z === undefined ? 1 : 0);
                        })();
                        var u = new Vector(), D = 0, H;
                        (() => {
                            D = 0;
                            const __forInstance19 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return D < k.length ? 1 : 0;
                                    },
                                    update: () => {
                                        ++D;
                                    },
                                    body: () => {
                                        {
                                            H = k[D];
                                            (() => {
                                                const __callInstance637 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            u.push(H);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance637.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance19.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance636 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.SetAsVector(u, z);
                                    }
                                }
                            });
                            const __exports = __callInstance636.exports;
                            return __exports.data();
                        })();
                    };
                    A.AsArray = function (k, z) {
                        (() => {
                            const __ifInstance88 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        z = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance88.exports;
                            return __exports.data(z === undefined ? 1 : 0);
                        })();
                        var u = new A();
                        (() => {
                            const __callInstance635 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        u.SetAsArray(k, z);
                                    }
                                }
                            });
                            const __exports = __callInstance635.exports;
                            return __exports.data();
                        })();
                        return u;
                    };
                    A.prototype.SetAsVector = function (k, z) {
                        (() => {
                            const __ifInstance89 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        z = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance89.exports;
                            return __exports.data(z === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance90 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        z = k.length;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance90.exports;
                            return __exports.data(z == 0 ? 1 : 0);
                        })();
                        (() => {
                            const __callInstance634 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        F.b2Assert(2 <= z);
                                    }
                                }
                            });
                            const __exports = __callInstance634.exports;
                            return __exports.data();
                        })();
                        this.m_vertexCount = z;
                        (() => {
                            const __callInstance633 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.Reserve(z);
                                    }
                                }
                            });
                            const __exports = __callInstance633.exports;
                            return __exports.data();
                        })();
                        var u = 0;
                        (() => {
                            u = 0;
                            const __forInstance20 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return u < this.m_vertexCount ? 1 : 0;
                                    },
                                    update: () => {
                                        u++;
                                    },
                                    body: () => {
                                        (() => {
                                            const __callInstance632 = new WebAssembly.Instance(__callWasmModule, {
                                                env: {
                                                    impFunc: () => {
                                                        this.m_vertices[u].SetV(k[u]);
                                                    }
                                                }
                                            });
                                            const __exports = __callInstance632.exports;
                                            return __exports.data();
                                        })();
                                    }
                                }
                            });
                            const __exports = __forInstance20.exports;
                            return __exports.data();
                        })();
                        (() => {
                            u = 0;
                            const __forInstance21 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return u < this.m_vertexCount ? 1 : 0;
                                    },
                                    update: () => {
                                        ++u;
                                    },
                                    body: () => {
                                        {
                                            var D = parseInt(u), H = parseInt(u + 1 < this.m_vertexCount ? u + 1 : 0);
                                            D = B.SubtractVV(this.m_vertices[H], this.m_vertices[D]);
                                            (() => {
                                                const __callInstance631 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            F.b2Assert(D.LengthSquared() > Number.MIN_VALUE);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance631.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance630 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_normals[u].SetV(B.CrossVF(D, 1));
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance630.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance629 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_normals[u].Normalize();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance629.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance21.exports;
                            return __exports.data();
                        })();
                        this.m_centroid = A.ComputeCentroid(this.m_vertices, this.m_vertexCount);
                    };
                    A.AsVector = function (k, z) {
                        (() => {
                            const __ifInstance91 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        z = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance91.exports;
                            return __exports.data(z === undefined ? 1 : 0);
                        })();
                        var u = new A();
                        (() => {
                            const __callInstance628 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        u.SetAsVector(k, z);
                                    }
                                }
                            });
                            const __exports = __callInstance628.exports;
                            return __exports.data();
                        })();
                        return u;
                    };
                    A.prototype.SetAsBox = function (k, z) {
                        (() => {
                            const __ifInstance92 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        k = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance92.exports;
                            return __exports.data(k === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance93 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        z = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance93.exports;
                            return __exports.data(z === undefined ? 1 : 0);
                        })();
                        this.m_vertexCount = 4;
                        (() => {
                            const __callInstance627 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.Reserve(4);
                                    }
                                }
                            });
                            const __exports = __callInstance627.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance626 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_vertices[0].Set(-k, -z);
                                    }
                                }
                            });
                            const __exports = __callInstance626.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance625 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_vertices[1].Set(k, -z);
                                    }
                                }
                            });
                            const __exports = __callInstance625.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance624 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_vertices[2].Set(k, z);
                                    }
                                }
                            });
                            const __exports = __callInstance624.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance623 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_vertices[3].Set(-k, z);
                                    }
                                }
                            });
                            const __exports = __callInstance623.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance622 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_normals[0].Set(0, -1);
                                    }
                                }
                            });
                            const __exports = __callInstance622.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance621 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_normals[1].Set(1, 0);
                                    }
                                }
                            });
                            const __exports = __callInstance621.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance620 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_normals[2].Set(0, 1);
                                    }
                                }
                            });
                            const __exports = __callInstance620.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance619 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_normals[3].Set(-1, 0);
                                    }
                                }
                            });
                            const __exports = __callInstance619.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance618 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_centroid.SetZero();
                                    }
                                }
                            });
                            const __exports = __callInstance618.exports;
                            return __exports.data();
                        })();
                    };
                    A.AsBox = function (k, z) {
                        (() => {
                            const __ifInstance94 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        k = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance94.exports;
                            return __exports.data(k === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance95 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        z = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance95.exports;
                            return __exports.data(z === undefined ? 1 : 0);
                        })();
                        var u = new A();
                        (() => {
                            const __callInstance617 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        u.SetAsBox(k, z);
                                    }
                                }
                            });
                            const __exports = __callInstance617.exports;
                            return __exports.data();
                        })();
                        return u;
                    };
                    A.prototype.SetAsOrientedBox = function (k, z, u, D) {
                        (() => {
                            const __ifInstance96 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        k = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance96.exports;
                            return __exports.data(k === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance97 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        z = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance97.exports;
                            return __exports.data(z === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance98 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        u = null;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance98.exports;
                            return __exports.data(u === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance99 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        D = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance99.exports;
                            return __exports.data(D === undefined ? 1 : 0);
                        })();
                        this.m_vertexCount = 4;
                        (() => {
                            const __callInstance616 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.Reserve(4);
                                    }
                                }
                            });
                            const __exports = __callInstance616.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance615 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_vertices[0].Set(-k, -z);
                                    }
                                }
                            });
                            const __exports = __callInstance615.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance614 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_vertices[1].Set(k, -z);
                                    }
                                }
                            });
                            const __exports = __callInstance614.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance613 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_vertices[2].Set(k, z);
                                    }
                                }
                            });
                            const __exports = __callInstance613.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance612 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_vertices[3].Set(-k, z);
                                    }
                                }
                            });
                            const __exports = __callInstance612.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance611 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_normals[0].Set(0, -1);
                                    }
                                }
                            });
                            const __exports = __callInstance611.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance610 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_normals[1].Set(1, 0);
                                    }
                                }
                            });
                            const __exports = __callInstance610.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance609 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_normals[2].Set(0, 1);
                                    }
                                }
                            });
                            const __exports = __callInstance609.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance608 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_normals[3].Set(-1, 0);
                                    }
                                }
                            });
                            const __exports = __callInstance608.exports;
                            return __exports.data();
                        })();
                        this.m_centroid = u;
                        k = new Q();
                        k.position = u;
                        (() => {
                            const __callInstance607 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        k.R.Set(D);
                                    }
                                }
                            });
                            const __exports = __callInstance607.exports;
                            return __exports.data();
                        })();
                        (() => {
                            u = 0;
                            const __forInstance22 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return u < this.m_vertexCount ? 1 : 0;
                                    },
                                    update: () => {
                                        ++u;
                                    },
                                    body: () => {
                                        {
                                            this.m_vertices[u] = B.MulX(k, this.m_vertices[u]);
                                            this.m_normals[u] = B.MulMV(k.R, this.m_normals[u]);
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance22.exports;
                            return __exports.data();
                        })();
                    };
                    A.AsOrientedBox = function (k, z, u, D) {
                        (() => {
                            const __ifInstance100 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        k = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance100.exports;
                            return __exports.data(k === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance101 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        z = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance101.exports;
                            return __exports.data(z === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance102 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        u = null;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance102.exports;
                            return __exports.data(u === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance103 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        D = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance103.exports;
                            return __exports.data(D === undefined ? 1 : 0);
                        })();
                        var H = new A();
                        (() => {
                            const __callInstance606 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        H.SetAsOrientedBox(k, z, u, D);
                                    }
                                }
                            });
                            const __exports = __callInstance606.exports;
                            return __exports.data();
                        })();
                        return H;
                    };
                    A.prototype.SetAsEdge = function (k, z) {
                        this.m_vertexCount = 2;
                        (() => {
                            const __callInstance605 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.Reserve(2);
                                    }
                                }
                            });
                            const __exports = __callInstance605.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance604 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_vertices[0].SetV(k);
                                    }
                                }
                            });
                            const __exports = __callInstance604.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance603 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_vertices[1].SetV(z);
                                    }
                                }
                            });
                            const __exports = __callInstance603.exports;
                            return __exports.data();
                        })();
                        this.m_centroid.x = 0.5 * (k.x + z.x);
                        this.m_centroid.y = 0.5 * (k.y + z.y);
                        this.m_normals[0] = B.CrossVF(B.SubtractVV(z, k), 1);
                        (() => {
                            const __callInstance602 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_normals[0].Normalize();
                                    }
                                }
                            });
                            const __exports = __callInstance602.exports;
                            return __exports.data();
                        })();
                        this.m_normals[1].x = -this.m_normals[0].x;
                        this.m_normals[1].y = -this.m_normals[0].y;
                    };
                    A.AsEdge = function (k, z) {
                        var u = new A();
                        (() => {
                            const __callInstance601 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        u.SetAsEdge(k, z);
                                    }
                                }
                            });
                            const __exports = __callInstance601.exports;
                            return __exports.data();
                        })();
                        return u;
                    };
                    A.prototype.TestPoint = function (k, z) {
                        var u;
                        u = k.R;
                        for (var D = z.x - k.position.x, H = z.y - k.position.y, O = D * u.col1.x + H * u.col1.y, E = D * u.col2.x + H * u.col2.y, R = 0; R < this.m_vertexCount; ++R) {
                            u = this.m_vertices[R];
                            D = O - u.x;
                            H = E - u.y;
                            u = this.m_normals[R];
                            if (u.x * D + u.y * H > 0)
                                return false;
                        }
                        return true;
                    };
                    A.prototype.RayCast = function (k, z, u) {
                        var D = 0, H = z.maxFraction, O = 0, E = 0, R, N;
                        O = z.p1.x - u.position.x;
                        E = z.p1.y - u.position.y;
                        R = u.R;
                        var S = O * R.col1.x + E * R.col1.y, aa = O * R.col2.x + E * R.col2.y;
                        O = z.p2.x - u.position.x;
                        E = z.p2.y - u.position.y;
                        R = u.R;
                        z = O * R.col1.x + E * R.col1.y - S;
                        R = O * R.col2.x + E * R.col2.y - aa;
                        for (var Z = parseInt(-1), d = 0; d < this.m_vertexCount; ++d) {
                            N = this.m_vertices[d];
                            O = N.x - S;
                            E = N.y - aa;
                            N = this.m_normals[d];
                            O = N.x * O + N.y * E;
                            E = N.x * z + N.y * R;
                            if (E == 0) {
                                if (O < 0)
                                    return false;
                            } else
                                (() => {
                                    const __ifInstance104 = new WebAssembly.Instance(__ifWasmModule, {
                                        env: {
                                            impFunc1: () => {
                                                {
                                                    D = O / E;
                                                    Z = d;
                                                }
                                            },
                                            impFunc2: () => {
                                                (() => {
                                                    const __ifInstance105 = new WebAssembly.Instance(__ifWasmModule, {
                                                        env: {
                                                            impFunc1: () => {
                                                                H = O / E;
                                                            },
                                                            impFunc2: () => {
                                                            }
                                                        }
                                                    });
                                                    const __exports = __ifInstance105.exports;
                                                    return __exports.data(E > 0 && O < H * E ? 1 : 0);
                                                })();
                                            }
                                        }
                                    });
                                    const __exports = __ifInstance104.exports;
                                    return __exports.data(E < 0 && O < D * E ? 1 : 0);
                                })();
                            if (H < D - Number.MIN_VALUE)
                                return false;
                        }
                        if (Z >= 0) {
                            k.fraction = D;
                            R = u.R;
                            N = this.m_normals[Z];
                            k.normal.x = R.col1.x * N.x + R.col2.x * N.y;
                            k.normal.y = R.col1.y * N.x + R.col2.y * N.y;
                            return true;
                        }
                        return false;
                    };
                    A.prototype.ComputeAABB = function (k, z) {
                        (() => {
                            var u = z.R, D = this.m_vertices[0], H = z.position.x + (u.col1.x * D.x + u.col2.x * D.y), O = z.position.y + (u.col1.y * D.x + u.col2.y * D.y), E = H, R = O, N = 1;
                            const __forInstance23 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return N < this.m_vertexCount ? 1 : 0;
                                    },
                                    update: () => {
                                        ++N;
                                    },
                                    body: () => {
                                        {
                                            D = this.m_vertices[N];
                                            var S = z.position.x + (u.col1.x * D.x + u.col2.x * D.y);
                                            D = z.position.y + (u.col1.y * D.x + u.col2.y * D.y);
                                            H = H < S ? H : S;
                                            O = O < D ? O : D;
                                            E = E > S ? E : S;
                                            R = R > D ? R : D;
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance23.exports;
                            return __exports.data();
                        })();
                        k.lowerBound.x = H - this.m_radius;
                        k.lowerBound.y = O - this.m_radius;
                        k.upperBound.x = E + this.m_radius;
                        k.upperBound.y = R + this.m_radius;
                    };
                    A.prototype.ComputeMass = function (k, z) {
                        (() => {
                            const __ifInstance106 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        z = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance106.exports;
                            return __exports.data(z === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance107 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            k.center.x = 0.5 * (this.m_vertices[0].x + this.m_vertices[1].x);
                                            k.center.y = 0.5 * (this.m_vertices[0].y + this.m_vertices[1].y);
                                            k.mass = 0;
                                            k.I = 0;
                                        }
                                    },
                                    impFunc2: () => {
                                        {
                                            (() => {
                                                var u = 0, D = 0, H = 0, O = 0, E = 1 / 3, R = 0;
                                                const __forInstance24 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return R < this.m_vertexCount ? 1 : 0;
                                                        },
                                                        update: () => {
                                                            ++R;
                                                        },
                                                        body: () => {
                                                            {
                                                                var N = this.m_vertices[R], S = R + 1 < this.m_vertexCount ? this.m_vertices[parseInt(R + 1)] : this.m_vertices[0], aa = N.x - 0, Z = N.y - 0, d = S.x - 0, h = S.y - 0, l = aa * h - Z * d, j = 0.5 * l;
                                                                H += j;
                                                                u += j * E * (0 + N.x + S.x);
                                                                D += j * E * (0 + N.y + S.y);
                                                                N = aa;
                                                                Z = Z;
                                                                d = d;
                                                                h = h;
                                                                O += l * (E * (0.25 * (N * N + d * N + d * d) + (0 * N + 0 * d)) + 0 + (E * (0.25 * (Z * Z + h * Z + h * h) + (0 * Z + 0 * h)) + 0));
                                                            }
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance24.exports;
                                                return __exports.data();
                                            })();
                                            k.mass = z * H;
                                            u *= 1 / H;
                                            D *= 1 / H;
                                            (() => {
                                                const __callInstance600 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            k.center.Set(u, D);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance600.exports;
                                                return __exports.data();
                                            })();
                                            k.I = z * O;
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance107.exports;
                            return __exports.data(this.m_vertexCount == 2 ? 1 : 0);
                        })();
                    };
                    A.prototype.ComputeSubmergedArea = function (k, z, u, D) {
                        (() => {
                            const __ifInstance108 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        z = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance108.exports;
                            return __exports.data(z === undefined ? 1 : 0);
                        })();
                        var H = B.MulTMV(u.R, k), O = z - B.Dot(k, u.position), E = new Vector_a2j_Number(), R = 0, N = parseInt(-1);
                        z = parseInt(-1);
                        var S = false;
                        (() => {
                            k = k = 0;
                            const __forInstance25 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return k < this.m_vertexCount ? 1 : 0;
                                    },
                                    update: () => {
                                        ++k;
                                    },
                                    body: () => {
                                        {
                                            E[k] = B.Dot(H, this.m_vertices[k]) - O;
                                            var aa = E[k] < -Number.MIN_VALUE;
                                            (() => {
                                                const __ifInstance109 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            (() => {
                                                                const __ifInstance110 = new WebAssembly.Instance(__ifWasmModule, {
                                                                    env: {
                                                                        impFunc1: () => {
                                                                            {
                                                                                (() => {
                                                                                    const __ifInstance111 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                        env: {
                                                                                            impFunc1: () => {
                                                                                                {
                                                                                                    N = k - 1;
                                                                                                    R++;
                                                                                                }
                                                                                            },
                                                                                            impFunc2: () => {
                                                                                            }
                                                                                        }
                                                                                    });
                                                                                    const __exports = __ifInstance111.exports;
                                                                                    return __exports.data(!S ? 1 : 0);
                                                                                })();
                                                                            }
                                                                        },
                                                                        impFunc2: () => {
                                                                            (() => {
                                                                                const __ifInstance112 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                    env: {
                                                                                        impFunc1: () => {
                                                                                            {
                                                                                                z = k - 1;
                                                                                                R++;
                                                                                            }
                                                                                        },
                                                                                        impFunc2: () => {
                                                                                        }
                                                                                    }
                                                                                });
                                                                                const __exports = __ifInstance112.exports;
                                                                                return __exports.data(S ? 1 : 0);
                                                                            })();
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __ifInstance110.exports;
                                                                return __exports.data(aa ? 1 : 0);
                                                            })();
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance109.exports;
                                                return __exports.data(k > 0 ? 1 : 0);
                                            })();
                                            S = aa;
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance25.exports;
                            return __exports.data();
                        })();
                        switch (R) {
                        case 0:
                            if (S) {
                                k = new w();
                                (() => {
                                    const __callInstance599 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                this.ComputeMass(k, 1);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance599.exports;
                                    return __exports.data();
                                })();
                                (() => {
                                    const __callInstance598 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                D.SetV(B.MulX(u, k.center));
                                            }
                                        }
                                    });
                                    const __exports = __callInstance598.exports;
                                    return __exports.data();
                                })();
                                return k.mass;
                            } else
                                return 0;
                        case 1:
                            (() => {
                                const __ifInstance113 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            N = this.m_vertexCount - 1;
                                        },
                                        impFunc2: () => {
                                            z = this.m_vertexCount - 1;
                                        }
                                    }
                                });
                                const __exports = __ifInstance113.exports;
                                return __exports.data(N == -1 ? 1 : 0);
                            })();
                        }
                        k = parseInt((N + 1) % this.m_vertexCount);
                        H = parseInt((z + 1) % this.m_vertexCount);
                        O = (0 - E[N]) / (E[k] - E[N]);
                        E = (0 - E[z]) / (E[H] - E[z]);
                        N = new V(this.m_vertices[N].x * (1 - O) + this.m_vertices[k].x * O, this.m_vertices[N].y * (1 - O) + this.m_vertices[k].y * O);
                        z = new V(this.m_vertices[z].x * (1 - E) + this.m_vertices[H].x * E, this.m_vertices[z].y * (1 - E) + this.m_vertices[H].y * E);
                        E = 0;
                        O = new V();
                        R = this.m_vertices[k];
                        (() => {
                            k = k;
                            const __forInstance26 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return k != H ? 1 : 0;
                                    },
                                    update: () => {
                                    },
                                    body: () => {
                                        {
                                            k = (k + 1) % this.m_vertexCount;
                                            S = k == H ? z : this.m_vertices[k];
                                            aa = 0.5 * ((R.x - N.x) * (S.y - N.y) - (R.y - N.y) * (S.x - N.x));
                                            E += aa;
                                            O.x += aa * (N.x + R.x + S.x) / 3;
                                            O.y += aa * (N.y + R.y + S.y) / 3;
                                            R = S;
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance26.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance597 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        O.Multiply(1 / E);
                                    }
                                }
                            });
                            const __exports = __callInstance597.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance596 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        D.SetV(B.MulX(u, O));
                                    }
                                }
                            });
                            const __exports = __callInstance596.exports;
                            return __exports.data();
                        })();
                        return E;
                    };
                    A.prototype.GetVertexCount = function () {
                        return this.m_vertexCount;
                    };
                    A.prototype.GetVertices = function () {
                        return this.m_vertices;
                    };
                    A.prototype.GetNormals = function () {
                        return this.m_normals;
                    };
                    A.prototype.GetSupport = function (k) {
                        (() => {
                            var z = 0, u = this.m_vertices[0].x * k.x + this.m_vertices[0].y * k.y, D = 1;
                            const __forInstance27 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return D < this.m_vertexCount ? 1 : 0;
                                    },
                                    update: () => {
                                        ++D;
                                    },
                                    body: () => {
                                        {
                                            var H = this.m_vertices[D].x * k.x + this.m_vertices[D].y * k.y;
                                            (() => {
                                                const __ifInstance114 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                z = D;
                                                                u = H;
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance114.exports;
                                                return __exports.data(H > u ? 1 : 0);
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance27.exports;
                            return __exports.data();
                        })();
                        return z;
                    };
                    A.prototype.GetSupportVertex = function (k) {
                        (() => {
                            var z = 0, u = this.m_vertices[0].x * k.x + this.m_vertices[0].y * k.y, D = 1;
                            const __forInstance28 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return D < this.m_vertexCount ? 1 : 0;
                                    },
                                    update: () => {
                                        ++D;
                                    },
                                    body: () => {
                                        {
                                            var H = this.m_vertices[D].x * k.x + this.m_vertices[D].y * k.y;
                                            (() => {
                                                const __ifInstance115 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                z = D;
                                                                u = H;
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance115.exports;
                                                return __exports.data(H > u ? 1 : 0);
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance28.exports;
                            return __exports.data();
                        })();
                        return this.m_vertices[z];
                    };
                    A.prototype.Validate = function () {
                        return false;
                    };
                    A.prototype.b2PolygonShape = function () {
                        (() => {
                            const __callInstance595 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.b2Shape.call(this);
                                    }
                                }
                            });
                            const __exports = __callInstance595.exports;
                            return __exports.data();
                        })();
                        this.m_type = U.e_polygonShape;
                        this.m_centroid = new V();
                        this.m_vertices = new Vector();
                        this.m_normals = new Vector();
                    };
                    A.prototype.Reserve = function (k) {
                        (() => {
                            const __ifInstance116 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        k = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance116.exports;
                            return __exports.data(k === undefined ? 1 : 0);
                        })();
                        (() => {
                            var z = parseInt(this.m_vertices.length);
                            const __forInstance29 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return z < k ? 1 : 0;
                                    },
                                    update: () => {
                                        z++;
                                    },
                                    body: () => {
                                        {
                                            this.m_vertices[z] = new V();
                                            this.m_normals[z] = new V();
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance29.exports;
                            return __exports.data();
                        })();
                    };
                    A.ComputeCentroid = function (k, z) {
                        (() => {
                            const __ifInstance117 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        z = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance117.exports;
                            return __exports.data(z === undefined ? 1 : 0);
                        })();
                        (() => {
                            var u = new V(), D = 0, H = 1 / 3, O = 0;
                            const __forInstance30 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return O < z ? 1 : 0;
                                    },
                                    update: () => {
                                        ++O;
                                    },
                                    body: () => {
                                        {
                                            var E = k[O], R = O + 1 < z ? k[parseInt(O + 1)] : k[0], N = 0.5 * ((E.x - 0) * (R.y - 0) - (E.y - 0) * (R.x - 0));
                                            D += N;
                                            u.x += N * H * (0 + E.x + R.x);
                                            u.y += N * H * (0 + E.y + R.y);
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance30.exports;
                            return __exports.data();
                        })();
                        u.x *= 1 / D;
                        u.y *= 1 / D;
                        return u;
                    };
                    A.ComputeOBB = function (k, z, u) {
                        (() => {
                            const __ifInstance118 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        u = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance118.exports;
                            return __exports.data(u === undefined ? 1 : 0);
                        })();
                        var D = 0, H = new Vector(u + 1);
                        (() => {
                            D = 0;
                            const __forInstance31 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return D < u ? 1 : 0;
                                    },
                                    update: () => {
                                        ++D;
                                    },
                                    body: () => {
                                        H[D] = z[D];
                                    }
                                }
                            });
                            const __exports = __forInstance31.exports;
                            return __exports.data();
                        })();
                        H[u] = H[0];
                        z = Number.MAX_VALUE;
                        (() => {
                            D = 1;
                            const __forInstance32 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return D <= u ? 1 : 0;
                                    },
                                    update: () => {
                                        ++D;
                                    },
                                    body: () => {
                                        {
                                            var O = H[parseInt(D - 1)], E = H[D].x - O.x, R = H[D].y - O.y, N = Math.sqrt(E * E + R * R);
                                            E /= N;
                                            R /= N;
                                            (() => {
                                                var S = -R, aa = E, Z = N = Number.MAX_VALUE, d = -Number.MAX_VALUE, h = -Number.MAX_VALUE, l = 0;
                                                const __forInstance33 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return l < u ? 1 : 0;
                                                        },
                                                        update: () => {
                                                            ++l;
                                                        },
                                                        body: () => {
                                                            {
                                                                var j = H[l].x - O.x, o = H[l].y - O.y, q = E * j + R * o;
                                                                j = S * j + aa * o;
                                                                (() => {
                                                                    const __ifInstance119 = new WebAssembly.Instance(__ifWasmModule, {
                                                                        env: {
                                                                            impFunc1: () => {
                                                                                N = q;
                                                                            },
                                                                            impFunc2: () => {
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __ifInstance119.exports;
                                                                    return __exports.data(q < N ? 1 : 0);
                                                                })();
                                                                (() => {
                                                                    const __ifInstance120 = new WebAssembly.Instance(__ifWasmModule, {
                                                                        env: {
                                                                            impFunc1: () => {
                                                                                Z = j;
                                                                            },
                                                                            impFunc2: () => {
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __ifInstance120.exports;
                                                                    return __exports.data(j < Z ? 1 : 0);
                                                                })();
                                                                (() => {
                                                                    const __ifInstance121 = new WebAssembly.Instance(__ifWasmModule, {
                                                                        env: {
                                                                            impFunc1: () => {
                                                                                d = q;
                                                                            },
                                                                            impFunc2: () => {
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __ifInstance121.exports;
                                                                    return __exports.data(q > d ? 1 : 0);
                                                                })();
                                                                (() => {
                                                                    const __ifInstance122 = new WebAssembly.Instance(__ifWasmModule, {
                                                                        env: {
                                                                            impFunc1: () => {
                                                                                h = j;
                                                                            },
                                                                            impFunc2: () => {
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __ifInstance122.exports;
                                                                    return __exports.data(j > h ? 1 : 0);
                                                                })();
                                                            }
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance33.exports;
                                                return __exports.data();
                                            })();
                                            l = (d - N) * (h - Z);
                                            (() => {
                                                const __ifInstance123 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                z = l;
                                                                k.R.col1.x = E;
                                                                k.R.col1.y = R;
                                                                k.R.col2.x = S;
                                                                k.R.col2.y = aa;
                                                                E = 0.5 * (N + d);
                                                                R = 0.5 * (Z + h);
                                                                S = k.R;
                                                                k.center.x = O.x + (S.col1.x * E + S.col2.x * R);
                                                                k.center.y = O.y + (S.col1.y * E + S.col2.y * R);
                                                                k.extents.x = 0.5 * (d - N);
                                                                k.extents.y = 0.5 * (h - Z);
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance123.exports;
                                                return __exports.data(l < 0.95 * z ? 1 : 0);
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance32.exports;
                            return __exports.data();
                        })();
                    };
                    (() => {
                        const __callInstance594 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.postDefs.push(function () {
                                        Box2D.Collision.Shapes.b2PolygonShape.s_mat = new p();
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance594.exports;
                        return __exports.data();
                    })();
                    U.b2Shape = function () {
                    };
                    U.prototype.Copy = function () {
                        return null;
                    };
                    U.prototype.Set = function (k) {
                        this.m_radius = k.m_radius;
                    };
                    U.prototype.GetType = function () {
                        return this.m_type;
                    };
                    U.prototype.TestPoint = function () {
                        return false;
                    };
                    U.prototype.RayCast = function () {
                        return false;
                    };
                    U.prototype.ComputeAABB = function () {
                    };
                    U.prototype.ComputeMass = function () {
                    };
                    U.prototype.ComputeSubmergedArea = function () {
                        return 0;
                    };
                    U.TestOverlap = function (k, z, u, D) {
                        var H = new L();
                        H.proxyA = new W();
                        (() => {
                            const __callInstance593 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        H.proxyA.Set(k);
                                    }
                                }
                            });
                            const __exports = __callInstance593.exports;
                            return __exports.data();
                        })();
                        H.proxyB = new W();
                        (() => {
                            const __callInstance592 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        H.proxyB.Set(u);
                                    }
                                }
                            });
                            const __exports = __callInstance592.exports;
                            return __exports.data();
                        })();
                        H.transformA = z;
                        H.transformB = D;
                        H.useRadii = true;
                        k = new Y();
                        k.count = 0;
                        z = new I();
                        (() => {
                            const __callInstance591 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        M.Distance(z, k, H);
                                    }
                                }
                            });
                            const __exports = __callInstance591.exports;
                            return __exports.data();
                        })();
                        return z.distance < 10 * Number.MIN_VALUE;
                    };
                    U.prototype.b2Shape = function () {
                        this.m_type = U.e_unknownShape;
                        this.m_radius = F.b2_linearSlop;
                    };
                    (() => {
                        const __callInstance590 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.postDefs.push(function () {
                                        Box2D.Collision.Shapes.b2Shape.e_unknownShape = parseInt(-1);
                                        Box2D.Collision.Shapes.b2Shape.e_circleShape = 0;
                                        Box2D.Collision.Shapes.b2Shape.e_polygonShape = 1;
                                        Box2D.Collision.Shapes.b2Shape.e_edgeShape = 2;
                                        Box2D.Collision.Shapes.b2Shape.e_shapeTypeCount = 3;
                                        Box2D.Collision.Shapes.b2Shape.e_hitCollide = 1;
                                        Box2D.Collision.Shapes.b2Shape.e_missCollide = 0;
                                        Box2D.Collision.Shapes.b2Shape.e_startsInsideCollide = parseInt(-1);
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance590.exports;
                        return __exports.data();
                    })();
                }());
            }
        }
    });
    const __exports = __callInstance667.exports;
    return __exports.data();
})();
(() => {
    const __callInstance589 = new WebAssembly.Instance(__callWasmModule, {
        env: {
            impFunc: () => {
                (function () {
                    var F = Box2D.Common.b2Color, G = Box2D.Common.b2Settings, K = Box2D.Common.Math.b2Math;
                    F.b2Color = function () {
                        this._b = this._g = this._r = 0;
                    };
                    F.prototype.b2Color = function (y, w, A) {
                        (() => {
                            const __ifInstance124 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        y = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance124.exports;
                            return __exports.data(y === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance125 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        w = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance125.exports;
                            return __exports.data(w === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance126 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        A = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance126.exports;
                            return __exports.data(A === undefined ? 1 : 0);
                        })();
                        this._r = Box2D.parseUInt(255 * K.Clamp(y, 0, 1));
                        this._g = Box2D.parseUInt(255 * K.Clamp(w, 0, 1));
                        this._b = Box2D.parseUInt(255 * K.Clamp(A, 0, 1));
                    };
                    F.prototype.Set = function (y, w, A) {
                        (() => {
                            const __ifInstance127 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        y = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance127.exports;
                            return __exports.data(y === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance128 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        w = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance128.exports;
                            return __exports.data(w === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance129 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        A = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance129.exports;
                            return __exports.data(A === undefined ? 1 : 0);
                        })();
                        this._r = Box2D.parseUInt(255 * K.Clamp(y, 0, 1));
                        this._g = Box2D.parseUInt(255 * K.Clamp(w, 0, 1));
                        this._b = Box2D.parseUInt(255 * K.Clamp(A, 0, 1));
                    };
                    (() => {
                        const __callInstance588 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Object.defineProperty(F.prototype, lS(0, 21), {
                                        enumerable: false,
                                        configurable: true,
                                        set: function (y) {
                                            (() => {
                                                const __ifInstance130 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            y = 0;
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance130.exports;
                                                return __exports.data(y === undefined ? 1 : 0);
                                            })();
                                            this._r = Box2D.parseUInt(255 * K.Clamp(y, 0, 1));
                                        }
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance588.exports;
                        return __exports.data();
                    })();
                    (() => {
                        const __callInstance587 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Object.defineProperty(F.prototype, lS(0, 22), {
                                        enumerable: false,
                                        configurable: true,
                                        set: function (y) {
                                            (() => {
                                                const __ifInstance131 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            y = 0;
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance131.exports;
                                                return __exports.data(y === undefined ? 1 : 0);
                                            })();
                                            this._g = Box2D.parseUInt(255 * K.Clamp(y, 0, 1));
                                        }
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance587.exports;
                        return __exports.data();
                    })();
                    (() => {
                        const __callInstance586 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Object.defineProperty(F.prototype, lS(0, 23), {
                                        enumerable: false,
                                        configurable: true,
                                        set: function (y) {
                                            (() => {
                                                const __ifInstance132 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            y = 0;
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance132.exports;
                                                return __exports.data(y === undefined ? 1 : 0);
                                            })();
                                            this._b = Box2D.parseUInt(255 * K.Clamp(y, 0, 1));
                                        }
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance586.exports;
                        return __exports.data();
                    })();
                    (() => {
                        const __callInstance585 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Object.defineProperty(F.prototype, lS(0, 24), {
                                        enumerable: false,
                                        configurable: true,
                                        get: function () {
                                            return this._r << 16 | this._g << 8 | this._b;
                                        }
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance585.exports;
                        return __exports.data();
                    })();
                    G.b2Settings = function () {
                    };
                    G.b2MixFriction = function (y, w) {
                        (() => {
                            const __ifInstance133 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        y = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance133.exports;
                            return __exports.data(y === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance134 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        w = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance134.exports;
                            return __exports.data(w === undefined ? 1 : 0);
                        })();
                        return Math.sqrt(y * w);
                    };
                    G.b2MixRestitution = function (y, w) {
                        (() => {
                            const __ifInstance135 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        y = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance135.exports;
                            return __exports.data(y === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance136 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        w = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance136.exports;
                            return __exports.data(w === undefined ? 1 : 0);
                        })();
                        return y > w ? y : w;
                    };
                    G.b2Assert = function (y) {
                        if (!y)
                            throw lS(0, 25);
                    };
                    (() => {
                        const __callInstance584 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.postDefs.push(function () {
                                        Box2D.Common.b2Settings.VERSION = lS(0, 26);
                                        Box2D.Common.b2Settings.USHRT_MAX = 65535;
                                        Box2D.Common.b2Settings.b2_pi = Math.PI;
                                        Box2D.Common.b2Settings.b2_maxManifoldPoints = 2;
                                        Box2D.Common.b2Settings.b2_aabbExtension = 0.1;
                                        Box2D.Common.b2Settings.b2_aabbMultiplier = 2;
                                        Box2D.Common.b2Settings.b2_polygonRadius = 2 * G.b2_linearSlop;
                                        Box2D.Common.b2Settings.b2_linearSlop = 0.005;
                                        Box2D.Common.b2Settings.b2_angularSlop = 2 / 180 * G.b2_pi;
                                        Box2D.Common.b2Settings.b2_toiSlop = 8 * G.b2_linearSlop;
                                        Box2D.Common.b2Settings.b2_maxTOIContactsPerIsland = 32;
                                        Box2D.Common.b2Settings.b2_maxTOIJointsPerIsland = 32;
                                        Box2D.Common.b2Settings.b2_velocityThreshold = 1;
                                        Box2D.Common.b2Settings.b2_maxLinearCorrection = 0.2;
                                        Box2D.Common.b2Settings.b2_maxAngularCorrection = 8 / 180 * G.b2_pi;
                                        Box2D.Common.b2Settings.b2_maxTranslation = 2;
                                        Box2D.Common.b2Settings.b2_maxTranslationSquared = G.b2_maxTranslation * G.b2_maxTranslation;
                                        Box2D.Common.b2Settings.b2_maxRotation = 0.5 * G.b2_pi;
                                        Box2D.Common.b2Settings.b2_maxRotationSquared = G.b2_maxRotation * G.b2_maxRotation;
                                        Box2D.Common.b2Settings.b2_contactBaumgarte = 0.2;
                                        Box2D.Common.b2Settings.b2_timeToSleep = 0.5;
                                        Box2D.Common.b2Settings.b2_linearSleepTolerance = 0.01;
                                        Box2D.Common.b2Settings.b2_angularSleepTolerance = 2 / 180 * G.b2_pi;
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance584.exports;
                        return __exports.data();
                    })();
                }());
            }
        }
    });
    const __exports = __callInstance589.exports;
    return __exports.data();
})();
(() => {
    const __callInstance583 = new WebAssembly.Instance(__callWasmModule, {
        env: {
            impFunc: () => {
                (function () {
                    var F = Box2D.Common.Math.b2Mat22, G = Box2D.Common.Math.b2Mat33, K = Box2D.Common.Math.b2Math, y = Box2D.Common.Math.b2Sweep, w = Box2D.Common.Math.b2Transform, A = Box2D.Common.Math.b2Vec2, U = Box2D.Common.Math.b2Vec3;
                    F.b2Mat22 = function () {
                        this.col1 = new A();
                        this.col2 = new A();
                    };
                    F.prototype.b2Mat22 = function () {
                        (() => {
                            const __callInstance582 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.SetIdentity();
                                    }
                                }
                            });
                            const __exports = __callInstance582.exports;
                            return __exports.data();
                        })();
                    };
                    F.FromAngle = function (p) {
                        (() => {
                            const __ifInstance137 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        p = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance137.exports;
                            return __exports.data(p === undefined ? 1 : 0);
                        })();
                        var B = new F();
                        (() => {
                            const __callInstance581 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        B.Set(p);
                                    }
                                }
                            });
                            const __exports = __callInstance581.exports;
                            return __exports.data();
                        })();
                        return B;
                    };
                    F.FromVV = function (p, B) {
                        var Q = new F();
                        (() => {
                            const __callInstance580 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Q.SetVV(p, B);
                                    }
                                }
                            });
                            const __exports = __callInstance580.exports;
                            return __exports.data();
                        })();
                        return Q;
                    };
                    F.prototype.Set = function (p) {
                        (() => {
                            const __ifInstance138 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        p = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance138.exports;
                            return __exports.data(p === undefined ? 1 : 0);
                        })();
                        var B = Math.cos(p);
                        p = Math.sin(p);
                        this.col1.x = B;
                        this.col2.x = -p;
                        this.col1.y = p;
                        this.col2.y = B;
                    };
                    F.prototype.SetVV = function (p, B) {
                        (() => {
                            const __callInstance579 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.col1.SetV(p);
                                    }
                                }
                            });
                            const __exports = __callInstance579.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance578 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.col2.SetV(B);
                                    }
                                }
                            });
                            const __exports = __callInstance578.exports;
                            return __exports.data();
                        })();
                    };
                    F.prototype.Copy = function () {
                        var p = new F();
                        (() => {
                            const __callInstance577 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        p.SetM(this);
                                    }
                                }
                            });
                            const __exports = __callInstance577.exports;
                            return __exports.data();
                        })();
                        return p;
                    };
                    F.prototype.SetM = function (p) {
                        (() => {
                            const __callInstance576 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.col1.SetV(p.col1);
                                    }
                                }
                            });
                            const __exports = __callInstance576.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance575 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.col2.SetV(p.col2);
                                    }
                                }
                            });
                            const __exports = __callInstance575.exports;
                            return __exports.data();
                        })();
                    };
                    F.prototype.AddM = function (p) {
                        this.col1.x += p.col1.x;
                        this.col1.y += p.col1.y;
                        this.col2.x += p.col2.x;
                        this.col2.y += p.col2.y;
                    };
                    F.prototype.SetIdentity = function () {
                        this.col1.x = 1;
                        this.col2.x = 0;
                        this.col1.y = 0;
                        this.col2.y = 1;
                    };
                    F.prototype.SetZero = function () {
                        this.col1.x = 0;
                        this.col2.x = 0;
                        this.col1.y = 0;
                        this.col2.y = 0;
                    };
                    F.prototype.GetAngle = function () {
                        return Math.atan2(this.col1.y, this.col1.x);
                    };
                    F.prototype.GetInverse = function (p) {
                        var B = this.col1.x, Q = this.col2.x, V = this.col1.y, M = this.col2.y, L = B * M - Q * V;
                        (() => {
                            const __ifInstance139 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        L = 1 / L;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance139.exports;
                            return __exports.data(L != 0 ? 1 : 0);
                        })();
                        p.col1.x = L * M;
                        p.col2.x = -L * Q;
                        p.col1.y = -L * V;
                        p.col2.y = L * B;
                        return p;
                    };
                    F.prototype.Solve = function (p, B, Q) {
                        (() => {
                            const __ifInstance140 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        B = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance140.exports;
                            return __exports.data(B === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance141 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        Q = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance141.exports;
                            return __exports.data(Q === undefined ? 1 : 0);
                        })();
                        var V = this.col1.x, M = this.col2.x, L = this.col1.y, I = this.col2.y, W = V * I - M * L;
                        (() => {
                            const __ifInstance142 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        W = 1 / W;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance142.exports;
                            return __exports.data(W != 0 ? 1 : 0);
                        })();
                        p.x = W * (I * B - M * Q);
                        p.y = W * (V * Q - L * B);
                        return p;
                    };
                    F.prototype.Abs = function () {
                        (() => {
                            const __callInstance574 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.col1.Abs();
                                    }
                                }
                            });
                            const __exports = __callInstance574.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance573 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.col2.Abs();
                                    }
                                }
                            });
                            const __exports = __callInstance573.exports;
                            return __exports.data();
                        })();
                    };
                    G.b2Mat33 = function () {
                        this.col1 = new U();
                        this.col2 = new U();
                        this.col3 = new U();
                    };
                    G.prototype.b2Mat33 = function (p, B, Q) {
                        (() => {
                            const __ifInstance143 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        p = null;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance143.exports;
                            return __exports.data(p === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance144 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        B = null;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance144.exports;
                            return __exports.data(B === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance145 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        Q = null;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance145.exports;
                            return __exports.data(Q === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance146 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            (() => {
                                                const __callInstance572 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.col1.SetZero();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance572.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance571 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.col2.SetZero();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance571.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance570 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.col3.SetZero();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance570.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                        {
                                            (() => {
                                                const __callInstance569 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.col1.SetV(p);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance569.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance568 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.col2.SetV(B);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance568.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance567 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.col3.SetV(Q);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance567.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance146.exports;
                            return __exports.data(!p && !B && !Q ? 1 : 0);
                        })();
                    };
                    G.prototype.SetVVV = function (p, B, Q) {
                        (() => {
                            const __callInstance566 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.col1.SetV(p);
                                    }
                                }
                            });
                            const __exports = __callInstance566.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance565 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.col2.SetV(B);
                                    }
                                }
                            });
                            const __exports = __callInstance565.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance564 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.col3.SetV(Q);
                                    }
                                }
                            });
                            const __exports = __callInstance564.exports;
                            return __exports.data();
                        })();
                    };
                    G.prototype.Copy = function () {
                        return new G(this.col1, this.col2, this.col3);
                    };
                    G.prototype.SetM = function (p) {
                        (() => {
                            const __callInstance563 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.col1.SetV(p.col1);
                                    }
                                }
                            });
                            const __exports = __callInstance563.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance562 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.col2.SetV(p.col2);
                                    }
                                }
                            });
                            const __exports = __callInstance562.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance561 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.col3.SetV(p.col3);
                                    }
                                }
                            });
                            const __exports = __callInstance561.exports;
                            return __exports.data();
                        })();
                    };
                    G.prototype.AddM = function (p) {
                        this.col1.x += p.col1.x;
                        this.col1.y += p.col1.y;
                        this.col1.z += p.col1.z;
                        this.col2.x += p.col2.x;
                        this.col2.y += p.col2.y;
                        this.col2.z += p.col2.z;
                        this.col3.x += p.col3.x;
                        this.col3.y += p.col3.y;
                        this.col3.z += p.col3.z;
                    };
                    G.prototype.SetIdentity = function () {
                        this.col1.x = 1;
                        this.col2.x = 0;
                        this.col3.x = 0;
                        this.col1.y = 0;
                        this.col2.y = 1;
                        this.col3.y = 0;
                        this.col1.z = 0;
                        this.col2.z = 0;
                        this.col3.z = 1;
                    };
                    G.prototype.SetZero = function () {
                        this.col1.x = 0;
                        this.col2.x = 0;
                        this.col3.x = 0;
                        this.col1.y = 0;
                        this.col2.y = 0;
                        this.col3.y = 0;
                        this.col1.z = 0;
                        this.col2.z = 0;
                        this.col3.z = 0;
                    };
                    G.prototype.Solve22 = function (p, B, Q) {
                        (() => {
                            const __ifInstance147 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        B = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance147.exports;
                            return __exports.data(B === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance148 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        Q = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance148.exports;
                            return __exports.data(Q === undefined ? 1 : 0);
                        })();
                        var V = this.col1.x, M = this.col2.x, L = this.col1.y, I = this.col2.y, W = V * I - M * L;
                        (() => {
                            const __ifInstance149 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        W = 1 / W;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance149.exports;
                            return __exports.data(W != 0 ? 1 : 0);
                        })();
                        p.x = W * (I * B - M * Q);
                        p.y = W * (V * Q - L * B);
                        return p;
                    };
                    G.prototype.Solve33 = function (p, B, Q, V) {
                        (() => {
                            const __ifInstance150 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        B = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance150.exports;
                            return __exports.data(B === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance151 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        Q = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance151.exports;
                            return __exports.data(Q === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance152 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        V = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance152.exports;
                            return __exports.data(V === undefined ? 1 : 0);
                        })();
                        var M = this.col1.x, L = this.col1.y, I = this.col1.z, W = this.col2.x, Y = this.col2.y, k = this.col2.z, z = this.col3.x, u = this.col3.y, D = this.col3.z, H = M * (Y * D - k * u) + L * (k * z - W * D) + I * (W * u - Y * z);
                        (() => {
                            const __ifInstance153 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        H = 1 / H;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance153.exports;
                            return __exports.data(H != 0 ? 1 : 0);
                        })();
                        p.x = H * (B * (Y * D - k * u) + Q * (k * z - W * D) + V * (W * u - Y * z));
                        p.y = H * (M * (Q * D - V * u) + L * (V * z - B * D) + I * (B * u - Q * z));
                        p.z = H * (M * (Y * V - k * Q) + L * (k * B - W * V) + I * (W * Q - Y * B));
                        return p;
                    };
                    K.b2Math = function () {
                    };
                    K.IsValid = function (p) {
                        (() => {
                            const __ifInstance154 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        p = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance154.exports;
                            return __exports.data(p === undefined ? 1 : 0);
                        })();
                        return isFinite(p);
                    };
                    K.Dot = function (p, B) {
                        return p.x * B.x + p.y * B.y;
                    };
                    K.CrossVV = function (p, B) {
                        return p.x * B.y - p.y * B.x;
                    };
                    K.CrossVF = function (p, B) {
                        (() => {
                            const __ifInstance155 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        B = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance155.exports;
                            return __exports.data(B === undefined ? 1 : 0);
                        })();
                        return new A(B * p.y, -B * p.x);
                    };
                    K.CrossFV = function (p, B) {
                        (() => {
                            const __ifInstance156 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        p = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance156.exports;
                            return __exports.data(p === undefined ? 1 : 0);
                        })();
                        return new A(-p * B.y, p * B.x);
                    };
                    K.MulMV = function (p, B) {
                        return new A(p.col1.x * B.x + p.col2.x * B.y, p.col1.y * B.x + p.col2.y * B.y);
                    };
                    K.MulTMV = function (p, B) {
                        return new A(K.Dot(B, p.col1), K.Dot(B, p.col2));
                    };
                    K.MulX = function (p, B) {
                        var Q = K.MulMV(p.R, B);
                        Q.x += p.position.x;
                        Q.y += p.position.y;
                        return Q;
                    };
                    K.MulXT = function (p, B) {
                        var Q = K.SubtractVV(B, p.position), V = Q.x * p.R.col1.x + Q.y * p.R.col1.y;
                        Q.y = Q.x * p.R.col2.x + Q.y * p.R.col2.y;
                        Q.x = V;
                        return Q;
                    };
                    K.AddVV = function (p, B) {
                        return new A(p.x + B.x, p.y + B.y);
                    };
                    K.SubtractVV = function (p, B) {
                        return new A(p.x - B.x, p.y - B.y);
                    };
                    K.Distance = function (p, B) {
                        var Q = p.x - B.x, V = p.y - B.y;
                        return Math.sqrt(Q * Q + V * V);
                    };
                    K.DistanceSquared = function (p, B) {
                        var Q = p.x - B.x, V = p.y - B.y;
                        return Q * Q + V * V;
                    };
                    K.MulFV = function (p, B) {
                        (() => {
                            const __ifInstance157 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        p = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance157.exports;
                            return __exports.data(p === undefined ? 1 : 0);
                        })();
                        return new A(p * B.x, p * B.y);
                    };
                    K.AddMM = function (p, B) {
                        return F.FromVV(K.AddVV(p.col1, B.col1), K.AddVV(p.col2, B.col2));
                    };
                    K.MulMM = function (p, B) {
                        return F.FromVV(K.MulMV(p, B.col1), K.MulMV(p, B.col2));
                    };
                    K.MulTMM = function (p, B) {
                        var Q = new A(K.Dot(p.col1, B.col1), K.Dot(p.col2, B.col1)), V = new A(K.Dot(p.col1, B.col2), K.Dot(p.col2, B.col2));
                        return F.FromVV(Q, V);
                    };
                    K.Abs = function (p) {
                        (() => {
                            const __ifInstance158 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        p = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance158.exports;
                            return __exports.data(p === undefined ? 1 : 0);
                        })();
                        return p > 0 ? p : -p;
                    };
                    K.AbsV = function (p) {
                        return new A(K.Abs(p.x), K.Abs(p.y));
                    };
                    K.AbsM = function (p) {
                        return F.FromVV(K.AbsV(p.col1), K.AbsV(p.col2));
                    };
                    K.Min = function (p, B) {
                        (() => {
                            const __ifInstance159 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        p = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance159.exports;
                            return __exports.data(p === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance160 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        B = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance160.exports;
                            return __exports.data(B === undefined ? 1 : 0);
                        })();
                        return p < B ? p : B;
                    };
                    K.MinV = function (p, B) {
                        return new A(K.Min(p.x, B.x), K.Min(p.y, B.y));
                    };
                    K.Max = function (p, B) {
                        (() => {
                            const __ifInstance161 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        p = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance161.exports;
                            return __exports.data(p === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance162 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        B = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance162.exports;
                            return __exports.data(B === undefined ? 1 : 0);
                        })();
                        return p > B ? p : B;
                    };
                    K.MaxV = function (p, B) {
                        return new A(K.Max(p.x, B.x), K.Max(p.y, B.y));
                    };
                    K.Clamp = function (p, B, Q) {
                        (() => {
                            const __ifInstance163 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        p = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance163.exports;
                            return __exports.data(p === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance164 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        B = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance164.exports;
                            return __exports.data(B === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance165 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        Q = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance165.exports;
                            return __exports.data(Q === undefined ? 1 : 0);
                        })();
                        return p < B ? B : p > Q ? Q : p;
                    };
                    K.ClampV = function (p, B, Q) {
                        return K.MaxV(B, K.MinV(p, Q));
                    };
                    K.Swap = function (p, B) {
                        var Q = p[0];
                        p[0] = B[0];
                        B[0] = Q;
                    };
                    K.Random = function () {
                        return Math.random() * 2 - 1;
                    };
                    K.RandomRange = function (p, B) {
                        (() => {
                            const __ifInstance166 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        p = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance166.exports;
                            return __exports.data(p === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance167 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        B = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance167.exports;
                            return __exports.data(B === undefined ? 1 : 0);
                        })();
                        var Q = Math.random();
                        return Q = (B - p) * Q + p;
                    };
                    K.NextPowerOfTwo = function (p) {
                        (() => {
                            const __ifInstance168 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        p = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance168.exports;
                            return __exports.data(p === undefined ? 1 : 0);
                        })();
                        p |= p >> 1 & 2147483647;
                        p |= p >> 2 & 1073741823;
                        p |= p >> 4 & 268435455;
                        p |= p >> 8 & 16777215;
                        p |= p >> 16 & 65535;
                        return p + 1;
                    };
                    K.IsPowerOfTwo = function (p) {
                        (() => {
                            const __ifInstance169 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        p = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance169.exports;
                            return __exports.data(p === undefined ? 1 : 0);
                        })();
                        return p > 0 && (p & p - 1) == 0;
                    };
                    (() => {
                        const __callInstance560 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.postDefs.push(function () {
                                        Box2D.Common.Math.b2Math.b2Vec2_zero = new A(0, 0);
                                        Box2D.Common.Math.b2Math.b2Mat22_identity = F.FromVV(new A(1, 0), new A(0, 1));
                                        Box2D.Common.Math.b2Math.b2Transform_identity = new w(K.b2Vec2_zero, K.b2Mat22_identity);
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance560.exports;
                        return __exports.data();
                    })();
                    y.b2Sweep = function () {
                        this.localCenter = new A();
                        this.c0 = new A();
                        this.c = new A();
                    };
                    y.prototype.Set = function (p) {
                        (() => {
                            const __callInstance559 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.localCenter.SetV(p.localCenter);
                                    }
                                }
                            });
                            const __exports = __callInstance559.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance558 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.c0.SetV(p.c0);
                                    }
                                }
                            });
                            const __exports = __callInstance558.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance557 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.c.SetV(p.c);
                                    }
                                }
                            });
                            const __exports = __callInstance557.exports;
                            return __exports.data();
                        })();
                        this.a0 = p.a0;
                        this.a = p.a;
                        this.t0 = p.t0;
                    };
                    y.prototype.Copy = function () {
                        var p = new y();
                        (() => {
                            const __callInstance556 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        p.localCenter.SetV(this.localCenter);
                                    }
                                }
                            });
                            const __exports = __callInstance556.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance555 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        p.c0.SetV(this.c0);
                                    }
                                }
                            });
                            const __exports = __callInstance555.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance554 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        p.c.SetV(this.c);
                                    }
                                }
                            });
                            const __exports = __callInstance554.exports;
                            return __exports.data();
                        })();
                        p.a0 = this.a0;
                        p.a = this.a;
                        p.t0 = this.t0;
                        return p;
                    };
                    y.prototype.GetTransform = function (p, B) {
                        (() => {
                            const __ifInstance170 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        B = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance170.exports;
                            return __exports.data(B === undefined ? 1 : 0);
                        })();
                        p.position.x = (1 - B) * this.c0.x + B * this.c.x;
                        p.position.y = (1 - B) * this.c0.y + B * this.c.y;
                        (() => {
                            const __callInstance553 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        p.R.Set((1 - B) * this.a0 + B * this.a);
                                    }
                                }
                            });
                            const __exports = __callInstance553.exports;
                            return __exports.data();
                        })();
                        var Q = p.R;
                        p.position.x -= Q.col1.x * this.localCenter.x + Q.col2.x * this.localCenter.y;
                        p.position.y -= Q.col1.y * this.localCenter.x + Q.col2.y * this.localCenter.y;
                    };
                    y.prototype.Advance = function (p) {
                        (() => {
                            const __ifInstance171 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        p = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance171.exports;
                            return __exports.data(p === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance172 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            var B = (p - this.t0) / (1 - this.t0);
                                            this.c0.x = (1 - B) * this.c0.x + B * this.c.x;
                                            this.c0.y = (1 - B) * this.c0.y + B * this.c.y;
                                            this.a0 = (1 - B) * this.a0 + B * this.a;
                                            this.t0 = p;
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance172.exports;
                            return __exports.data(this.t0 < p && 1 - this.t0 > Number.MIN_VALUE ? 1 : 0);
                        })();
                    };
                    w.b2Transform = function () {
                        this.position = new A();
                        this.R = new F();
                    };
                    w.prototype.b2Transform = function (p, B) {
                        (() => {
                            const __ifInstance173 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        p = null;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance173.exports;
                            return __exports.data(p === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance174 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        B = null;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance174.exports;
                            return __exports.data(B === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance175 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            (() => {
                                                const __callInstance552 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.position.SetV(p);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance552.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance551 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.R.SetM(B);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance551.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance175.exports;
                            return __exports.data(p ? 1 : 0);
                        })();
                    };
                    w.prototype.Initialize = function (p, B) {
                        (() => {
                            const __callInstance550 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.position.SetV(p);
                                    }
                                }
                            });
                            const __exports = __callInstance550.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance549 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.R.SetM(B);
                                    }
                                }
                            });
                            const __exports = __callInstance549.exports;
                            return __exports.data();
                        })();
                    };
                    w.prototype.SetIdentity = function () {
                        (() => {
                            const __callInstance548 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.position.SetZero();
                                    }
                                }
                            });
                            const __exports = __callInstance548.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance547 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.R.SetIdentity();
                                    }
                                }
                            });
                            const __exports = __callInstance547.exports;
                            return __exports.data();
                        })();
                    };
                    w.prototype.Set = function (p) {
                        (() => {
                            const __callInstance546 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.position.SetV(p.position);
                                    }
                                }
                            });
                            const __exports = __callInstance546.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance545 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.R.SetM(p.R);
                                    }
                                }
                            });
                            const __exports = __callInstance545.exports;
                            return __exports.data();
                        })();
                    };
                    w.prototype.GetAngle = function () {
                        return Math.atan2(this.R.col1.y, this.R.col1.x);
                    };
                    A.b2Vec2 = function () {
                    };
                    A.prototype.b2Vec2 = function (p, B) {
                        (() => {
                            const __ifInstance176 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        p = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance176.exports;
                            return __exports.data(p === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance177 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        B = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance177.exports;
                            return __exports.data(B === undefined ? 1 : 0);
                        })();
                        this.x = p;
                        this.y = B;
                    };
                    A.prototype.SetZero = function () {
                        this.y = this.x = 0;
                    };
                    A.prototype.Set = function (p, B) {
                        (() => {
                            const __ifInstance178 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        p = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance178.exports;
                            return __exports.data(p === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance179 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        B = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance179.exports;
                            return __exports.data(B === undefined ? 1 : 0);
                        })();
                        this.x = p;
                        this.y = B;
                    };
                    A.prototype.SetV = function (p) {
                        this.x = p.x;
                        this.y = p.y;
                    };
                    A.prototype.GetNegative = function () {
                        return new A(-this.x, -this.y);
                    };
                    A.prototype.NegativeSelf = function () {
                        this.x = -this.x;
                        this.y = -this.y;
                    };
                    A.Make = function (p, B) {
                        (() => {
                            const __ifInstance180 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        p = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance180.exports;
                            return __exports.data(p === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance181 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        B = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance181.exports;
                            return __exports.data(B === undefined ? 1 : 0);
                        })();
                        return new A(p, B);
                    };
                    A.prototype.Copy = function () {
                        return new A(this.x, this.y);
                    };
                    A.prototype.Add = function (p) {
                        this.x += p.x;
                        this.y += p.y;
                    };
                    A.prototype.Subtract = function (p) {
                        this.x -= p.x;
                        this.y -= p.y;
                    };
                    A.prototype.Multiply = function (p) {
                        (() => {
                            const __ifInstance182 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        p = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance182.exports;
                            return __exports.data(p === undefined ? 1 : 0);
                        })();
                        this.x *= p;
                        this.y *= p;
                    };
                    A.prototype.MulM = function (p) {
                        var B = this.x;
                        this.x = p.col1.x * B + p.col2.x * this.y;
                        this.y = p.col1.y * B + p.col2.y * this.y;
                    };
                    A.prototype.MulTM = function (p) {
                        var B = K.Dot(this, p.col1);
                        this.y = K.Dot(this, p.col2);
                        this.x = B;
                    };
                    A.prototype.CrossVF = function (p) {
                        (() => {
                            const __ifInstance183 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        p = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance183.exports;
                            return __exports.data(p === undefined ? 1 : 0);
                        })();
                        var B = this.x;
                        this.x = p * this.y;
                        this.y = -p * B;
                    };
                    A.prototype.CrossFV = function (p) {
                        (() => {
                            const __ifInstance184 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        p = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance184.exports;
                            return __exports.data(p === undefined ? 1 : 0);
                        })();
                        var B = this.x;
                        this.x = -p * this.y;
                        this.y = p * B;
                    };
                    A.prototype.MinV = function (p) {
                        this.x = this.x < p.x ? this.x : p.x;
                        this.y = this.y < p.y ? this.y : p.y;
                    };
                    A.prototype.MaxV = function (p) {
                        this.x = this.x > p.x ? this.x : p.x;
                        this.y = this.y > p.y ? this.y : p.y;
                    };
                    A.prototype.Abs = function () {
                        (() => {
                            const __ifInstance185 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.x = -this.x;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance185.exports;
                            return __exports.data(this.x < 0 ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance186 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.y = -this.y;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance186.exports;
                            return __exports.data(this.y < 0 ? 1 : 0);
                        })();
                    };
                    A.prototype.Length = function () {
                        return Math.sqrt(this.x * this.x + this.y * this.y);
                    };
                    A.prototype.LengthSquared = function () {
                        return this.x * this.x + this.y * this.y;
                    };
                    A.prototype.Normalize = function () {
                        var p = Math.sqrt(this.x * this.x + this.y * this.y);
                        if (p < Number.MIN_VALUE)
                            return 0;
                        var B = 1 / p;
                        this.x *= B;
                        this.y *= B;
                        return p;
                    };
                    A.prototype.IsValid = function () {
                        return K.IsValid(this.x) && K.IsValid(this.y);
                    };
                    U.b2Vec3 = function () {
                    };
                    U.prototype.b2Vec3 = function (p, B, Q) {
                        (() => {
                            const __ifInstance187 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        p = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance187.exports;
                            return __exports.data(p === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance188 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        B = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance188.exports;
                            return __exports.data(B === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance189 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        Q = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance189.exports;
                            return __exports.data(Q === undefined ? 1 : 0);
                        })();
                        this.x = p;
                        this.y = B;
                        this.z = Q;
                    };
                    U.prototype.SetZero = function () {
                        this.x = this.y = this.z = 0;
                    };
                    U.prototype.Set = function (p, B, Q) {
                        (() => {
                            const __ifInstance190 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        p = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance190.exports;
                            return __exports.data(p === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance191 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        B = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance191.exports;
                            return __exports.data(B === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance192 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        Q = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance192.exports;
                            return __exports.data(Q === undefined ? 1 : 0);
                        })();
                        this.x = p;
                        this.y = B;
                        this.z = Q;
                    };
                    U.prototype.SetV = function (p) {
                        this.x = p.x;
                        this.y = p.y;
                        this.z = p.z;
                    };
                    U.prototype.GetNegative = function () {
                        return new U(-this.x, -this.y, -this.z);
                    };
                    U.prototype.NegativeSelf = function () {
                        this.x = -this.x;
                        this.y = -this.y;
                        this.z = -this.z;
                    };
                    U.prototype.Copy = function () {
                        return new U(this.x, this.y, this.z);
                    };
                    U.prototype.Add = function (p) {
                        this.x += p.x;
                        this.y += p.y;
                        this.z += p.z;
                    };
                    U.prototype.Subtract = function (p) {
                        this.x -= p.x;
                        this.y -= p.y;
                        this.z -= p.z;
                    };
                    U.prototype.Multiply = function (p) {
                        (() => {
                            const __ifInstance193 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        p = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance193.exports;
                            return __exports.data(p === undefined ? 1 : 0);
                        })();
                        this.x *= p;
                        this.y *= p;
                        this.z *= p;
                    };
                }());
            }
        }
    });
    const __exports = __callInstance583.exports;
    return __exports.data();
})();
(() => {
    const __callInstance544 = new WebAssembly.Instance(__callWasmModule, {
        env: {
            impFunc: () => {
                (function () {
                    var F = Box2D.Common.Math.b2Math, G = Box2D.Common.Math.b2Sweep, K = Box2D.Common.Math.b2Transform, y = Box2D.Common.Math.b2Vec2, w = Box2D.Common.b2Color, A = Box2D.Common.b2Settings, U = Box2D.Collision.b2AABB, p = Box2D.Collision.b2ContactPoint, B = Box2D.Collision.b2DynamicTreeBroadPhase, Q = Box2D.Collision.b2RayCastInput, V = Box2D.Collision.b2RayCastOutput, M = Box2D.Collision.Shapes.b2CircleShape, L = Box2D.Collision.Shapes.b2EdgeShape, I = Box2D.Collision.Shapes.b2MassData, W = Box2D.Collision.Shapes.b2PolygonShape, Y = Box2D.Collision.Shapes.b2Shape, k = Box2D.Dynamics.b2Body, z = Box2D.Dynamics.b2BodyDef, u = Box2D.Dynamics.b2ContactFilter, D = Box2D.Dynamics.b2ContactImpulse, H = Box2D.Dynamics.b2ContactListener, O = Box2D.Dynamics.b2ContactManager, E = Box2D.Dynamics.b2DebugDraw, R = Box2D.Dynamics.b2DestructionListener, N = Box2D.Dynamics.b2FilterData, S = Box2D.Dynamics.b2Fixture, aa = Box2D.Dynamics.b2FixtureDef, Z = Box2D.Dynamics.b2Island, d = Box2D.Dynamics.b2TimeStep, h = Box2D.Dynamics.b2World, l = Box2D.Dynamics.Contacts.b2Contact, j = Box2D.Dynamics.Contacts.b2ContactFactory, o = Box2D.Dynamics.Contacts.b2ContactSolver, q = Box2D.Dynamics.Joints.b2Joint, n = Box2D.Dynamics.Joints.b2PulleyJoint;
                    k.b2Body = function () {
                        this.m_xf = new K();
                        this.m_sweep = new G();
                        this.m_linearVelocity = new y();
                        this.m_force = new y();
                    };
                    k.prototype.connectEdges = function (a, c, g) {
                        (() => {
                            const __ifInstance194 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        g = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance194.exports;
                            return __exports.data(g === undefined ? 1 : 0);
                        })();
                        var b = Math.atan2(c.GetDirectionVector().y, c.GetDirectionVector().x);
                        g = F.MulFV(Math.tan((b - g) * 0.5), c.GetDirectionVector());
                        g = F.SubtractVV(g, c.GetNormalVector());
                        g = F.MulFV(A.b2_toiSlop, g);
                        g = F.AddVV(g, c.GetVertex1());
                        var e = F.AddVV(a.GetDirectionVector(), c.GetDirectionVector());
                        (() => {
                            const __callInstance543 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        e.Normalize();
                                    }
                                }
                            });
                            const __exports = __callInstance543.exports;
                            return __exports.data();
                        })();
                        var f = F.Dot(a.GetDirectionVector(), c.GetNormalVector()) > 0;
                        (() => {
                            const __callInstance542 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        a.SetNextEdge(c, g, e, f);
                                    }
                                }
                            });
                            const __exports = __callInstance542.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance541 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        c.SetPrevEdge(a, g, e, f);
                                    }
                                }
                            });
                            const __exports = __callInstance541.exports;
                            return __exports.data();
                        })();
                        return b;
                    };
                    k.prototype.CreateFixture = function (a) {
                        if (this.m_world.IsLocked() == true)
                            return null;
                        var c = new S();
                        (() => {
                            const __callInstance540 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        c.Create(this, this.m_xf, a);
                                    }
                                }
                            });
                            const __exports = __callInstance540.exports;
                            return __exports.data();
                        })();
                        this.m_flags & k.e_activeFlag && c.CreateProxy(this.m_world.m_contactManager.m_broadPhase, this.m_xf);
                        c.m_next = this.m_fixtureList;
                        this.m_fixtureList = c;
                        ++this.m_fixtureCount;
                        c.m_body = this;
                        c.m_density > 0 && this.ResetMassData();
                        this.m_world.m_flags |= h.e_newFixture;
                        return c;
                    };
                    k.prototype.CreateFixture2 = function (a, c) {
                        (() => {
                            const __ifInstance195 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        c = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance195.exports;
                            return __exports.data(c === undefined ? 1 : 0);
                        })();
                        var g = new aa();
                        g.shape = a;
                        g.density = c;
                        return this.CreateFixture(g);
                    };
                    k.prototype.DestroyFixture = function (a) {
                        if (this.m_world.IsLocked() != true) {
                            for (var c = this.m_fixtureList, g = null; c != null;) {
                                if (c == a) {
                                    (() => {
                                        const __ifInstance196 = new WebAssembly.Instance(__ifWasmModule, {
                                            env: {
                                                impFunc1: () => {
                                                    g.m_next = a.m_next;
                                                },
                                                impFunc2: () => {
                                                    this.m_fixtureList = a.m_next;
                                                }
                                            }
                                        });
                                        const __exports = __ifInstance196.exports;
                                        return __exports.data(g ? 1 : 0);
                                    })();
                                    break;
                                }
                                g = c;
                                c = c.m_next;
                            }
                            (() => {
                                c = this.m_contactList;
                                const __forInstance34 = new WebAssembly.Instance(__forWasmModule, {
                                    env: {
                                        test: () => {
                                            return c ? 1 : 0;
                                        },
                                        update: () => {
                                        },
                                        body: () => {
                                            {
                                                g = c.contact;
                                                c = c.next;
                                                var b = g.GetFixtureA(), e = g.GetFixtureB();
                                                (() => {
                                                    const __ifInstance197 = new WebAssembly.Instance(__ifWasmModule, {
                                                        env: {
                                                            impFunc1: () => {
                                                                (() => {
                                                                    const __callInstance539 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                this.m_world.m_contactManager.Destroy(g);
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance539.exports;
                                                                    return __exports.data();
                                                                })();
                                                            },
                                                            impFunc2: () => {
                                                            }
                                                        }
                                                    });
                                                    const __exports = __ifInstance197.exports;
                                                    return __exports.data(a == b || a == e ? 1 : 0);
                                                })();
                                            }
                                        }
                                    }
                                });
                                const __exports = __forInstance34.exports;
                                return __exports.data();
                            })();
                            this.m_flags & k.e_activeFlag && a.DestroyProxy(this.m_world.m_contactManager.m_broadPhase);
                            (() => {
                                const __callInstance538 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            a.Destroy();
                                        }
                                    }
                                });
                                const __exports = __callInstance538.exports;
                                return __exports.data();
                            })();
                            a.m_body = null;
                            a.m_next = null;
                            --this.m_fixtureCount;
                            (() => {
                                const __callInstance537 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.ResetMassData();
                                        }
                                    }
                                });
                                const __exports = __callInstance537.exports;
                                return __exports.data();
                            })();
                        }
                    };
                    k.prototype.SetPositionAndAngle = function (a, c) {
                        (() => {
                            const __ifInstance198 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        c = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance198.exports;
                            return __exports.data(c === undefined ? 1 : 0);
                        })();
                        var g;
                        (() => {
                            const __ifInstance199 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            (() => {
                                                const __callInstance536 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_xf.R.Set(c);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance536.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance535 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_xf.position.SetV(a);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance535.exports;
                                                return __exports.data();
                                            })();
                                            g = this.m_xf.R;
                                            var b = this.m_sweep.localCenter;
                                            this.m_sweep.c.x = g.col1.x * b.x + g.col2.x * b.y;
                                            this.m_sweep.c.y = g.col1.y * b.x + g.col2.y * b.y;
                                            this.m_sweep.c.x += this.m_xf.position.x;
                                            this.m_sweep.c.y += this.m_xf.position.y;
                                            (() => {
                                                const __callInstance534 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_sweep.c0.SetV(this.m_sweep.c);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance534.exports;
                                                return __exports.data();
                                            })();
                                            this.m_sweep.a0 = this.m_sweep.a = c;
                                            b = this.m_world.m_contactManager.m_broadPhase;
                                            (() => {
                                                g = this.m_fixtureList;
                                                const __forInstance35 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return g ? 1 : 0;
                                                        },
                                                        update: () => {
                                                            g = g.m_next;
                                                        },
                                                        body: () => {
                                                            (() => {
                                                                const __callInstance533 = new WebAssembly.Instance(__callWasmModule, {
                                                                    env: {
                                                                        impFunc: () => {
                                                                            g.Synchronize(b, this.m_xf, this.m_xf);
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __callInstance533.exports;
                                                                return __exports.data();
                                                            })();
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance35.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance532 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_world.m_contactManager.FindNewContacts();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance532.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance199.exports;
                            return __exports.data(this.m_world.IsLocked() != true ? 1 : 0);
                        })();
                    };
                    k.prototype.SetTransform = function (a) {
                        (() => {
                            const __callInstance531 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.SetPositionAndAngle(a.position, a.GetAngle());
                                    }
                                }
                            });
                            const __exports = __callInstance531.exports;
                            return __exports.data();
                        })();
                    };
                    k.prototype.GetTransform = function () {
                        return this.m_xf;
                    };
                    k.prototype.GetPosition = function () {
                        return this.m_xf.position;
                    };
                    k.prototype.SetPosition = function (a) {
                        (() => {
                            const __callInstance530 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.SetPositionAndAngle(a, this.GetAngle());
                                    }
                                }
                            });
                            const __exports = __callInstance530.exports;
                            return __exports.data();
                        })();
                    };
                    k.prototype.GetAngle = function () {
                        return this.m_sweep.a;
                    };
                    k.prototype.SetAngle = function (a) {
                        (() => {
                            const __ifInstance200 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance200.exports;
                            return __exports.data(a === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __callInstance529 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.SetPositionAndAngle(this.GetPosition(), a);
                                    }
                                }
                            });
                            const __exports = __callInstance529.exports;
                            return __exports.data();
                        })();
                    };
                    k.prototype.GetWorldCenter = function () {
                        return this.m_sweep.c;
                    };
                    k.prototype.GetLocalCenter = function () {
                        return this.m_sweep.localCenter;
                    };
                    k.prototype.SetLinearVelocity = function (a) {
                        this.m_type != k.b2_staticBody && this.m_linearVelocity.SetV(a);
                    };
                    k.prototype.GetLinearVelocity = function () {
                        return this.m_linearVelocity;
                    };
                    k.prototype.SetAngularVelocity = function (a) {
                        (() => {
                            const __ifInstance201 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance201.exports;
                            return __exports.data(a === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance202 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_angularVelocity = a;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance202.exports;
                            return __exports.data(this.m_type != k.b2_staticBody ? 1 : 0);
                        })();
                    };
                    k.prototype.GetAngularVelocity = function () {
                        return this.m_angularVelocity;
                    };
                    k.prototype.GetDefinition = function () {
                        var a = new z();
                        a.type = this.GetType();
                        a.allowSleep = (this.m_flags & k.e_allowSleepFlag) == k.e_allowSleepFlag;
                        a.angle = this.GetAngle();
                        a.angularDamping = this.m_angularDamping;
                        a.angularVelocity = this.m_angularVelocity;
                        a.fixedRotation = (this.m_flags & k.e_fixedRotationFlag) == k.e_fixedRotationFlag;
                        a.bullet = (this.m_flags & k.e_bulletFlag) == k.e_bulletFlag;
                        a.awake = (this.m_flags & k.e_awakeFlag) == k.e_awakeFlag;
                        a.linearDamping = this.m_linearDamping;
                        (() => {
                            const __callInstance528 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        a.linearVelocity.SetV(this.GetLinearVelocity());
                                    }
                                }
                            });
                            const __exports = __callInstance528.exports;
                            return __exports.data();
                        })();
                        a.position = this.GetPosition();
                        a.userData = this.GetUserData();
                        return a;
                    };
                    k.prototype.ApplyForce = function (a, c) {
                        (() => {
                            const __ifInstance203 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            this.IsAwake() == false && this.SetAwake(true);
                                            this.m_force.x += a.x;
                                            this.m_force.y += a.y;
                                            this.m_torque += (c.x - this.m_sweep.c.x) * a.y - (c.y - this.m_sweep.c.y) * a.x;
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance203.exports;
                            return __exports.data(this.m_type == k.b2_dynamicBody ? 1 : 0);
                        })();
                    };
                    k.prototype.ApplyTorque = function (a) {
                        (() => {
                            const __ifInstance204 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance204.exports;
                            return __exports.data(a === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance205 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            this.IsAwake() == false && this.SetAwake(true);
                                            this.m_torque += a;
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance205.exports;
                            return __exports.data(this.m_type == k.b2_dynamicBody ? 1 : 0);
                        })();
                    };
                    k.prototype.ApplyImpulse = function (a, c) {
                        (() => {
                            const __ifInstance206 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            this.IsAwake() == false && this.SetAwake(true);
                                            this.m_linearVelocity.x += this.m_invMass * a.x;
                                            this.m_linearVelocity.y += this.m_invMass * a.y;
                                            this.m_angularVelocity += this.m_invI * ((c.x - this.m_sweep.c.x) * a.y - (c.y - this.m_sweep.c.y) * a.x);
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance206.exports;
                            return __exports.data(this.m_type == k.b2_dynamicBody ? 1 : 0);
                        })();
                    };
                    k.prototype.Split = function (a) {
                        (() => {
                            var c = this.GetLinearVelocity().Copy(), g = this.GetAngularVelocity(), b = this.GetWorldCenter(), e = this.m_world.CreateBody(this.GetDefinition()), f, m = this.m_fixtureList;
                            const __forInstance36 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return m ? 1 : 0;
                                    },
                                    update: () => {
                                    },
                                    body: () => {
                                        (() => {
                                            const __ifInstance207 = new WebAssembly.Instance(__ifWasmModule, {
                                                env: {
                                                    impFunc1: () => {
                                                        {
                                                            var r = m.m_next;
                                                            (() => {
                                                                const __ifInstance208 = new WebAssembly.Instance(__ifWasmModule, {
                                                                    env: {
                                                                        impFunc1: () => {
                                                                            f.m_next = r;
                                                                        },
                                                                        impFunc2: () => {
                                                                            this.m_fixtureList = r;
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __ifInstance208.exports;
                                                                return __exports.data(f ? 1 : 0);
                                                            })();
                                                            this.m_fixtureCount--;
                                                            m.m_next = e.m_fixtureList;
                                                            e.m_fixtureList = m;
                                                            e.m_fixtureCount++;
                                                            m.m_body = e;
                                                            m = r;
                                                        }
                                                    },
                                                    impFunc2: () => {
                                                        {
                                                            f = m;
                                                            m = m.m_next;
                                                        }
                                                    }
                                                }
                                            });
                                            const __exports = __ifInstance207.exports;
                                            return __exports.data(a(m) ? 1 : 0);
                                        })();
                                    }
                                }
                            });
                            const __exports = __forInstance36.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance527 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.ResetMassData();
                                    }
                                }
                            });
                            const __exports = __callInstance527.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance526 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        e.ResetMassData();
                                    }
                                }
                            });
                            const __exports = __callInstance526.exports;
                            return __exports.data();
                        })();
                        f = this.GetWorldCenter();
                        a = e.GetWorldCenter();
                        f = F.AddVV(c, F.CrossFV(g, F.SubtractVV(f, b)));
                        c = F.AddVV(c, F.CrossFV(g, F.SubtractVV(a, b)));
                        (() => {
                            const __callInstance525 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.SetLinearVelocity(f);
                                    }
                                }
                            });
                            const __exports = __callInstance525.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance524 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        e.SetLinearVelocity(c);
                                    }
                                }
                            });
                            const __exports = __callInstance524.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance523 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.SetAngularVelocity(g);
                                    }
                                }
                            });
                            const __exports = __callInstance523.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance522 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        e.SetAngularVelocity(g);
                                    }
                                }
                            });
                            const __exports = __callInstance522.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance521 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.SynchronizeFixtures();
                                    }
                                }
                            });
                            const __exports = __callInstance521.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance520 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        e.SynchronizeFixtures();
                                    }
                                }
                            });
                            const __exports = __callInstance520.exports;
                            return __exports.data();
                        })();
                        return e;
                    };
                    k.prototype.Merge = function (a) {
                        var c;
                        (() => {
                            c = a.m_fixtureList;
                            const __forInstance37 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return c ? 1 : 0;
                                    },
                                    update: () => {
                                    },
                                    body: () => {
                                        {
                                            var g = c.m_next;
                                            a.m_fixtureCount--;
                                            c.m_next = this.m_fixtureList;
                                            this.m_fixtureList = c;
                                            this.m_fixtureCount++;
                                            c.m_body = e;
                                            c = g;
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance37.exports;
                            return __exports.data();
                        })();
                        b.m_fixtureCount = 0;
                        var b = this, e = a;
                        (() => {
                            const __callInstance519 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        b.GetWorldCenter();
                                    }
                                }
                            });
                            const __exports = __callInstance519.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance518 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        e.GetWorldCenter();
                                    }
                                }
                            });
                            const __exports = __callInstance518.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance517 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        b.GetLinearVelocity().Copy();
                                    }
                                }
                            });
                            const __exports = __callInstance517.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance516 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        e.GetLinearVelocity().Copy();
                                    }
                                }
                            });
                            const __exports = __callInstance516.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance515 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        b.GetAngularVelocity();
                                    }
                                }
                            });
                            const __exports = __callInstance515.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance514 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        e.GetAngularVelocity();
                                    }
                                }
                            });
                            const __exports = __callInstance514.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance513 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        b.ResetMassData();
                                    }
                                }
                            });
                            const __exports = __callInstance513.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance512 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.SynchronizeFixtures();
                                    }
                                }
                            });
                            const __exports = __callInstance512.exports;
                            return __exports.data();
                        })();
                    };
                    k.prototype.GetMass = function () {
                        return this.m_mass;
                    };
                    k.prototype.GetInertia = function () {
                        return this.m_I;
                    };
                    k.prototype.GetMassData = function (a) {
                        a.mass = this.m_mass;
                        a.I = this.m_I;
                        (() => {
                            const __callInstance511 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        a.center.SetV(this.m_sweep.localCenter);
                                    }
                                }
                            });
                            const __exports = __callInstance511.exports;
                            return __exports.data();
                        })();
                    };
                    k.prototype.SetMassData = function (a) {
                        (() => {
                            const __callInstance510 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        A.b2Assert(this.m_world.IsLocked() == false);
                                    }
                                }
                            });
                            const __exports = __callInstance510.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __ifInstance209 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        (() => {
                                            const __ifInstance210 = new WebAssembly.Instance(__ifWasmModule, {
                                                env: {
                                                    impFunc1: () => {
                                                        {
                                                            this.m_invI = this.m_I = this.m_invMass = 0;
                                                            this.m_mass = a.mass;
                                                            (() => {
                                                                const __ifInstance211 = new WebAssembly.Instance(__ifWasmModule, {
                                                                    env: {
                                                                        impFunc1: () => {
                                                                            this.m_mass = 1;
                                                                        },
                                                                        impFunc2: () => {
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __ifInstance211.exports;
                                                                return __exports.data(this.m_mass <= 0 ? 1 : 0);
                                                            })();
                                                            this.m_invMass = 1 / this.m_mass;
                                                            (() => {
                                                                const __ifInstance212 = new WebAssembly.Instance(__ifWasmModule, {
                                                                    env: {
                                                                        impFunc1: () => {
                                                                            {
                                                                                this.m_I = a.I - this.m_mass * (a.center.x * a.center.x + a.center.y * a.center.y);
                                                                                this.m_invI = 1 / this.m_I;
                                                                            }
                                                                        },
                                                                        impFunc2: () => {
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __ifInstance212.exports;
                                                                return __exports.data(a.I > 0 && (this.m_flags & k.e_fixedRotationFlag) == 0 ? 1 : 0);
                                                            })();
                                                            var c = this.m_sweep.c.Copy();
                                                            (() => {
                                                                const __callInstance509 = new WebAssembly.Instance(__callWasmModule, {
                                                                    env: {
                                                                        impFunc: () => {
                                                                            this.m_sweep.localCenter.SetV(a.center);
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __callInstance509.exports;
                                                                return __exports.data();
                                                            })();
                                                            (() => {
                                                                const __callInstance508 = new WebAssembly.Instance(__callWasmModule, {
                                                                    env: {
                                                                        impFunc: () => {
                                                                            this.m_sweep.c0.SetV(F.MulX(this.m_xf, this.m_sweep.localCenter));
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __callInstance508.exports;
                                                                return __exports.data();
                                                            })();
                                                            (() => {
                                                                const __callInstance507 = new WebAssembly.Instance(__callWasmModule, {
                                                                    env: {
                                                                        impFunc: () => {
                                                                            this.m_sweep.c.SetV(this.m_sweep.c0);
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __callInstance507.exports;
                                                                return __exports.data();
                                                            })();
                                                            this.m_linearVelocity.x += this.m_angularVelocity * -(this.m_sweep.c.y - c.y);
                                                            this.m_linearVelocity.y += this.m_angularVelocity * +(this.m_sweep.c.x - c.x);
                                                        }
                                                    },
                                                    impFunc2: () => {
                                                    }
                                                }
                                            });
                                            const __exports = __ifInstance210.exports;
                                            return __exports.data(this.m_type == k.b2_dynamicBody ? 1 : 0);
                                        })();
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance209.exports;
                            return __exports.data(this.m_world.IsLocked() != true ? 1 : 0);
                        })();
                    };
                    k.prototype.ResetMassData = function () {
                        this.m_invI = this.m_I = this.m_invMass = this.m_mass = 0;
                        (() => {
                            const __callInstance506 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_sweep.localCenter.SetZero();
                                    }
                                }
                            });
                            const __exports = __callInstance506.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __ifInstance213 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            (() => {
                                                var a = y.Make(0, 0), c = this.m_fixtureList;
                                                const __forInstance38 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return c ? 1 : 0;
                                                        },
                                                        update: () => {
                                                            c = c.m_next;
                                                        },
                                                        body: () => {
                                                            (() => {
                                                                const __ifInstance214 = new WebAssembly.Instance(__ifWasmModule, {
                                                                    env: {
                                                                        impFunc1: () => {
                                                                            {
                                                                                var g = c.GetMassData();
                                                                                this.m_mass += g.mass;
                                                                                a.x += g.center.x * g.mass;
                                                                                a.y += g.center.y * g.mass;
                                                                                this.m_I += g.I;
                                                                            }
                                                                        },
                                                                        impFunc2: () => {
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __ifInstance214.exports;
                                                                return __exports.data(c.m_density != 0 ? 1 : 0);
                                                            })();
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance38.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __ifInstance215 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                this.m_invMass = 1 / this.m_mass;
                                                                a.x *= this.m_invMass;
                                                                a.y *= this.m_invMass;
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                            this.m_invMass = this.m_mass = 1;
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance215.exports;
                                                return __exports.data(this.m_mass > 0 ? 1 : 0);
                                            })();
                                            (() => {
                                                const __ifInstance216 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                this.m_I -= this.m_mass * (a.x * a.x + a.y * a.y);
                                                                this.m_I *= this.m_inertiaScale;
                                                                (() => {
                                                                    const __callInstance505 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                A.b2Assert(this.m_I > 0);
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance505.exports;
                                                                    return __exports.data();
                                                                })();
                                                                this.m_invI = 1 / this.m_I;
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                            this.m_invI = this.m_I = 0;
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance216.exports;
                                                return __exports.data(this.m_I > 0 && (this.m_flags & k.e_fixedRotationFlag) == 0 ? 1 : 0);
                                            })();
                                            c = this.m_sweep.c.Copy();
                                            (() => {
                                                const __callInstance504 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_sweep.localCenter.SetV(a);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance504.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance503 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_sweep.c0.SetV(F.MulX(this.m_xf, this.m_sweep.localCenter));
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance503.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance502 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_sweep.c.SetV(this.m_sweep.c0);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance502.exports;
                                                return __exports.data();
                                            })();
                                            this.m_linearVelocity.x += this.m_angularVelocity * -(this.m_sweep.c.y - c.y);
                                            this.m_linearVelocity.y += this.m_angularVelocity * +(this.m_sweep.c.x - c.x);
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance213.exports;
                            return __exports.data(!(this.m_type == k.b2_staticBody || this.m_type == k.b2_kinematicBody) ? 1 : 0);
                        })();
                    };
                    k.prototype.GetWorldPoint = function (a) {
                        var c = this.m_xf.R;
                        a = new y(c.col1.x * a.x + c.col2.x * a.y, c.col1.y * a.x + c.col2.y * a.y);
                        a.x += this.m_xf.position.x;
                        a.y += this.m_xf.position.y;
                        return a;
                    };
                    k.prototype.GetWorldVector = function (a) {
                        return F.MulMV(this.m_xf.R, a);
                    };
                    k.prototype.GetLocalPoint = function (a) {
                        return F.MulXT(this.m_xf, a);
                    };
                    k.prototype.GetLocalVector = function (a) {
                        return F.MulTMV(this.m_xf.R, a);
                    };
                    k.prototype.GetLinearVelocityFromWorldPoint = function (a) {
                        return new y(this.m_linearVelocity.x - this.m_angularVelocity * (a.y - this.m_sweep.c.y), this.m_linearVelocity.y + this.m_angularVelocity * (a.x - this.m_sweep.c.x));
                    };
                    k.prototype.GetLinearVelocityFromLocalPoint = function (a) {
                        var c = this.m_xf.R;
                        a = new y(c.col1.x * a.x + c.col2.x * a.y, c.col1.y * a.x + c.col2.y * a.y);
                        a.x += this.m_xf.position.x;
                        a.y += this.m_xf.position.y;
                        return new y(this.m_linearVelocity.x - this.m_angularVelocity * (a.y - this.m_sweep.c.y), this.m_linearVelocity.y + this.m_angularVelocity * (a.x - this.m_sweep.c.x));
                    };
                    k.prototype.GetLinearDamping = function () {
                        return this.m_linearDamping;
                    };
                    k.prototype.SetLinearDamping = function (a) {
                        (() => {
                            const __ifInstance217 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance217.exports;
                            return __exports.data(a === undefined ? 1 : 0);
                        })();
                        this.m_linearDamping = a;
                    };
                    k.prototype.GetAngularDamping = function () {
                        return this.m_angularDamping;
                    };
                    k.prototype.SetAngularDamping = function (a) {
                        (() => {
                            const __ifInstance218 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance218.exports;
                            return __exports.data(a === undefined ? 1 : 0);
                        })();
                        this.m_angularDamping = a;
                    };
                    k.prototype.SetType = function (a) {
                        (() => {
                            const __ifInstance219 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance219.exports;
                            return __exports.data(a === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance220 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            this.m_type = a;
                                            (() => {
                                                const __callInstance501 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.ResetMassData();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance501.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __ifInstance221 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                (() => {
                                                                    const __callInstance500 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                this.m_linearVelocity.SetZero();
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance500.exports;
                                                                    return __exports.data();
                                                                })();
                                                                this.m_angularVelocity = 0;
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance221.exports;
                                                return __exports.data(this.m_type == k.b2_staticBody ? 1 : 0);
                                            })();
                                            (() => {
                                                const __callInstance499 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.SetAwake(true);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance499.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance498 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_force.SetZero();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance498.exports;
                                                return __exports.data();
                                            })();
                                            this.m_torque = 0;
                                            (() => {
                                                a = this.m_contactList;
                                                const __forInstance39 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return a ? 1 : 0;
                                                        },
                                                        update: () => {
                                                            a = a.next;
                                                        },
                                                        body: () => {
                                                            (() => {
                                                                const __callInstance497 = new WebAssembly.Instance(__callWasmModule, {
                                                                    env: {
                                                                        impFunc: () => {
                                                                            a.contact.FlagForFiltering();
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __callInstance497.exports;
                                                                return __exports.data();
                                                            })();
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance39.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance220.exports;
                            return __exports.data(this.m_type != a ? 1 : 0);
                        })();
                    };
                    k.prototype.GetType = function () {
                        return this.m_type;
                    };
                    k.prototype.SetBullet = function (a) {
                        (() => {
                            const __ifInstance222 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_flags |= k.e_bulletFlag;
                                    },
                                    impFunc2: () => {
                                        this.m_flags &= ~k.e_bulletFlag;
                                    }
                                }
                            });
                            const __exports = __ifInstance222.exports;
                            return __exports.data(a ? 1 : 0);
                        })();
                    };
                    k.prototype.IsBullet = function () {
                        return (this.m_flags & k.e_bulletFlag) == k.e_bulletFlag;
                    };
                    k.prototype.SetSleepingAllowed = function (a) {
                        (() => {
                            const __ifInstance223 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_flags |= k.e_allowSleepFlag;
                                    },
                                    impFunc2: () => {
                                        {
                                            this.m_flags &= ~k.e_allowSleepFlag;
                                            (() => {
                                                const __callInstance496 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.SetAwake(true);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance496.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance223.exports;
                            return __exports.data(a ? 1 : 0);
                        })();
                    };
                    k.prototype.SetAwake = function (a) {
                        (() => {
                            const __ifInstance224 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            this.m_flags |= k.e_awakeFlag;
                                            this.m_sleepTime = 0;
                                        }
                                    },
                                    impFunc2: () => {
                                        {
                                            this.m_flags &= ~k.e_awakeFlag;
                                            this.m_sleepTime = 0;
                                            (() => {
                                                const __callInstance495 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_linearVelocity.SetZero();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance495.exports;
                                                return __exports.data();
                                            })();
                                            this.m_angularVelocity = 0;
                                            (() => {
                                                const __callInstance494 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_force.SetZero();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance494.exports;
                                                return __exports.data();
                                            })();
                                            this.m_torque = 0;
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance224.exports;
                            return __exports.data(a ? 1 : 0);
                        })();
                    };
                    k.prototype.IsAwake = function () {
                        return (this.m_flags & k.e_awakeFlag) == k.e_awakeFlag;
                    };
                    k.prototype.SetFixedRotation = function (a) {
                        (() => {
                            const __ifInstance225 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_flags |= k.e_fixedRotationFlag;
                                    },
                                    impFunc2: () => {
                                        this.m_flags &= ~k.e_fixedRotationFlag;
                                    }
                                }
                            });
                            const __exports = __ifInstance225.exports;
                            return __exports.data(a ? 1 : 0);
                        })();
                        (() => {
                            const __callInstance493 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.ResetMassData();
                                    }
                                }
                            });
                            const __exports = __callInstance493.exports;
                            return __exports.data();
                        })();
                    };
                    k.prototype.IsFixedRotation = function () {
                        return (this.m_flags & k.e_fixedRotationFlag) == k.e_fixedRotationFlag;
                    };
                    k.prototype.SetActive = function (a) {
                        (() => {
                            const __ifInstance226 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            var c;
                                            (() => {
                                                const __ifInstance227 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                this.m_flags |= k.e_activeFlag;
                                                                a = this.m_world.m_contactManager.m_broadPhase;
                                                                (() => {
                                                                    c = this.m_fixtureList;
                                                                    const __forInstance40 = new WebAssembly.Instance(__forWasmModule, {
                                                                        env: {
                                                                            test: () => {
                                                                                return c ? 1 : 0;
                                                                            },
                                                                            update: () => {
                                                                                c = c.m_next;
                                                                            },
                                                                            body: () => {
                                                                                (() => {
                                                                                    const __callInstance492 = new WebAssembly.Instance(__callWasmModule, {
                                                                                        env: {
                                                                                            impFunc: () => {
                                                                                                c.CreateProxy(a, this.m_xf);
                                                                                            }
                                                                                        }
                                                                                    });
                                                                                    const __exports = __callInstance492.exports;
                                                                                    return __exports.data();
                                                                                })();
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __forInstance40.exports;
                                                                    return __exports.data();
                                                                })();
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                            {
                                                                this.m_flags &= ~k.e_activeFlag;
                                                                a = this.m_world.m_contactManager.m_broadPhase;
                                                                (() => {
                                                                    c = this.m_fixtureList;
                                                                    const __forInstance41 = new WebAssembly.Instance(__forWasmModule, {
                                                                        env: {
                                                                            test: () => {
                                                                                return c ? 1 : 0;
                                                                            },
                                                                            update: () => {
                                                                                c = c.m_next;
                                                                            },
                                                                            body: () => {
                                                                                (() => {
                                                                                    const __callInstance491 = new WebAssembly.Instance(__callWasmModule, {
                                                                                        env: {
                                                                                            impFunc: () => {
                                                                                                c.DestroyProxy(a);
                                                                                            }
                                                                                        }
                                                                                    });
                                                                                    const __exports = __callInstance491.exports;
                                                                                    return __exports.data();
                                                                                })();
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __forInstance41.exports;
                                                                    return __exports.data();
                                                                })();
                                                                (() => {
                                                                    a = this.m_contactList;
                                                                    const __forInstance42 = new WebAssembly.Instance(__forWasmModule, {
                                                                        env: {
                                                                            test: () => {
                                                                                return a ? 1 : 0;
                                                                            },
                                                                            update: () => {
                                                                            },
                                                                            body: () => {
                                                                                {
                                                                                    c = a;
                                                                                    a = a.next;
                                                                                    (() => {
                                                                                        const __callInstance490 = new WebAssembly.Instance(__callWasmModule, {
                                                                                            env: {
                                                                                                impFunc: () => {
                                                                                                    this.m_world.m_contactManager.Destroy(c.contact);
                                                                                                }
                                                                                            }
                                                                                        });
                                                                                        const __exports = __callInstance490.exports;
                                                                                        return __exports.data();
                                                                                    })();
                                                                                }
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __forInstance42.exports;
                                                                    return __exports.data();
                                                                })();
                                                                this.m_contactList = null;
                                                            }
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance227.exports;
                                                return __exports.data(a ? 1 : 0);
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance226.exports;
                            return __exports.data(a != this.IsActive() ? 1 : 0);
                        })();
                    };
                    k.prototype.IsActive = function () {
                        return (this.m_flags & k.e_activeFlag) == k.e_activeFlag;
                    };
                    k.prototype.IsSleepingAllowed = function () {
                        return (this.m_flags & k.e_allowSleepFlag) == k.e_allowSleepFlag;
                    };
                    k.prototype.GetFixtureList = function () {
                        return this.m_fixtureList;
                    };
                    k.prototype.GetJointList = function () {
                        return this.m_jointList;
                    };
                    k.prototype.GetControllerList = function () {
                        return this.m_controllerList;
                    };
                    k.prototype.GetContactList = function () {
                        return this.m_contactList;
                    };
                    k.prototype.GetNext = function () {
                        return this.m_next;
                    };
                    k.prototype.GetUserData = function () {
                        return this.m_userData;
                    };
                    k.prototype.SetUserData = function (a) {
                        this.m_userData = a;
                    };
                    k.prototype.GetWorld = function () {
                        return this.m_world;
                    };
                    k.prototype.b2Body = function (a, c) {
                        this.m_flags = 0;
                        (() => {
                            const __ifInstance228 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_flags |= k.e_bulletFlag;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance228.exports;
                            return __exports.data(a.bullet ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance229 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_flags |= k.e_fixedRotationFlag;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance229.exports;
                            return __exports.data(a.fixedRotation ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance230 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_flags |= k.e_allowSleepFlag;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance230.exports;
                            return __exports.data(a.allowSleep ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance231 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_flags |= k.e_awakeFlag;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance231.exports;
                            return __exports.data(a.awake ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance232 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_flags |= k.e_activeFlag;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance232.exports;
                            return __exports.data(a.active ? 1 : 0);
                        })();
                        this.m_world = c;
                        (() => {
                            const __callInstance489 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_xf.position.SetV(a.position);
                                    }
                                }
                            });
                            const __exports = __callInstance489.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance488 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_xf.R.Set(a.angle);
                                    }
                                }
                            });
                            const __exports = __callInstance488.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance487 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_sweep.localCenter.SetZero();
                                    }
                                }
                            });
                            const __exports = __callInstance487.exports;
                            return __exports.data();
                        })();
                        this.m_sweep.t0 = 1;
                        this.m_sweep.a0 = this.m_sweep.a = a.angle;
                        var g = this.m_xf.R, b = this.m_sweep.localCenter;
                        this.m_sweep.c.x = g.col1.x * b.x + g.col2.x * b.y;
                        this.m_sweep.c.y = g.col1.y * b.x + g.col2.y * b.y;
                        this.m_sweep.c.x += this.m_xf.position.x;
                        this.m_sweep.c.y += this.m_xf.position.y;
                        (() => {
                            const __callInstance486 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_sweep.c0.SetV(this.m_sweep.c);
                                    }
                                }
                            });
                            const __exports = __callInstance486.exports;
                            return __exports.data();
                        })();
                        this.m_contactList = this.m_controllerList = this.m_jointList = null;
                        this.m_controllerCount = 0;
                        this.m_next = this.m_prev = null;
                        (() => {
                            const __callInstance485 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_linearVelocity.SetV(a.linearVelocity);
                                    }
                                }
                            });
                            const __exports = __callInstance485.exports;
                            return __exports.data();
                        })();
                        this.m_angularVelocity = a.angularVelocity;
                        this.m_linearDamping = a.linearDamping;
                        this.m_angularDamping = a.angularDamping;
                        (() => {
                            const __callInstance484 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_force.Set(0, 0);
                                    }
                                }
                            });
                            const __exports = __callInstance484.exports;
                            return __exports.data();
                        })();
                        this.m_sleepTime = this.m_torque = 0;
                        this.m_type = a.type;
                        (() => {
                            const __ifInstance233 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_invMass = this.m_mass = 1;
                                    },
                                    impFunc2: () => {
                                        this.m_invMass = this.m_mass = 0;
                                    }
                                }
                            });
                            const __exports = __ifInstance233.exports;
                            return __exports.data(this.m_type == k.b2_dynamicBody ? 1 : 0);
                        })();
                        this.m_invI = this.m_I = 0;
                        this.m_inertiaScale = a.inertiaScale;
                        this.m_userData = a.userData;
                        this.m_fixtureList = null;
                        this.m_fixtureCount = 0;
                    };
                    k.prototype.SynchronizeFixtures = function () {
                        var a = k.s_xf1;
                        (() => {
                            const __callInstance483 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        a.R.Set(this.m_sweep.a0);
                                    }
                                }
                            });
                            const __exports = __callInstance483.exports;
                            return __exports.data();
                        })();
                        var c = a.R, g = this.m_sweep.localCenter;
                        a.position.x = this.m_sweep.c0.x - (c.col1.x * g.x + c.col2.x * g.y);
                        a.position.y = this.m_sweep.c0.y - (c.col1.y * g.x + c.col2.y * g.y);
                        g = this.m_world.m_contactManager.m_broadPhase;
                        (() => {
                            c = this.m_fixtureList;
                            const __forInstance43 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return c ? 1 : 0;
                                    },
                                    update: () => {
                                        c = c.m_next;
                                    },
                                    body: () => {
                                        (() => {
                                            const __callInstance482 = new WebAssembly.Instance(__callWasmModule, {
                                                env: {
                                                    impFunc: () => {
                                                        c.Synchronize(g, a, this.m_xf);
                                                    }
                                                }
                                            });
                                            const __exports = __callInstance482.exports;
                                            return __exports.data();
                                        })();
                                    }
                                }
                            });
                            const __exports = __forInstance43.exports;
                            return __exports.data();
                        })();
                    };
                    k.prototype.SynchronizeTransform = function () {
                        (() => {
                            const __callInstance481 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_xf.R.Set(this.m_sweep.a);
                                    }
                                }
                            });
                            const __exports = __callInstance481.exports;
                            return __exports.data();
                        })();
                        var a = this.m_xf.R, c = this.m_sweep.localCenter;
                        this.m_xf.position.x = this.m_sweep.c.x - (a.col1.x * c.x + a.col2.x * c.y);
                        this.m_xf.position.y = this.m_sweep.c.y - (a.col1.y * c.x + a.col2.y * c.y);
                    };
                    k.prototype.ShouldCollide = function (a) {
                        if (this.m_type != k.b2_dynamicBody && a.m_type != k.b2_dynamicBody)
                            return false;
                        for (var c = this.m_jointList; c; c = c.next)
                            if (c.other == a)
                                if (c.joint.m_collideConnected == false)
                                    return false;
                        return true;
                    };
                    k.prototype.Advance = function (a) {
                        (() => {
                            const __ifInstance234 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance234.exports;
                            return __exports.data(a === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __callInstance480 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_sweep.Advance(a);
                                    }
                                }
                            });
                            const __exports = __callInstance480.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance479 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_sweep.c.SetV(this.m_sweep.c0);
                                    }
                                }
                            });
                            const __exports = __callInstance479.exports;
                            return __exports.data();
                        })();
                        this.m_sweep.a = this.m_sweep.a0;
                        (() => {
                            const __callInstance478 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.SynchronizeTransform();
                                    }
                                }
                            });
                            const __exports = __callInstance478.exports;
                            return __exports.data();
                        })();
                    };
                    (() => {
                        const __callInstance477 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.postDefs.push(function () {
                                        Box2D.Dynamics.b2Body.s_xf1 = new K();
                                        Box2D.Dynamics.b2Body.e_islandFlag = 1;
                                        Box2D.Dynamics.b2Body.e_awakeFlag = 2;
                                        Box2D.Dynamics.b2Body.e_allowSleepFlag = 4;
                                        Box2D.Dynamics.b2Body.e_bulletFlag = 8;
                                        Box2D.Dynamics.b2Body.e_fixedRotationFlag = 16;
                                        Box2D.Dynamics.b2Body.e_activeFlag = 32;
                                        Box2D.Dynamics.b2Body.b2_staticBody = 0;
                                        Box2D.Dynamics.b2Body.b2_kinematicBody = 1;
                                        Box2D.Dynamics.b2Body.b2_dynamicBody = 2;
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance477.exports;
                        return __exports.data();
                    })();
                    z.b2BodyDef = function () {
                        this.position = new y();
                        this.linearVelocity = new y();
                    };
                    z.prototype.b2BodyDef = function () {
                        this.userData = null;
                        (() => {
                            const __callInstance476 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.position.Set(0, 0);
                                    }
                                }
                            });
                            const __exports = __callInstance476.exports;
                            return __exports.data();
                        })();
                        this.angle = 0;
                        (() => {
                            const __callInstance475 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.linearVelocity.Set(0, 0);
                                    }
                                }
                            });
                            const __exports = __callInstance475.exports;
                            return __exports.data();
                        })();
                        this.angularDamping = this.linearDamping = this.angularVelocity = 0;
                        this.awake = this.allowSleep = true;
                        this.bullet = this.fixedRotation = false;
                        this.type = k.b2_staticBody;
                        this.active = true;
                        this.inertiaScale = 1;
                    };
                    u.b2ContactFilter = function () {
                    };
                    u.prototype.ShouldCollide = function (a, c) {
                        var g = a.GetFilterData(), b = c.GetFilterData();
                        if (g.groupIndex == b.groupIndex && g.groupIndex != 0)
                            return g.groupIndex > 0;
                        return (g.maskBits & b.categoryBits) != 0 && (g.categoryBits & b.maskBits) != 0;
                    };
                    u.prototype.RayCollide = function (a, c) {
                        if (!a)
                            return true;
                        return this.ShouldCollide(a instanceof S ? a : null, c);
                    };
                    (() => {
                        const __callInstance474 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.postDefs.push(function () {
                                        Box2D.Dynamics.b2ContactFilter.b2_defaultFilter = new u();
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance474.exports;
                        return __exports.data();
                    })();
                    D.b2ContactImpulse = function () {
                        this.normalImpulses = new Vector_a2j_Number(A.b2_maxManifoldPoints);
                        this.tangentImpulses = new Vector_a2j_Number(A.b2_maxManifoldPoints);
                    };
                    H.b2ContactListener = function () {
                    };
                    H.prototype.BeginContact = function () {
                    };
                    H.prototype.EndContact = function () {
                    };
                    H.prototype.PreSolve = function () {
                    };
                    H.prototype.PostSolve = function () {
                    };
                    (() => {
                        const __callInstance473 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.postDefs.push(function () {
                                        Box2D.Dynamics.b2ContactListener.b2_defaultListener = new H();
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance473.exports;
                        return __exports.data();
                    })();
                    O.b2ContactManager = function () {
                    };
                    O.prototype.b2ContactManager = function () {
                        this.m_world = null;
                        this.m_contactCount = 0;
                        this.m_contactFilter = u.b2_defaultFilter;
                        this.m_contactListener = H.b2_defaultListener;
                        this.m_contactFactory = new j(this.m_allocator);
                        this.m_broadPhase = new B();
                    };
                    O.prototype.AddPair = function (a, c) {
                        var g = a instanceof S ? a : null, b = c instanceof S ? c : null, e = g.GetBody(), f = b.GetBody();
                        if (e != f) {
                            for (var m = f.GetContactList(); m;) {
                                if (m.other == e) {
                                    var r = m.contact.GetFixtureA(), s = m.contact.GetFixtureB();
                                    if (r == g && s == b)
                                        return;
                                    if (r == b && s == g)
                                        return;
                                }
                                m = m.next;
                            }
                            (() => {
                                const __ifInstance235 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            (() => {
                                                const __ifInstance236 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                m = this.m_contactFactory.Create(g, b);
                                                                g = m.GetFixtureA();
                                                                b = m.GetFixtureB();
                                                                e = g.m_body;
                                                                f = b.m_body;
                                                                m.m_prev = null;
                                                                m.m_next = this.m_world.m_contactList;
                                                                (() => {
                                                                    const __ifInstance237 = new WebAssembly.Instance(__ifWasmModule, {
                                                                        env: {
                                                                            impFunc1: () => {
                                                                                this.m_world.m_contactList.m_prev = m;
                                                                            },
                                                                            impFunc2: () => {
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __ifInstance237.exports;
                                                                    return __exports.data(this.m_world.m_contactList != null ? 1 : 0);
                                                                })();
                                                                this.m_world.m_contactList = m;
                                                                m.m_nodeA.contact = m;
                                                                m.m_nodeA.other = f;
                                                                m.m_nodeA.prev = null;
                                                                m.m_nodeA.next = e.m_contactList;
                                                                (() => {
                                                                    const __ifInstance238 = new WebAssembly.Instance(__ifWasmModule, {
                                                                        env: {
                                                                            impFunc1: () => {
                                                                                e.m_contactList.prev = m.m_nodeA;
                                                                            },
                                                                            impFunc2: () => {
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __ifInstance238.exports;
                                                                    return __exports.data(e.m_contactList != null ? 1 : 0);
                                                                })();
                                                                e.m_contactList = m.m_nodeA;
                                                                m.m_nodeB.contact = m;
                                                                m.m_nodeB.other = e;
                                                                m.m_nodeB.prev = null;
                                                                m.m_nodeB.next = f.m_contactList;
                                                                (() => {
                                                                    const __ifInstance239 = new WebAssembly.Instance(__ifWasmModule, {
                                                                        env: {
                                                                            impFunc1: () => {
                                                                                f.m_contactList.prev = m.m_nodeB;
                                                                            },
                                                                            impFunc2: () => {
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __ifInstance239.exports;
                                                                    return __exports.data(f.m_contactList != null ? 1 : 0);
                                                                })();
                                                                f.m_contactList = m.m_nodeB;
                                                                ++this.m_world.m_contactCount;
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance236.exports;
                                                return __exports.data(this.m_contactFilter.ShouldCollide(g, b) != false ? 1 : 0);
                                            })();
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance235.exports;
                                return __exports.data(f.ShouldCollide(e) != false ? 1 : 0);
                            })();
                        }
                    };
                    O.prototype.FindNewContacts = function () {
                        (() => {
                            const __callInstance472 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_broadPhase.UpdatePairs(Box2D.generateCallback(this, this.AddPair));
                                    }
                                }
                            });
                            const __exports = __callInstance472.exports;
                            return __exports.data();
                        })();
                    };
                    O.prototype.Destroy = function (a) {
                        var c = a.GetFixtureA(), g = a.GetFixtureB();
                        c = c.GetBody();
                        g = g.GetBody();
                        a.IsTouching() && this.m_contactListener.EndContact(a);
                        (() => {
                            const __ifInstance240 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a.m_prev.m_next = a.m_next;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance240.exports;
                            return __exports.data(a.m_prev ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance241 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a.m_next.m_prev = a.m_prev;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance241.exports;
                            return __exports.data(a.m_next ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance242 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_world.m_contactList = a.m_next;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance242.exports;
                            return __exports.data(a == this.m_world.m_contactList ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance243 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a.m_nodeA.prev.next = a.m_nodeA.next;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance243.exports;
                            return __exports.data(a.m_nodeA.prev ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance244 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a.m_nodeA.next.prev = a.m_nodeA.prev;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance244.exports;
                            return __exports.data(a.m_nodeA.next ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance245 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        c.m_contactList = a.m_nodeA.next;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance245.exports;
                            return __exports.data(a.m_nodeA == c.m_contactList ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance246 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a.m_nodeB.prev.next = a.m_nodeB.next;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance246.exports;
                            return __exports.data(a.m_nodeB.prev ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance247 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a.m_nodeB.next.prev = a.m_nodeB.prev;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance247.exports;
                            return __exports.data(a.m_nodeB.next ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance248 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        g.m_contactList = a.m_nodeB.next;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance248.exports;
                            return __exports.data(a.m_nodeB == g.m_contactList ? 1 : 0);
                        })();
                        (() => {
                            const __callInstance471 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_contactFactory.Destroy(a);
                                    }
                                }
                            });
                            const __exports = __callInstance471.exports;
                            return __exports.data();
                        })();
                        --this.m_contactCount;
                    };
                    O.prototype.Collide = function () {
                        for (var a = this.m_world.m_contactList; a;) {
                            var c = a.GetFixtureA(), g = a.GetFixtureB(), b = c.GetBody(), e = g.GetBody();
                            if (b.IsAwake() == false && e.IsAwake() == false)
                                a = a.GetNext();
                            else {
                                if (a.m_flags & l.e_filterFlag) {
                                    if (e.ShouldCollide(b) == false) {
                                        c = a;
                                        a = c.GetNext();
                                        (() => {
                                            const __callInstance470 = new WebAssembly.Instance(__callWasmModule, {
                                                env: {
                                                    impFunc: () => {
                                                        this.Destroy(c);
                                                    }
                                                }
                                            });
                                            const __exports = __callInstance470.exports;
                                            return __exports.data();
                                        })();
                                        continue;
                                    }
                                    if (this.m_contactFilter.ShouldCollide(c, g) == false) {
                                        c = a;
                                        a = c.GetNext();
                                        (() => {
                                            const __callInstance469 = new WebAssembly.Instance(__callWasmModule, {
                                                env: {
                                                    impFunc: () => {
                                                        this.Destroy(c);
                                                    }
                                                }
                                            });
                                            const __exports = __callInstance469.exports;
                                            return __exports.data();
                                        })();
                                        continue;
                                    }
                                    a.m_flags &= ~l.e_filterFlag;
                                }
                                (() => {
                                    const __ifInstance249 = new WebAssembly.Instance(__ifWasmModule, {
                                        env: {
                                            impFunc1: () => {
                                                {
                                                    c = a;
                                                    a = c.GetNext();
                                                    (() => {
                                                        const __callInstance468 = new WebAssembly.Instance(__callWasmModule, {
                                                            env: {
                                                                impFunc: () => {
                                                                    this.Destroy(c);
                                                                }
                                                            }
                                                        });
                                                        const __exports = __callInstance468.exports;
                                                        return __exports.data();
                                                    })();
                                                }
                                            },
                                            impFunc2: () => {
                                                {
                                                    (() => {
                                                        const __callInstance467 = new WebAssembly.Instance(__callWasmModule, {
                                                            env: {
                                                                impFunc: () => {
                                                                    a.Update(this.m_contactListener);
                                                                }
                                                            }
                                                        });
                                                        const __exports = __callInstance467.exports;
                                                        return __exports.data();
                                                    })();
                                                    a = a.GetNext();
                                                }
                                            }
                                        }
                                    });
                                    const __exports = __ifInstance249.exports;
                                    return __exports.data(this.m_broadPhase.TestOverlap(c.m_proxy, g.m_proxy) == false ? 1 : 0);
                                })();
                            }
                        }
                    };
                    (() => {
                        const __callInstance466 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.postDefs.push(function () {
                                        Box2D.Dynamics.b2ContactManager.s_evalCP = new p();
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance466.exports;
                        return __exports.data();
                    })();
                    E.b2DebugDraw = function () {
                    };
                    E.prototype.b2DebugDraw = function () {
                    };
                    E.prototype.SetFlags = function () {
                    };
                    E.prototype.GetFlags = function () {
                    };
                    E.prototype.AppendFlags = function () {
                    };
                    E.prototype.ClearFlags = function () {
                    };
                    E.prototype.SetSprite = function () {
                    };
                    E.prototype.GetSprite = function () {
                    };
                    E.prototype.SetDrawScale = function () {
                    };
                    E.prototype.GetDrawScale = function () {
                    };
                    E.prototype.SetLineThickness = function () {
                    };
                    E.prototype.GetLineThickness = function () {
                    };
                    E.prototype.SetAlpha = function () {
                    };
                    E.prototype.GetAlpha = function () {
                    };
                    E.prototype.SetFillAlpha = function () {
                    };
                    E.prototype.GetFillAlpha = function () {
                    };
                    E.prototype.SetXFormScale = function () {
                    };
                    E.prototype.GetXFormScale = function () {
                    };
                    E.prototype.DrawPolygon = function () {
                    };
                    E.prototype.DrawSolidPolygon = function () {
                    };
                    E.prototype.DrawCircle = function () {
                    };
                    E.prototype.DrawSolidCircle = function () {
                    };
                    E.prototype.DrawSegment = function () {
                    };
                    E.prototype.DrawTransform = function () {
                    };
                    (() => {
                        const __callInstance465 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.postDefs.push(function () {
                                        Box2D.Dynamics.b2DebugDraw.e_shapeBit = 1;
                                        Box2D.Dynamics.b2DebugDraw.e_jointBit = 2;
                                        Box2D.Dynamics.b2DebugDraw.e_aabbBit = 4;
                                        Box2D.Dynamics.b2DebugDraw.e_pairBit = 8;
                                        Box2D.Dynamics.b2DebugDraw.e_centerOfMassBit = 16;
                                        Box2D.Dynamics.b2DebugDraw.e_controllerBit = 32;
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance465.exports;
                        return __exports.data();
                    })();
                    R.b2DestructionListener = function () {
                    };
                    R.prototype.SayGoodbyeJoint = function () {
                    };
                    R.prototype.SayGoodbyeFixture = function () {
                    };
                    N.b2FilterData = function () {
                        this.categoryBits = 1;
                        this.maskBits = 65535;
                        this.groupIndex = 0;
                    };
                    N.prototype.Copy = function () {
                        var a = new N();
                        a.categoryBits = this.categoryBits;
                        a.maskBits = this.maskBits;
                        a.groupIndex = this.groupIndex;
                        return a;
                    };
                    S.b2Fixture = function () {
                        this.m_filter = new N();
                    };
                    S.prototype.GetType = function () {
                        return this.m_shape.GetType();
                    };
                    S.prototype.GetShape = function () {
                        return this.m_shape;
                    };
                    S.prototype.SetSensor = function (a) {
                        (() => {
                            const __ifInstance250 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            this.m_isSensor = a;
                                            (() => {
                                                const __ifInstance251 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            for (a = this.m_body.GetContactList(); a;) {
                                                                var c = a.contact, g = c.GetFixtureA(), b = c.GetFixtureB();
                                                                (() => {
                                                                    const __ifInstance252 = new WebAssembly.Instance(__ifWasmModule, {
                                                                        env: {
                                                                            impFunc1: () => {
                                                                                (() => {
                                                                                    const __callInstance464 = new WebAssembly.Instance(__callWasmModule, {
                                                                                        env: {
                                                                                            impFunc: () => {
                                                                                                c.SetSensor(g.IsSensor() || b.IsSensor());
                                                                                            }
                                                                                        }
                                                                                    });
                                                                                    const __exports = __callInstance464.exports;
                                                                                    return __exports.data();
                                                                                })();
                                                                            },
                                                                            impFunc2: () => {
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __ifInstance252.exports;
                                                                    return __exports.data(g == this || b == this ? 1 : 0);
                                                                })();
                                                                a = a.next;
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance251.exports;
                                                return __exports.data(this.m_body != null ? 1 : 0);
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance250.exports;
                            return __exports.data(this.m_isSensor != a ? 1 : 0);
                        })();
                    };
                    S.prototype.IsSensor = function () {
                        return this.m_isSensor;
                    };
                    S.prototype.SetFilterData = function (a) {
                        this.m_filter = a.Copy();
                        (() => {
                            const __ifInstance253 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        for (a = this.m_body.GetContactList(); a;) {
                                            var c = a.contact, g = c.GetFixtureA(), b = c.GetFixtureB();
                                            (() => {
                                                const __ifInstance254 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            (() => {
                                                                const __callInstance463 = new WebAssembly.Instance(__callWasmModule, {
                                                                    env: {
                                                                        impFunc: () => {
                                                                            c.FlagForFiltering();
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __callInstance463.exports;
                                                                return __exports.data();
                                                            })();
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance254.exports;
                                                return __exports.data(g == this || b == this ? 1 : 0);
                                            })();
                                            a = a.next;
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance253.exports;
                            return __exports.data(!this.m_body ? 1 : 0);
                        })();
                    };
                    S.prototype.GetFilterData = function () {
                        return this.m_filter.Copy();
                    };
                    S.prototype.GetBody = function () {
                        return this.m_body;
                    };
                    S.prototype.GetNext = function () {
                        return this.m_next;
                    };
                    S.prototype.GetUserData = function () {
                        return this.m_userData;
                    };
                    S.prototype.SetUserData = function (a) {
                        this.m_userData = a;
                    };
                    S.prototype.TestPoint = function (a) {
                        return this.m_shape.TestPoint(this.m_body.GetTransform(), a);
                    };
                    S.prototype.RayCast = function (a, c) {
                        return this.m_shape.RayCast(a, c, this.m_body.GetTransform());
                    };
                    S.prototype.GetMassData = function (a) {
                        (() => {
                            const __ifInstance255 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a = null;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance255.exports;
                            return __exports.data(a === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance256 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a = new I();
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance256.exports;
                            return __exports.data(a == null ? 1 : 0);
                        })();
                        (() => {
                            const __callInstance462 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_shape.ComputeMass(a, this.m_density);
                                    }
                                }
                            });
                            const __exports = __callInstance462.exports;
                            return __exports.data();
                        })();
                        return a;
                    };
                    S.prototype.SetDensity = function (a) {
                        (() => {
                            const __ifInstance257 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance257.exports;
                            return __exports.data(a === undefined ? 1 : 0);
                        })();
                        this.m_density = a;
                    };
                    S.prototype.GetDensity = function () {
                        return this.m_density;
                    };
                    S.prototype.GetFriction = function () {
                        return this.m_friction;
                    };
                    S.prototype.SetFriction = function (a) {
                        (() => {
                            const __ifInstance258 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance258.exports;
                            return __exports.data(a === undefined ? 1 : 0);
                        })();
                        this.m_friction = a;
                    };
                    S.prototype.GetRestitution = function () {
                        return this.m_restitution;
                    };
                    S.prototype.SetRestitution = function (a) {
                        (() => {
                            const __ifInstance259 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance259.exports;
                            return __exports.data(a === undefined ? 1 : 0);
                        })();
                        this.m_restitution = a;
                    };
                    S.prototype.GetAABB = function () {
                        return this.m_aabb;
                    };
                    S.prototype.b2Fixture = function () {
                        this.m_aabb = new U();
                        this.m_shape = this.m_next = this.m_body = this.m_userData = null;
                        this.m_restitution = this.m_friction = this.m_density = 0;
                    };
                    S.prototype.Create = function (a, c, g) {
                        this.m_userData = g.userData;
                        this.m_friction = g.friction;
                        this.m_restitution = g.restitution;
                        this.m_body = a;
                        this.m_next = null;
                        this.m_filter = g.filter.Copy();
                        this.m_isSensor = g.isSensor;
                        this.m_shape = g.shape.Copy();
                        this.m_density = g.density;
                    };
                    S.prototype.Destroy = function () {
                        this.m_shape = null;
                    };
                    S.prototype.CreateProxy = function (a, c) {
                        (() => {
                            const __callInstance461 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_shape.ComputeAABB(this.m_aabb, c);
                                    }
                                }
                            });
                            const __exports = __callInstance461.exports;
                            return __exports.data();
                        })();
                        this.m_proxy = a.CreateProxy(this.m_aabb, this);
                    };
                    S.prototype.DestroyProxy = function (a) {
                        (() => {
                            const __ifInstance260 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            (() => {
                                                const __callInstance460 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            a.DestroyProxy(this.m_proxy);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance460.exports;
                                                return __exports.data();
                                            })();
                                            this.m_proxy = null;
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance260.exports;
                            return __exports.data(this.m_proxy != null ? 1 : 0);
                        })();
                    };
                    S.prototype.Synchronize = function (a, c, g) {
                        (() => {
                            const __ifInstance261 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            var b = new U(), e = new U();
                                            (() => {
                                                const __callInstance459 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_shape.ComputeAABB(b, c);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance459.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance458 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_shape.ComputeAABB(e, g);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance458.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance457 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_aabb.Combine(b, e);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance457.exports;
                                                return __exports.data();
                                            })();
                                            c = F.SubtractVV(g.position, c.position);
                                            (() => {
                                                const __callInstance456 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            a.MoveProxy(this.m_proxy, this.m_aabb, c);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance456.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance261.exports;
                            return __exports.data(this.m_proxy ? 1 : 0);
                        })();
                    };
                    aa.b2FixtureDef = function () {
                        this.filter = new N();
                    };
                    aa.prototype.b2FixtureDef = function () {
                        this.userData = this.shape = null;
                        this.friction = 0.2;
                        this.density = this.restitution = 0;
                        this.filter.categoryBits = 1;
                        this.filter.maskBits = 65535;
                        this.filter.groupIndex = 0;
                        this.isSensor = false;
                    };
                    Z.b2Island = function () {
                    };
                    Z.prototype.b2Island = function () {
                        this.m_bodies = new Vector();
                        this.m_contacts = new Vector();
                        this.m_joints = new Vector();
                    };
                    Z.prototype.Initialize = function (a, c, g, b, e, f) {
                        (() => {
                            const __ifInstance262 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance262.exports;
                            return __exports.data(a === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance263 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        c = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance263.exports;
                            return __exports.data(c === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance264 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        g = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance264.exports;
                            return __exports.data(g === undefined ? 1 : 0);
                        })();
                        var m = 0;
                        this.m_bodyCapacity = a;
                        this.m_contactCapacity = c;
                        this.m_jointCapacity = g;
                        this.m_jointCount = this.m_contactCount = this.m_bodyCount = 0;
                        this.m_allocator = b;
                        this.m_listener = e;
                        this.m_contactSolver = f;
                        (() => {
                            m = this.m_bodies.length;
                            const __forInstance46 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return m < a ? 1 : 0;
                                    },
                                    update: () => {
                                        m++;
                                    },
                                    body: () => {
                                        this.m_bodies[m] = null;
                                    }
                                }
                            });
                            const __exports = __forInstance46.exports;
                            return __exports.data();
                        })();
                        (() => {
                            m = this.m_contacts.length;
                            const __forInstance47 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return m < c ? 1 : 0;
                                    },
                                    update: () => {
                                        m++;
                                    },
                                    body: () => {
                                        this.m_contacts[m] = null;
                                    }
                                }
                            });
                            const __exports = __forInstance47.exports;
                            return __exports.data();
                        })();
                        (() => {
                            m = this.m_joints.length;
                            const __forInstance48 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return m < g ? 1 : 0;
                                    },
                                    update: () => {
                                        m++;
                                    },
                                    body: () => {
                                        this.m_joints[m] = null;
                                    }
                                }
                            });
                            const __exports = __forInstance48.exports;
                            return __exports.data();
                        })();
                    };
                    Z.prototype.Clear = function () {
                        this.m_jointCount = this.m_contactCount = this.m_bodyCount = 0;
                    };
                    Z.prototype.Solve = function (a, c, g) {
                        var b = 0, e = 0, f;
                        (() => {
                            b = 0;
                            const __forInstance49 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return b < this.m_bodyCount ? 1 : 0;
                                    },
                                    update: () => {
                                        ++b;
                                    },
                                    body: () => {
                                        {
                                            e = this.m_bodies[b];
                                            (() => {
                                                const __ifInstance265 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                e.m_linearVelocity.x += a.dt * (c.x + e.m_invMass * e.m_force.x);
                                                                e.m_linearVelocity.y += a.dt * (c.y + e.m_invMass * e.m_force.y);
                                                                e.m_angularVelocity += a.dt * e.m_invI * e.m_torque;
                                                                (() => {
                                                                    const __callInstance455 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                e.m_linearVelocity.Multiply(F.Clamp(1 - a.dt * e.m_linearDamping, 0, 1));
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance455.exports;
                                                                    return __exports.data();
                                                                })();
                                                                e.m_angularVelocity *= F.Clamp(1 - a.dt * e.m_angularDamping, 0, 1);
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance265.exports;
                                                return __exports.data(e.GetType() == k.b2_dynamicBody ? 1 : 0);
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance49.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance454 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_contactSolver.Initialize(a, this.m_contacts, this.m_contactCount, this.m_allocator);
                                    }
                                }
                            });
                            const __exports = __callInstance454.exports;
                            return __exports.data();
                        })();
                        c = this.m_contactSolver;
                        (() => {
                            const __callInstance453 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        c.InitVelocityConstraints(a);
                                    }
                                }
                            });
                            const __exports = __callInstance453.exports;
                            return __exports.data();
                        })();
                        (() => {
                            b = 0;
                            const __forInstance50 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return b < this.m_jointCount ? 1 : 0;
                                    },
                                    update: () => {
                                        ++b;
                                    },
                                    body: () => {
                                        {
                                            f = this.m_joints[b];
                                            (() => {
                                                const __callInstance452 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            f.InitVelocityConstraints(a);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance452.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance50.exports;
                            return __exports.data();
                        })();
                        (() => {
                            b = 0;
                            const __forInstance51 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return b < a.velocityIterations ? 1 : 0;
                                    },
                                    update: () => {
                                        ++b;
                                    },
                                    body: () => {
                                        {
                                            (() => {
                                                e = 0;
                                                const __forInstance52 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return e < this.m_jointCount ? 1 : 0;
                                                        },
                                                        update: () => {
                                                            ++e;
                                                        },
                                                        body: () => {
                                                            {
                                                                f = this.m_joints[e];
                                                                (() => {
                                                                    const __callInstance451 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                f.SolveVelocityConstraints(a);
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance451.exports;
                                                                    return __exports.data();
                                                                })();
                                                            }
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance52.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance450 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            c.SolveVelocityConstraints();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance450.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance51.exports;
                            return __exports.data();
                        })();
                        (() => {
                            b = 0;
                            const __forInstance53 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return b < this.m_jointCount ? 1 : 0;
                                    },
                                    update: () => {
                                        ++b;
                                    },
                                    body: () => {
                                        {
                                            f = this.m_joints[b];
                                            (() => {
                                                const __callInstance449 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            f.FinalizeVelocityConstraints();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance449.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance53.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance448 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        c.FinalizeVelocityConstraints();
                                    }
                                }
                            });
                            const __exports = __callInstance448.exports;
                            return __exports.data();
                        })();
                        (() => {
                            b = 0;
                            const __forInstance54 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return b < this.m_bodyCount ? 1 : 0;
                                    },
                                    update: () => {
                                        ++b;
                                    },
                                    body: () => {
                                        {
                                            e = this.m_bodies[b];
                                            (() => {
                                                const __ifInstance266 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                var m = a.dt * e.m_linearVelocity.x, r = a.dt * e.m_linearVelocity.y;
                                                                (() => {
                                                                    const __ifInstance267 = new WebAssembly.Instance(__ifWasmModule, {
                                                                        env: {
                                                                            impFunc1: () => {
                                                                                {
                                                                                    (() => {
                                                                                        const __callInstance447 = new WebAssembly.Instance(__callWasmModule, {
                                                                                            env: {
                                                                                                impFunc: () => {
                                                                                                    e.m_linearVelocity.Normalize();
                                                                                                }
                                                                                            }
                                                                                        });
                                                                                        const __exports = __callInstance447.exports;
                                                                                        return __exports.data();
                                                                                    })();
                                                                                    e.m_linearVelocity.x *= A.b2_maxTranslation * a.inv_dt;
                                                                                    e.m_linearVelocity.y *= A.b2_maxTranslation * a.inv_dt;
                                                                                }
                                                                            },
                                                                            impFunc2: () => {
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __ifInstance267.exports;
                                                                    return __exports.data(m * m + r * r > A.b2_maxTranslationSquared ? 1 : 0);
                                                                })();
                                                                m = a.dt * e.m_angularVelocity;
                                                                (() => {
                                                                    const __ifInstance268 = new WebAssembly.Instance(__ifWasmModule, {
                                                                        env: {
                                                                            impFunc1: () => {
                                                                                e.m_angularVelocity = e.m_angularVelocity < 0 ? -A.b2_maxRotation * a.inv_dt : A.b2_maxRotation * a.inv_dt;
                                                                            },
                                                                            impFunc2: () => {
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __ifInstance268.exports;
                                                                    return __exports.data(m * m > A.b2_maxRotationSquared ? 1 : 0);
                                                                })();
                                                                (() => {
                                                                    const __callInstance446 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                e.m_sweep.c0.SetV(e.m_sweep.c);
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance446.exports;
                                                                    return __exports.data();
                                                                })();
                                                                e.m_sweep.a0 = e.m_sweep.a;
                                                                e.m_sweep.c.x += a.dt * e.m_linearVelocity.x;
                                                                e.m_sweep.c.y += a.dt * e.m_linearVelocity.y;
                                                                e.m_sweep.a += a.dt * e.m_angularVelocity;
                                                                (() => {
                                                                    const __callInstance445 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                e.SynchronizeTransform();
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance445.exports;
                                                                    return __exports.data();
                                                                })();
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance266.exports;
                                                return __exports.data(e.GetType() != k.b2_staticBody ? 1 : 0);
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance54.exports;
                            return __exports.data();
                        })();
                        for (b = 0; b < a.positionIterations; ++b) {
                            m = c.SolvePositionConstraints(A.b2_contactBaumgarte);
                            r = true;
                            (() => {
                                e = 0;
                                const __forInstance55 = new WebAssembly.Instance(__forWasmModule, {
                                    env: {
                                        test: () => {
                                            return e < this.m_jointCount ? 1 : 0;
                                        },
                                        update: () => {
                                            ++e;
                                        },
                                        body: () => {
                                            {
                                                f = this.m_joints[e];
                                                f = f.SolvePositionConstraints(A.b2_contactBaumgarte);
                                                r = r && f;
                                            }
                                        }
                                    }
                                });
                                const __exports = __forInstance55.exports;
                                return __exports.data();
                            })();
                            if (m && r)
                                break;
                        }
                        (() => {
                            const __callInstance444 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.Report(c.m_constraints);
                                    }
                                }
                            });
                            const __exports = __callInstance444.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __ifInstance269 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            g = Number.MAX_VALUE;
                                            c = A.b2_linearSleepTolerance * A.b2_linearSleepTolerance;
                                            m = A.b2_angularSleepTolerance * A.b2_angularSleepTolerance;
                                            (() => {
                                                b = 0;
                                                const __forInstance56 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return b < this.m_bodyCount ? 1 : 0;
                                                        },
                                                        update: () => {
                                                            ++b;
                                                        },
                                                        body: () => {
                                                            {
                                                                e = this.m_bodies[b];
                                                                (() => {
                                                                    const __ifInstance270 = new WebAssembly.Instance(__ifWasmModule, {
                                                                        env: {
                                                                            impFunc1: () => {
                                                                                {
                                                                                    (() => {
                                                                                        const __ifInstance271 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                            env: {
                                                                                                impFunc1: () => {
                                                                                                    g = e.m_sleepTime = 0;
                                                                                                },
                                                                                                impFunc2: () => {
                                                                                                }
                                                                                            }
                                                                                        });
                                                                                        const __exports = __ifInstance271.exports;
                                                                                        return __exports.data((e.m_flags & k.e_allowSleepFlag) == 0 ? 1 : 0);
                                                                                    })();
                                                                                    (() => {
                                                                                        const __ifInstance272 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                            env: {
                                                                                                impFunc1: () => {
                                                                                                    g = e.m_sleepTime = 0;
                                                                                                },
                                                                                                impFunc2: () => {
                                                                                                    {
                                                                                                        e.m_sleepTime += a.dt;
                                                                                                        g = F.Min(g, e.m_sleepTime);
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        });
                                                                                        const __exports = __ifInstance272.exports;
                                                                                        return __exports.data((e.m_flags & k.e_allowSleepFlag) == 0 || e.m_angularVelocity * e.m_angularVelocity > m || F.Dot(e.m_linearVelocity, e.m_linearVelocity) > c ? 1 : 0);
                                                                                    })();
                                                                                }
                                                                            },
                                                                            impFunc2: () => {
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __ifInstance270.exports;
                                                                    return __exports.data(e.GetType() != k.b2_staticBody ? 1 : 0);
                                                                })();
                                                            }
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance56.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __ifInstance273 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            for (b = 0; b < this.m_bodyCount; ++b) {
                                                                e = this.m_bodies[b];
                                                                (() => {
                                                                    const __callInstance443 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                e.SetAwake(false);
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance443.exports;
                                                                    return __exports.data();
                                                                })();
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance273.exports;
                                                return __exports.data(g >= A.b2_timeToSleep ? 1 : 0);
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance269.exports;
                            return __exports.data(g ? 1 : 0);
                        })();
                    };
                    Z.prototype.SolveTOI = function (a) {
                        var c = 0, g = 0;
                        (() => {
                            const __callInstance442 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_contactSolver.Initialize(a, this.m_contacts, this.m_contactCount, this.m_allocator);
                                    }
                                }
                            });
                            const __exports = __callInstance442.exports;
                            return __exports.data();
                        })();
                        var b = this.m_contactSolver;
                        (() => {
                            c = 0;
                            const __forInstance58 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return c < this.m_jointCount ? 1 : 0;
                                    },
                                    update: () => {
                                        ++c;
                                    },
                                    body: () => {
                                        (() => {
                                            const __callInstance441 = new WebAssembly.Instance(__callWasmModule, {
                                                env: {
                                                    impFunc: () => {
                                                        this.m_joints[c].InitVelocityConstraints(a);
                                                    }
                                                }
                                            });
                                            const __exports = __callInstance441.exports;
                                            return __exports.data();
                                        })();
                                    }
                                }
                            });
                            const __exports = __forInstance58.exports;
                            return __exports.data();
                        })();
                        (() => {
                            c = 0;
                            const __forInstance59 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return c < a.velocityIterations ? 1 : 0;
                                    },
                                    update: () => {
                                        ++c;
                                    },
                                    body: () => {
                                        {
                                            (() => {
                                                const __callInstance440 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            b.SolveVelocityConstraints();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance440.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                g = 0;
                                                const __forInstance60 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return g < this.m_jointCount ? 1 : 0;
                                                        },
                                                        update: () => {
                                                            ++g;
                                                        },
                                                        body: () => {
                                                            (() => {
                                                                const __callInstance439 = new WebAssembly.Instance(__callWasmModule, {
                                                                    env: {
                                                                        impFunc: () => {
                                                                            this.m_joints[g].SolveVelocityConstraints(a);
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __callInstance439.exports;
                                                                return __exports.data();
                                                            })();
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance60.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance59.exports;
                            return __exports.data();
                        })();
                        (() => {
                            c = 0;
                            const __forInstance61 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return c < this.m_bodyCount ? 1 : 0;
                                    },
                                    update: () => {
                                        ++c;
                                    },
                                    body: () => {
                                        {
                                            g = this.m_bodies[c];
                                            (() => {
                                                const __ifInstance274 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                var e = a.dt * g.m_linearVelocity.x, f = a.dt * g.m_linearVelocity.y;
                                                                (() => {
                                                                    const __ifInstance275 = new WebAssembly.Instance(__ifWasmModule, {
                                                                        env: {
                                                                            impFunc1: () => {
                                                                                {
                                                                                    (() => {
                                                                                        const __callInstance438 = new WebAssembly.Instance(__callWasmModule, {
                                                                                            env: {
                                                                                                impFunc: () => {
                                                                                                    g.m_linearVelocity.Normalize();
                                                                                                }
                                                                                            }
                                                                                        });
                                                                                        const __exports = __callInstance438.exports;
                                                                                        return __exports.data();
                                                                                    })();
                                                                                    g.m_linearVelocity.x *= A.b2_maxTranslation * a.inv_dt;
                                                                                    g.m_linearVelocity.y *= A.b2_maxTranslation * a.inv_dt;
                                                                                }
                                                                            },
                                                                            impFunc2: () => {
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __ifInstance275.exports;
                                                                    return __exports.data(e * e + f * f > A.b2_maxTranslationSquared ? 1 : 0);
                                                                })();
                                                                e = a.dt * g.m_angularVelocity;
                                                                (() => {
                                                                    const __ifInstance276 = new WebAssembly.Instance(__ifWasmModule, {
                                                                        env: {
                                                                            impFunc1: () => {
                                                                                g.m_angularVelocity = g.m_angularVelocity < 0 ? -A.b2_maxRotation * a.inv_dt : A.b2_maxRotation * a.inv_dt;
                                                                            },
                                                                            impFunc2: () => {
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __ifInstance276.exports;
                                                                    return __exports.data(e * e > A.b2_maxRotationSquared ? 1 : 0);
                                                                })();
                                                                (() => {
                                                                    const __callInstance437 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                g.m_sweep.c0.SetV(g.m_sweep.c);
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance437.exports;
                                                                    return __exports.data();
                                                                })();
                                                                g.m_sweep.a0 = g.m_sweep.a;
                                                                g.m_sweep.c.x += a.dt * g.m_linearVelocity.x;
                                                                g.m_sweep.c.y += a.dt * g.m_linearVelocity.y;
                                                                g.m_sweep.a += a.dt * g.m_angularVelocity;
                                                                (() => {
                                                                    const __callInstance436 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                g.SynchronizeTransform();
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance436.exports;
                                                                    return __exports.data();
                                                                })();
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance274.exports;
                                                return __exports.data(g.GetType() != k.b2_staticBody ? 1 : 0);
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance61.exports;
                            return __exports.data();
                        })();
                        for (c = 0; c < a.positionIterations; ++c) {
                            e = b.SolvePositionConstraints(0.75);
                            f = true;
                            (() => {
                                g = 0;
                                const __forInstance62 = new WebAssembly.Instance(__forWasmModule, {
                                    env: {
                                        test: () => {
                                            return g < this.m_jointCount ? 1 : 0;
                                        },
                                        update: () => {
                                            ++g;
                                        },
                                        body: () => {
                                            {
                                                var m = this.m_joints[g].SolvePositionConstraints(A.b2_contactBaumgarte);
                                                f = f && m;
                                            }
                                        }
                                    }
                                });
                                const __exports = __forInstance62.exports;
                                return __exports.data();
                            })();
                            if (e && f)
                                break;
                        }
                        (() => {
                            const __callInstance435 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.Report(b.m_constraints);
                                    }
                                }
                            });
                            const __exports = __callInstance435.exports;
                            return __exports.data();
                        })();
                    };
                    Z.prototype.Report = function (a) {
                        (() => {
                            const __ifInstance277 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        for (var c = 0; c < this.m_contactCount; ++c) {
                                            (() => {
                                                var g = this.m_contacts[c], b = a[c], e = 0;
                                                const __forInstance64 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return e < b.pointCount ? 1 : 0;
                                                        },
                                                        update: () => {
                                                            ++e;
                                                        },
                                                        body: () => {
                                                            {
                                                                Z.s_impulse.normalImpulses[e] = b.points[e].normalImpulse;
                                                                Z.s_impulse.tangentImpulses[e] = b.points[e].tangentImpulse;
                                                            }
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance64.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance434 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_listener.PostSolve(g, Z.s_impulse);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance434.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance277.exports;
                            return __exports.data(this.m_listener != null ? 1 : 0);
                        })();
                    };
                    Z.prototype.AddBody = function (a) {
                        a.m_islandIndex = this.m_bodyCount;
                        this.m_bodies[this.m_bodyCount++] = a;
                    };
                    Z.prototype.AddContact = function (a) {
                        this.m_contacts[this.m_contactCount++] = a;
                    };
                    Z.prototype.AddJoint = function (a) {
                        this.m_joints[this.m_jointCount++] = a;
                    };
                    (() => {
                        const __callInstance433 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.postDefs.push(function () {
                                        Box2D.Dynamics.b2Island.s_impulse = new D();
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance433.exports;
                        return __exports.data();
                    })();
                    d.b2TimeStep = function () {
                    };
                    d.prototype.Set = function (a) {
                        this.dt = a.dt;
                        this.inv_dt = a.inv_dt;
                        this.positionIterations = a.positionIterations;
                        this.velocityIterations = a.velocityIterations;
                        this.warmStarting = a.warmStarting;
                    };
                    h.b2World = function () {
                        this.s_stack = new Vector();
                        this.m_contactManager = new O();
                        this.m_contactSolver = new o();
                        this.m_island = new Z();
                    };
                    h.prototype.b2World = function (a, c) {
                        this.m_controllerList = this.m_jointList = this.m_contactList = this.m_bodyList = this.m_debugDraw = this.m_destructionListener = null;
                        this.m_controllerCount = this.m_jointCount = this.m_contactCount = this.m_bodyCount = 0;
                        h.m_warmStarting = true;
                        h.m_continuousPhysics = true;
                        this.m_allowSleep = c;
                        this.m_gravity = a;
                        this.m_inv_dt0 = 0;
                        this.m_contactManager.m_world = this;
                        this.m_groundBody = this.CreateBody(new z());
                    };
                    h.prototype.SetDestructionListener = function (a) {
                        this.m_destructionListener = a;
                    };
                    h.prototype.SetContactFilter = function (a) {
                        this.m_contactManager.m_contactFilter = a;
                    };
                    h.prototype.SetContactListener = function (a) {
                        this.m_contactManager.m_contactListener = a;
                    };
                    h.prototype.SetDebugDraw = function (a) {
                        this.m_debugDraw = a;
                    };
                    h.prototype.SetBroadPhase = function (a) {
                        var c = this.m_contactManager.m_broadPhase;
                        this.m_contactManager.m_broadPhase = a;
                        (() => {
                            var g = this.m_bodyList;
                            const __forInstance65 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return g ? 1 : 0;
                                    },
                                    update: () => {
                                        g = g.m_next;
                                    },
                                    body: () => {
                                        (() => {
                                            var b = g.m_fixtureList;
                                            const __forInstance66 = new WebAssembly.Instance(__forWasmModule, {
                                                env: {
                                                    test: () => {
                                                        return b ? 1 : 0;
                                                    },
                                                    update: () => {
                                                        b = b.m_next;
                                                    },
                                                    body: () => {
                                                        b.m_proxy = a.CreateProxy(c.GetFatAABB(b.m_proxy), b);
                                                    }
                                                }
                                            });
                                            const __exports = __forInstance66.exports;
                                            return __exports.data();
                                        })();
                                    }
                                }
                            });
                            const __exports = __forInstance65.exports;
                            return __exports.data();
                        })();
                    };
                    h.prototype.Validate = function () {
                        (() => {
                            const __callInstance432 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_contactManager.m_broadPhase.Validate();
                                    }
                                }
                            });
                            const __exports = __callInstance432.exports;
                            return __exports.data();
                        })();
                    };
                    h.prototype.GetProxyCount = function () {
                        return this.m_contactManager.m_broadPhase.GetProxyCount();
                    };
                    h.prototype.CreateBody = function (a) {
                        if (this.IsLocked() == true)
                            return null;
                        a = new k(a, this);
                        a.m_prev = null;
                        (() => {
                            const __ifInstance278 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_bodyList.m_prev = a;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance278.exports;
                            return __exports.data((a.m_next = this.m_bodyList) ? 1 : 0);
                        })();
                        this.m_bodyList = a;
                        ++this.m_bodyCount;
                        return a;
                    };
                    h.prototype.DestroyBody = function (a) {
                        (() => {
                            const __ifInstance279 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            (() => {
                                                var c = a.m_jointList;
                                                const __forInstance67 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return c ? 1 : 0;
                                                        },
                                                        update: () => {
                                                        },
                                                        body: () => {
                                                            {
                                                                var g = c;
                                                                c = c.next;
                                                                this.m_destructionListener && this.m_destructionListener.SayGoodbyeJoint(g.joint);
                                                                (() => {
                                                                    const __callInstance431 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                this.DestroyJoint(g.joint);
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance431.exports;
                                                                    return __exports.data();
                                                                })();
                                                            }
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance67.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                c = a.m_controllerList;
                                                const __forInstance68 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return c ? 1 : 0;
                                                        },
                                                        update: () => {
                                                        },
                                                        body: () => {
                                                            {
                                                                g = c;
                                                                c = c.nextController;
                                                                (() => {
                                                                    const __callInstance430 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                g.controller.RemoveBody(a);
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance430.exports;
                                                                    return __exports.data();
                                                                })();
                                                            }
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance68.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                c = a.m_contactList;
                                                const __forInstance69 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return c ? 1 : 0;
                                                        },
                                                        update: () => {
                                                        },
                                                        body: () => {
                                                            {
                                                                g = c;
                                                                c = c.next;
                                                                (() => {
                                                                    const __callInstance429 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                this.m_contactManager.Destroy(g.contact);
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance429.exports;
                                                                    return __exports.data();
                                                                })();
                                                            }
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance69.exports;
                                                return __exports.data();
                                            })();
                                            a.m_contactList = null;
                                            (() => {
                                                c = a.m_fixtureList;
                                                const __forInstance70 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return c ? 1 : 0;
                                                        },
                                                        update: () => {
                                                        },
                                                        body: () => {
                                                            {
                                                                g = c;
                                                                c = c.m_next;
                                                                this.m_destructionListener && this.m_destructionListener.SayGoodbyeFixture(g);
                                                                (() => {
                                                                    const __callInstance428 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                g.DestroyProxy(this.m_contactManager.m_broadPhase);
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance428.exports;
                                                                    return __exports.data();
                                                                })();
                                                                (() => {
                                                                    const __callInstance427 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                g.Destroy();
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance427.exports;
                                                                    return __exports.data();
                                                                })();
                                                            }
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance70.exports;
                                                return __exports.data();
                                            })();
                                            a.m_fixtureList = null;
                                            a.m_fixtureCount = 0;
                                            (() => {
                                                const __ifInstance280 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            a.m_prev.m_next = a.m_next;
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance280.exports;
                                                return __exports.data(a.m_prev ? 1 : 0);
                                            })();
                                            (() => {
                                                const __ifInstance281 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            a.m_next.m_prev = a.m_prev;
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance281.exports;
                                                return __exports.data(a.m_next ? 1 : 0);
                                            })();
                                            (() => {
                                                const __ifInstance282 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            this.m_bodyList = a.m_next;
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance282.exports;
                                                return __exports.data(a == this.m_bodyList ? 1 : 0);
                                            })();
                                            --this.m_bodyCount;
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance279.exports;
                            return __exports.data(this.IsLocked() != true ? 1 : 0);
                        })();
                    };
                    h.prototype.CreateJoint = function (a) {
                        var c = q.Create(a, null);
                        c.m_prev = null;
                        (() => {
                            const __ifInstance283 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_jointList.m_prev = c;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance283.exports;
                            return __exports.data((c.m_next = this.m_jointList) ? 1 : 0);
                        })();
                        this.m_jointList = c;
                        ++this.m_jointCount;
                        c.m_edgeA.joint = c;
                        c.m_edgeA.other = c.m_bodyB;
                        c.m_edgeA.prev = null;
                        (() => {
                            const __ifInstance284 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        c.m_bodyA.m_jointList.prev = c.m_edgeA;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance284.exports;
                            return __exports.data((c.m_edgeA.next = c.m_bodyA.m_jointList) ? 1 : 0);
                        })();
                        c.m_bodyA.m_jointList = c.m_edgeA;
                        c.m_edgeB.joint = c;
                        c.m_edgeB.other = c.m_bodyA;
                        c.m_edgeB.prev = null;
                        (() => {
                            const __ifInstance285 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        c.m_bodyB.m_jointList.prev = c.m_edgeB;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance285.exports;
                            return __exports.data((c.m_edgeB.next = c.m_bodyB.m_jointList) ? 1 : 0);
                        })();
                        c.m_bodyB.m_jointList = c.m_edgeB;
                        var g = a.bodyA, b = a.bodyB;
                        (() => {
                            const __ifInstance286 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        for (a = b.GetContactList(); a;) {
                                            a.other == g && a.contact.FlagForFiltering();
                                            a = a.next;
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance286.exports;
                            return __exports.data(a.collideConnected == false ? 1 : 0);
                        })();
                        return c;
                    };
                    h.prototype.DestroyJoint = function (a) {
                        var c = a.m_collideConnected;
                        (() => {
                            const __ifInstance287 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a.m_prev.m_next = a.m_next;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance287.exports;
                            return __exports.data(a.m_prev ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance288 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a.m_next.m_prev = a.m_prev;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance288.exports;
                            return __exports.data(a.m_next ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance289 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_jointList = a.m_next;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance289.exports;
                            return __exports.data(a == this.m_jointList ? 1 : 0);
                        })();
                        var g = a.m_bodyA, b = a.m_bodyB;
                        (() => {
                            const __callInstance426 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        g.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance426.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance425 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        b.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance425.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __ifInstance290 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a.m_edgeA.prev.next = a.m_edgeA.next;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance290.exports;
                            return __exports.data(a.m_edgeA.prev ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance291 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a.m_edgeA.next.prev = a.m_edgeA.prev;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance291.exports;
                            return __exports.data(a.m_edgeA.next ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance292 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        g.m_jointList = a.m_edgeA.next;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance292.exports;
                            return __exports.data(a.m_edgeA == g.m_jointList ? 1 : 0);
                        })();
                        a.m_edgeA.prev = null;
                        a.m_edgeA.next = null;
                        (() => {
                            const __ifInstance293 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a.m_edgeB.prev.next = a.m_edgeB.next;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance293.exports;
                            return __exports.data(a.m_edgeB.prev ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance294 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a.m_edgeB.next.prev = a.m_edgeB.prev;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance294.exports;
                            return __exports.data(a.m_edgeB.next ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance295 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        b.m_jointList = a.m_edgeB.next;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance295.exports;
                            return __exports.data(a.m_edgeB == b.m_jointList ? 1 : 0);
                        })();
                        a.m_edgeB.prev = null;
                        a.m_edgeB.next = null;
                        (() => {
                            const __callInstance424 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        q.Destroy(a, null);
                                    }
                                }
                            });
                            const __exports = __callInstance424.exports;
                            return __exports.data();
                        })();
                        --this.m_jointCount;
                        (() => {
                            const __ifInstance296 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        for (a = b.GetContactList(); a;) {
                                            a.other == g && a.contact.FlagForFiltering();
                                            a = a.next;
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance296.exports;
                            return __exports.data(c == false ? 1 : 0);
                        })();
                    };
                    h.prototype.AddController = function (a) {
                        a.m_next = this.m_controllerList;
                        a.m_prev = null;
                        this.m_controllerList = a;
                        a.m_world = this;
                        this.m_controllerCount++;
                        return a;
                    };
                    h.prototype.RemoveController = function (a) {
                        (() => {
                            const __ifInstance297 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a.m_prev.m_next = a.m_next;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance297.exports;
                            return __exports.data(a.m_prev ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance298 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a.m_next.m_prev = a.m_prev;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance298.exports;
                            return __exports.data(a.m_next ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance299 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_controllerList = a.m_next;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance299.exports;
                            return __exports.data(this.m_controllerList == a ? 1 : 0);
                        })();
                        this.m_controllerCount--;
                    };
                    h.prototype.CreateController = function (a) {
                        if (a.m_world != this)
                            throw Error(lS(0, 27));
                        a.m_next = this.m_controllerList;
                        a.m_prev = null;
                        (() => {
                            const __ifInstance300 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_controllerList.m_prev = a;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance300.exports;
                            return __exports.data(this.m_controllerList ? 1 : 0);
                        })();
                        this.m_controllerList = a;
                        ++this.m_controllerCount;
                        a.m_world = this;
                        return a;
                    };
                    h.prototype.DestroyController = function (a) {
                        (() => {
                            const __callInstance423 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        a.Clear();
                                    }
                                }
                            });
                            const __exports = __callInstance423.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __ifInstance301 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a.m_next.m_prev = a.m_prev;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance301.exports;
                            return __exports.data(a.m_next ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance302 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a.m_prev.m_next = a.m_next;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance302.exports;
                            return __exports.data(a.m_prev ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance303 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_controllerList = a.m_next;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance303.exports;
                            return __exports.data(a == this.m_controllerList ? 1 : 0);
                        })();
                        --this.m_controllerCount;
                    };
                    h.prototype.SetWarmStarting = function (a) {
                        h.m_warmStarting = a;
                    };
                    h.prototype.SetContinuousPhysics = function (a) {
                        h.m_continuousPhysics = a;
                    };
                    h.prototype.GetBodyCount = function () {
                        return this.m_bodyCount;
                    };
                    h.prototype.GetJointCount = function () {
                        return this.m_jointCount;
                    };
                    h.prototype.GetContactCount = function () {
                        return this.m_contactCount;
                    };
                    h.prototype.SetGravity = function (a) {
                        this.m_gravity = a;
                    };
                    h.prototype.GetGravity = function () {
                        return this.m_gravity;
                    };
                    h.prototype.GetGroundBody = function () {
                        return this.m_groundBody;
                    };
                    h.prototype.Step = function (a, c, g) {
                        (() => {
                            const __ifInstance304 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        a = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance304.exports;
                            return __exports.data(a === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance305 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        c = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance305.exports;
                            return __exports.data(c === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance306 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        g = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance306.exports;
                            return __exports.data(g === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance307 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            (() => {
                                                const __callInstance422 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_contactManager.FindNewContacts();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance422.exports;
                                                return __exports.data();
                                            })();
                                            this.m_flags &= ~h.e_newFixture;
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance307.exports;
                            return __exports.data(this.m_flags & h.e_newFixture ? 1 : 0);
                        })();
                        this.m_flags |= h.e_locked;
                        var b = h.s_timestep2;
                        b.dt = a;
                        b.velocityIterations = c;
                        b.positionIterations = g;
                        b.inv_dt = a > 0 ? 1 / a : 0;
                        b.dtRatio = this.m_inv_dt0 * a;
                        b.warmStarting = h.m_warmStarting;
                        (() => {
                            const __callInstance421 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_contactManager.Collide();
                                    }
                                }
                            });
                            const __exports = __callInstance421.exports;
                            return __exports.data();
                        })();
                        b.dt > 0 && this.Solve(b);
                        h.m_continuousPhysics && b.dt > 0 && this.SolveTOI(b);
                        (() => {
                            const __ifInstance308 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_inv_dt0 = b.inv_dt;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance308.exports;
                            return __exports.data(b.dt > 0 ? 1 : 0);
                        })();
                        this.m_flags &= ~h.e_locked;
                    };
                    h.prototype.ClearForces = function () {
                        (() => {
                            var a = this.m_bodyList;
                            const __forInstance73 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return a ? 1 : 0;
                                    },
                                    update: () => {
                                        a = a.m_next;
                                    },
                                    body: () => {
                                        {
                                            (() => {
                                                const __callInstance420 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            a.m_force.SetZero();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance420.exports;
                                                return __exports.data();
                                            })();
                                            a.m_torque = 0;
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance73.exports;
                            return __exports.data();
                        })();
                    };
                    h.prototype.DrawDebugData = function () {
                        (() => {
                            const __ifInstance309 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            (() => {
                                                const __callInstance419 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_debugDraw.m_sprite.graphics.clear();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance419.exports;
                                                return __exports.data();
                                            })();
                                            var a = this.m_debugDraw.GetFlags(), c, g, b;
                                            new y();
                                            new y();
                                            new y();
                                            var e;
                                            new U();
                                            new U();
                                            e = [
                                                new y(),
                                                new y(),
                                                new y(),
                                                new y()
                                            ];
                                            var f = new w(0, 0, 0);
                                            (() => {
                                                const __ifInstance310 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            for (c = this.m_bodyList; c; c = c.m_next) {
                                                                e = c.m_xf;
                                                                (() => {
                                                                    g = c.GetFixtureList();
                                                                    const __forInstance75 = new WebAssembly.Instance(__forWasmModule, {
                                                                        env: {
                                                                            test: () => {
                                                                                return g ? 1 : 0;
                                                                            },
                                                                            update: () => {
                                                                                g = g.m_next;
                                                                            },
                                                                            body: () => {
                                                                                {
                                                                                    b = g.GetShape();
                                                                                    (() => {
                                                                                        const __ifInstance311 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                            env: {
                                                                                                impFunc1: () => {
                                                                                                    (() => {
                                                                                                        const __callInstance418 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                            env: {
                                                                                                                impFunc: () => {
                                                                                                                    f.Set(0.5, 0.5, 0.3);
                                                                                                                }
                                                                                                            }
                                                                                                        });
                                                                                                        const __exports = __callInstance418.exports;
                                                                                                        return __exports.data();
                                                                                                    })();
                                                                                                },
                                                                                                impFunc2: () => {
                                                                                                    (() => {
                                                                                                        const __ifInstance312 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                            env: {
                                                                                                                impFunc1: () => {
                                                                                                                    (() => {
                                                                                                                        const __callInstance417 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                            env: {
                                                                                                                                impFunc: () => {
                                                                                                                                    f.Set(0.5, 0.9, 0.5);
                                                                                                                                }
                                                                                                                            }
                                                                                                                        });
                                                                                                                        const __exports = __callInstance417.exports;
                                                                                                                        return __exports.data();
                                                                                                                    })();
                                                                                                                },
                                                                                                                impFunc2: () => {
                                                                                                                    (() => {
                                                                                                                        const __ifInstance313 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                            env: {
                                                                                                                                impFunc1: () => {
                                                                                                                                    (() => {
                                                                                                                                        const __callInstance416 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                                            env: {
                                                                                                                                                impFunc: () => {
                                                                                                                                                    f.Set(0.5, 0.5, 0.9);
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        });
                                                                                                                                        const __exports = __callInstance416.exports;
                                                                                                                                        return __exports.data();
                                                                                                                                    })();
                                                                                                                                },
                                                                                                                                impFunc2: () => {
                                                                                                                                    c.IsAwake() == false ? f.Set(0.6, 0.6, 0.6) : f.Set(0.9, 0.7, 0.7);
                                                                                                                                }
                                                                                                                            }
                                                                                                                        });
                                                                                                                        const __exports = __ifInstance313.exports;
                                                                                                                        return __exports.data(c.GetType() == k.b2_kinematicBody ? 1 : 0);
                                                                                                                    })();
                                                                                                                }
                                                                                                            }
                                                                                                        });
                                                                                                        const __exports = __ifInstance312.exports;
                                                                                                        return __exports.data(c.GetType() == k.b2_staticBody ? 1 : 0);
                                                                                                    })();
                                                                                                }
                                                                                            }
                                                                                        });
                                                                                        const __exports = __ifInstance311.exports;
                                                                                        return __exports.data(c.IsActive() == false ? 1 : 0);
                                                                                    })();
                                                                                    (() => {
                                                                                        const __callInstance415 = new WebAssembly.Instance(__callWasmModule, {
                                                                                            env: {
                                                                                                impFunc: () => {
                                                                                                    this.DrawShape(b, e, f);
                                                                                                }
                                                                                            }
                                                                                        });
                                                                                        const __exports = __callInstance415.exports;
                                                                                        return __exports.data();
                                                                                    })();
                                                                                }
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __forInstance75.exports;
                                                                    return __exports.data();
                                                                })();
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance310.exports;
                                                return __exports.data(a & E.e_shapeBit ? 1 : 0);
                                            })();
                                            (() => {
                                                const __ifInstance314 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            for (c = this.m_jointList; c; c = c.m_next)
                                                                (() => {
                                                                    const __callInstance414 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                this.DrawJoint(c);
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance414.exports;
                                                                    return __exports.data();
                                                                })();
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance314.exports;
                                                return __exports.data(a & E.e_jointBit ? 1 : 0);
                                            })();
                                            (() => {
                                                const __ifInstance315 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            for (c = this.m_controllerList; c; c = c.m_next)
                                                                (() => {
                                                                    const __callInstance413 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                c.Draw(this.m_debugDraw);
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance413.exports;
                                                                    return __exports.data();
                                                                })();
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance315.exports;
                                                return __exports.data(a & E.e_controllerBit ? 1 : 0);
                                            })();
                                            (() => {
                                                const __ifInstance316 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                (() => {
                                                                    const __callInstance412 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                f.Set(0.3, 0.9, 0.9);
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance412.exports;
                                                                    return __exports.data();
                                                                })();
                                                                (() => {
                                                                    c = this.m_contactManager.m_contactList;
                                                                    const __forInstance78 = new WebAssembly.Instance(__forWasmModule, {
                                                                        env: {
                                                                            test: () => {
                                                                                return c ? 1 : 0;
                                                                            },
                                                                            update: () => {
                                                                                c = c.GetNext();
                                                                            },
                                                                            body: () => {
                                                                                {
                                                                                    b = c.GetFixtureA();
                                                                                    g = c.GetFixtureB();
                                                                                    b = b.GetAABB().GetCenter();
                                                                                    g = g.GetAABB().GetCenter();
                                                                                    (() => {
                                                                                        const __callInstance411 = new WebAssembly.Instance(__callWasmModule, {
                                                                                            env: {
                                                                                                impFunc: () => {
                                                                                                    this.m_debugDraw.DrawSegment(b, g, f);
                                                                                                }
                                                                                            }
                                                                                        });
                                                                                        const __exports = __callInstance411.exports;
                                                                                        return __exports.data();
                                                                                    })();
                                                                                }
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __forInstance78.exports;
                                                                    return __exports.data();
                                                                })();
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance316.exports;
                                                return __exports.data(a & E.e_pairBit ? 1 : 0);
                                            })();
                                            (() => {
                                                const __ifInstance317 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                b = this.m_contactManager.m_broadPhase;
                                                                e = [
                                                                    new y(),
                                                                    new y(),
                                                                    new y(),
                                                                    new y()
                                                                ];
                                                                (() => {
                                                                    c = this.m_bodyList;
                                                                    const __forInstance79 = new WebAssembly.Instance(__forWasmModule, {
                                                                        env: {
                                                                            test: () => {
                                                                                return c ? 1 : 0;
                                                                            },
                                                                            update: () => {
                                                                                c = c.GetNext();
                                                                            },
                                                                            body: () => {
                                                                                (() => {
                                                                                    const __ifInstance318 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                        env: {
                                                                                            impFunc1: () => {
                                                                                                for (g = c.GetFixtureList(); g; g = g.GetNext()) {
                                                                                                    var m = b.GetFatAABB(g.m_proxy);
                                                                                                    (() => {
                                                                                                        const __callInstance410 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                            env: {
                                                                                                                impFunc: () => {
                                                                                                                    e[0].Set(m.lowerBound.x, m.lowerBound.y);
                                                                                                                }
                                                                                                            }
                                                                                                        });
                                                                                                        const __exports = __callInstance410.exports;
                                                                                                        return __exports.data();
                                                                                                    })();
                                                                                                    (() => {
                                                                                                        const __callInstance409 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                            env: {
                                                                                                                impFunc: () => {
                                                                                                                    e[1].Set(m.upperBound.x, m.lowerBound.y);
                                                                                                                }
                                                                                                            }
                                                                                                        });
                                                                                                        const __exports = __callInstance409.exports;
                                                                                                        return __exports.data();
                                                                                                    })();
                                                                                                    (() => {
                                                                                                        const __callInstance408 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                            env: {
                                                                                                                impFunc: () => {
                                                                                                                    e[2].Set(m.upperBound.x, m.upperBound.y);
                                                                                                                }
                                                                                                            }
                                                                                                        });
                                                                                                        const __exports = __callInstance408.exports;
                                                                                                        return __exports.data();
                                                                                                    })();
                                                                                                    (() => {
                                                                                                        const __callInstance407 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                            env: {
                                                                                                                impFunc: () => {
                                                                                                                    e[3].Set(m.lowerBound.x, m.upperBound.y);
                                                                                                                }
                                                                                                            }
                                                                                                        });
                                                                                                        const __exports = __callInstance407.exports;
                                                                                                        return __exports.data();
                                                                                                    })();
                                                                                                    (() => {
                                                                                                        const __callInstance406 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                            env: {
                                                                                                                impFunc: () => {
                                                                                                                    this.m_debugDraw.DrawPolygon(e, 4, f);
                                                                                                                }
                                                                                                            }
                                                                                                        });
                                                                                                        const __exports = __callInstance406.exports;
                                                                                                        return __exports.data();
                                                                                                    })();
                                                                                                }
                                                                                            },
                                                                                            impFunc2: () => {
                                                                                            }
                                                                                        }
                                                                                    });
                                                                                    const __exports = __ifInstance318.exports;
                                                                                    return __exports.data(c.IsActive() != false ? 1 : 0);
                                                                                })();
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __forInstance79.exports;
                                                                    return __exports.data();
                                                                })();
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance317.exports;
                                                return __exports.data(a & E.e_aabbBit ? 1 : 0);
                                            })();
                                            (() => {
                                                const __ifInstance319 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            for (c = this.m_bodyList; c; c = c.m_next) {
                                                                e = h.s_xf;
                                                                e.R = c.m_xf.R;
                                                                e.position = c.GetWorldCenter();
                                                                (() => {
                                                                    const __callInstance405 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                this.m_debugDraw.DrawTransform(e);
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance405.exports;
                                                                    return __exports.data();
                                                                })();
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance319.exports;
                                                return __exports.data(a & E.e_centerOfMassBit ? 1 : 0);
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance309.exports;
                            return __exports.data(this.m_debugDraw != null ? 1 : 0);
                        })();
                    };
                    h.prototype.QueryAABB = function (a, c) {
                        var g = this.m_contactManager.m_broadPhase;
                        (() => {
                            const __callInstance404 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        g.Query(function (b) {
                                            return a(g.GetUserData(b));
                                        }, c);
                                    }
                                }
                            });
                            const __exports = __callInstance404.exports;
                            return __exports.data();
                        })();
                    };
                    h.prototype.QueryShape = function (a, c, g) {
                        (() => {
                            const __ifInstance320 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        g = null;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance320.exports;
                            return __exports.data(g === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance321 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            g = new K();
                                            (() => {
                                                const __callInstance403 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            g.SetIdentity();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance403.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance321.exports;
                            return __exports.data(g == null ? 1 : 0);
                        })();
                        var b = this.m_contactManager.m_broadPhase, e = new U();
                        (() => {
                            const __callInstance402 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        c.ComputeAABB(e, g);
                                    }
                                }
                            });
                            const __exports = __callInstance402.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance401 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        b.Query(function (f) {
                                            f = b.GetUserData(f) instanceof S ? b.GetUserData(f) : null;
                                            if (Y.TestOverlap(c, g, f.GetShape(), f.GetBody().GetTransform()))
                                                return a(f);
                                            return true;
                                        }, e);
                                    }
                                }
                            });
                            const __exports = __callInstance401.exports;
                            return __exports.data();
                        })();
                    };
                    h.prototype.QueryPoint = function (a, c) {
                        var g = this.m_contactManager.m_broadPhase, b = new U();
                        (() => {
                            const __callInstance400 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        b.lowerBound.Set(c.x - A.b2_linearSlop, c.y - A.b2_linearSlop);
                                    }
                                }
                            });
                            const __exports = __callInstance400.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance399 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        b.upperBound.Set(c.x + A.b2_linearSlop, c.y + A.b2_linearSlop);
                                    }
                                }
                            });
                            const __exports = __callInstance399.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance398 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        g.Query(function (e) {
                                            e = g.GetUserData(e) instanceof S ? g.GetUserData(e) : null;
                                            if (e.TestPoint(c))
                                                return a(e);
                                            return true;
                                        }, b);
                                    }
                                }
                            });
                            const __exports = __callInstance398.exports;
                            return __exports.data();
                        })();
                    };
                    h.prototype.RayCast = function (a, c, g) {
                        var b = this.m_contactManager.m_broadPhase, e = new V(), f = new Q(c, g);
                        (() => {
                            const __callInstance397 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        b.RayCast(function (m, r) {
                                            var s = b.GetUserData(r);
                                            s = s instanceof S ? s : null;
                                            if (s.RayCast(e, m)) {
                                                var v = e.fraction, t = new y((1 - v) * c.x + v * g.x, (1 - v) * c.y + v * g.y);
                                                return a(s, t, e.normal, v);
                                            }
                                            return m.maxFraction;
                                        }, f);
                                    }
                                }
                            });
                            const __exports = __callInstance397.exports;
                            return __exports.data();
                        })();
                    };
                    h.prototype.RayCastOne = function (a, c) {
                        var g;
                        (() => {
                            const __callInstance396 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.RayCast(function (b, e, f, m) {
                                            (() => {
                                                const __ifInstance322 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            m = 0;
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance322.exports;
                                                return __exports.data(m === undefined ? 1 : 0);
                                            })();
                                            g = b;
                                            return m;
                                        }, a, c);
                                    }
                                }
                            });
                            const __exports = __callInstance396.exports;
                            return __exports.data();
                        })();
                        return g;
                    };
                    h.prototype.RayCastAll = function (a, c) {
                        var g = new Vector();
                        (() => {
                            const __callInstance395 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.RayCast(function (b) {
                                            g[g.length] = b;
                                            return 1;
                                        }, a, c);
                                    }
                                }
                            });
                            const __exports = __callInstance395.exports;
                            return __exports.data();
                        })();
                        return g;
                    };
                    h.prototype.GetBodyList = function () {
                        return this.m_bodyList;
                    };
                    h.prototype.GetJointList = function () {
                        return this.m_jointList;
                    };
                    h.prototype.GetContactList = function () {
                        return this.m_contactList;
                    };
                    h.prototype.IsLocked = function () {
                        return (this.m_flags & h.e_locked) > 0;
                    };
                    h.prototype.Solve = function (a) {
                        (() => {
                            var c, g = this.m_controllerList;
                            const __forInstance82 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return g ? 1 : 0;
                                    },
                                    update: () => {
                                        g = g.m_next;
                                    },
                                    body: () => {
                                        (() => {
                                            const __callInstance394 = new WebAssembly.Instance(__callWasmModule, {
                                                env: {
                                                    impFunc: () => {
                                                        g.Step(a);
                                                    }
                                                }
                                            });
                                            const __exports = __callInstance394.exports;
                                            return __exports.data();
                                        })();
                                    }
                                }
                            });
                            const __exports = __forInstance82.exports;
                            return __exports.data();
                        })();
                        g = this.m_island;
                        (() => {
                            const __callInstance393 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        g.Initialize(this.m_bodyCount, this.m_contactCount, this.m_jointCount, null, this.m_contactManager.m_contactListener, this.m_contactSolver);
                                    }
                                }
                            });
                            const __exports = __callInstance393.exports;
                            return __exports.data();
                        })();
                        (() => {
                            c = this.m_bodyList;
                            const __forInstance83 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return c ? 1 : 0;
                                    },
                                    update: () => {
                                        c = c.m_next;
                                    },
                                    body: () => {
                                        c.m_flags &= ~k.e_islandFlag;
                                    }
                                }
                            });
                            const __exports = __forInstance83.exports;
                            return __exports.data();
                        })();
                        (() => {
                            var b = this.m_contactList;
                            const __forInstance84 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return b ? 1 : 0;
                                    },
                                    update: () => {
                                        b = b.m_next;
                                    },
                                    body: () => {
                                        b.m_flags &= ~l.e_islandFlag;
                                    }
                                }
                            });
                            const __exports = __forInstance84.exports;
                            return __exports.data();
                        })();
                        (() => {
                            b = this.m_jointList;
                            const __forInstance85 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return b ? 1 : 0;
                                    },
                                    update: () => {
                                        b = b.m_next;
                                    },
                                    body: () => {
                                        b.m_islandFlag = false;
                                    }
                                }
                            });
                            const __exports = __forInstance85.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance392 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        parseInt(this.m_bodyCount);
                                    }
                                }
                            });
                            const __exports = __callInstance392.exports;
                            return __exports.data();
                        })();
                        b = this.s_stack;
                        (() => {
                            var e = this.m_bodyList;
                            const __forInstance86 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return e ? 1 : 0;
                                    },
                                    update: () => {
                                        e = e.m_next;
                                    },
                                    body: () => {
                                        (() => {
                                            const __ifInstance323 = new WebAssembly.Instance(__ifWasmModule, {
                                                env: {
                                                    impFunc1: () => {
                                                        (() => {
                                                            const __ifInstance324 = new WebAssembly.Instance(__ifWasmModule, {
                                                                env: {
                                                                    impFunc1: () => {
                                                                        (() => {
                                                                            const __ifInstance325 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                env: {
                                                                                    impFunc1: () => {
                                                                                        {
                                                                                            (() => {
                                                                                                const __callInstance391 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                    env: {
                                                                                                        impFunc: () => {
                                                                                                            g.Clear();
                                                                                                        }
                                                                                                    }
                                                                                                });
                                                                                                const __exports = __callInstance391.exports;
                                                                                                return __exports.data();
                                                                                            })();
                                                                                            var f = 0;
                                                                                            b[f++] = e;
                                                                                            (() => {
                                                                                                e.m_flags |= k.e_islandFlag;
                                                                                                const __forInstance87 = new WebAssembly.Instance(__forWasmModule, {
                                                                                                    env: {
                                                                                                        test: () => {
                                                                                                            return f > 0 ? 1 : 0;
                                                                                                        },
                                                                                                        update: () => {
                                                                                                        },
                                                                                                        body: () => {
                                                                                                            {
                                                                                                                c = b[--f];
                                                                                                                (() => {
                                                                                                                    const __callInstance390 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                        env: {
                                                                                                                            impFunc: () => {
                                                                                                                                g.AddBody(c);
                                                                                                                            }
                                                                                                                        }
                                                                                                                    });
                                                                                                                    const __exports = __callInstance390.exports;
                                                                                                                    return __exports.data();
                                                                                                                })();
                                                                                                                c.IsAwake() == false && c.SetAwake(true);
                                                                                                                (() => {
                                                                                                                    const __ifInstance326 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                        env: {
                                                                                                                            impFunc1: () => {
                                                                                                                                {
                                                                                                                                    (() => {
                                                                                                                                        var m, r = c.m_contactList;
                                                                                                                                        const __forInstance88 = new WebAssembly.Instance(__forWasmModule, {
                                                                                                                                            env: {
                                                                                                                                                test: () => {
                                                                                                                                                    return r ? 1 : 0;
                                                                                                                                                },
                                                                                                                                                update: () => {
                                                                                                                                                    r = r.next;
                                                                                                                                                },
                                                                                                                                                body: () => {
                                                                                                                                                    (() => {
                                                                                                                                                        const __ifInstance327 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                                                            env: {
                                                                                                                                                                impFunc1: () => {
                                                                                                                                                                    (() => {
                                                                                                                                                                        const __ifInstance328 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                                                                            env: {
                                                                                                                                                                                impFunc1: () => {
                                                                                                                                                                                    {
                                                                                                                                                                                        (() => {
                                                                                                                                                                                            const __callInstance389 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                                                                                                env: {
                                                                                                                                                                                                    impFunc: () => {
                                                                                                                                                                                                        g.AddContact(r.contact);
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                            });
                                                                                                                                                                                            const __exports = __callInstance389.exports;
                                                                                                                                                                                            return __exports.data();
                                                                                                                                                                                        })();
                                                                                                                                                                                        r.contact.m_flags |= l.e_islandFlag;
                                                                                                                                                                                        m = r.other;
                                                                                                                                                                                        (() => {
                                                                                                                                                                                            const __ifInstance329 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                                                                                                env: {
                                                                                                                                                                                                    impFunc1: () => {
                                                                                                                                                                                                        {
                                                                                                                                                                                                            b[f++] = m;
                                                                                                                                                                                                            m.m_flags |= k.e_islandFlag;
                                                                                                                                                                                                        }
                                                                                                                                                                                                    },
                                                                                                                                                                                                    impFunc2: () => {
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                            });
                                                                                                                                                                                            const __exports = __ifInstance329.exports;
                                                                                                                                                                                            return __exports.data(!(m.m_flags & k.e_islandFlag) ? 1 : 0);
                                                                                                                                                                                        })();
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                impFunc2: () => {
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        });
                                                                                                                                                                        const __exports = __ifInstance328.exports;
                                                                                                                                                                        return __exports.data(!(r.contact.IsSensor() == true || r.contact.IsEnabled() == false || r.contact.IsTouching() == false) ? 1 : 0);
                                                                                                                                                                    })();
                                                                                                                                                                },
                                                                                                                                                                impFunc2: () => {
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        });
                                                                                                                                                        const __exports = __ifInstance327.exports;
                                                                                                                                                        return __exports.data(!(r.contact.m_flags & l.e_islandFlag) ? 1 : 0);
                                                                                                                                                    })();
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        });
                                                                                                                                        const __exports = __forInstance88.exports;
                                                                                                                                        return __exports.data();
                                                                                                                                    })();
                                                                                                                                    (() => {
                                                                                                                                        c = c.m_jointList;
                                                                                                                                        const __forInstance89 = new WebAssembly.Instance(__forWasmModule, {
                                                                                                                                            env: {
                                                                                                                                                test: () => {
                                                                                                                                                    return c ? 1 : 0;
                                                                                                                                                },
                                                                                                                                                update: () => {
                                                                                                                                                    c = c.next;
                                                                                                                                                },
                                                                                                                                                body: () => {
                                                                                                                                                    (() => {
                                                                                                                                                        const __ifInstance330 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                                                            env: {
                                                                                                                                                                impFunc1: () => {
                                                                                                                                                                    {
                                                                                                                                                                        m = c.other;
                                                                                                                                                                        (() => {
                                                                                                                                                                            const __ifInstance331 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                                                                                env: {
                                                                                                                                                                                    impFunc1: () => {
                                                                                                                                                                                        {
                                                                                                                                                                                            (() => {
                                                                                                                                                                                                const __callInstance388 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                                                                                                    env: {
                                                                                                                                                                                                        impFunc: () => {
                                                                                                                                                                                                            g.AddJoint(c.joint);
                                                                                                                                                                                                        }
                                                                                                                                                                                                    }
                                                                                                                                                                                                });
                                                                                                                                                                                                const __exports = __callInstance388.exports;
                                                                                                                                                                                                return __exports.data();
                                                                                                                                                                                            })();
                                                                                                                                                                                            c.joint.m_islandFlag = true;
                                                                                                                                                                                            (() => {
                                                                                                                                                                                                const __ifInstance332 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                                                                                                    env: {
                                                                                                                                                                                                        impFunc1: () => {
                                                                                                                                                                                                            {
                                                                                                                                                                                                                b[f++] = m;
                                                                                                                                                                                                                m.m_flags |= k.e_islandFlag;
                                                                                                                                                                                                            }
                                                                                                                                                                                                        },
                                                                                                                                                                                                        impFunc2: () => {
                                                                                                                                                                                                        }
                                                                                                                                                                                                    }
                                                                                                                                                                                                });
                                                                                                                                                                                                const __exports = __ifInstance332.exports;
                                                                                                                                                                                                return __exports.data(!(m.m_flags & k.e_islandFlag) ? 1 : 0);
                                                                                                                                                                                            })();
                                                                                                                                                                                        }
                                                                                                                                                                                    },
                                                                                                                                                                                    impFunc2: () => {
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            });
                                                                                                                                                                            const __exports = __ifInstance331.exports;
                                                                                                                                                                            return __exports.data(m.IsActive() != false ? 1 : 0);
                                                                                                                                                                        })();
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                impFunc2: () => {
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        });
                                                                                                                                                        const __exports = __ifInstance330.exports;
                                                                                                                                                        return __exports.data(c.joint.m_islandFlag != true ? 1 : 0);
                                                                                                                                                    })();
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        });
                                                                                                                                        const __exports = __forInstance89.exports;
                                                                                                                                        return __exports.data();
                                                                                                                                    })();
                                                                                                                                }
                                                                                                                            },
                                                                                                                            impFunc2: () => {
                                                                                                                            }
                                                                                                                        }
                                                                                                                    });
                                                                                                                    const __exports = __ifInstance326.exports;
                                                                                                                    return __exports.data(c.GetType() != k.b2_staticBody ? 1 : 0);
                                                                                                                })();
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                });
                                                                                                const __exports = __forInstance87.exports;
                                                                                                return __exports.data();
                                                                                            })();
                                                                                            (() => {
                                                                                                const __callInstance387 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                    env: {
                                                                                                        impFunc: () => {
                                                                                                            g.Solve(a, this.m_gravity, this.m_allowSleep);
                                                                                                        }
                                                                                                    }
                                                                                                });
                                                                                                const __exports = __callInstance387.exports;
                                                                                                return __exports.data();
                                                                                            })();
                                                                                            (() => {
                                                                                                f = 0;
                                                                                                const __forInstance90 = new WebAssembly.Instance(__forWasmModule, {
                                                                                                    env: {
                                                                                                        test: () => {
                                                                                                            return f < g.m_bodyCount ? 1 : 0;
                                                                                                        },
                                                                                                        update: () => {
                                                                                                            ++f;
                                                                                                        },
                                                                                                        body: () => {
                                                                                                            {
                                                                                                                c = g.m_bodies[f];
                                                                                                                (() => {
                                                                                                                    const __ifInstance333 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                        env: {
                                                                                                                            impFunc1: () => {
                                                                                                                                c.m_flags &= ~k.e_islandFlag;
                                                                                                                            },
                                                                                                                            impFunc2: () => {
                                                                                                                            }
                                                                                                                        }
                                                                                                                    });
                                                                                                                    const __exports = __ifInstance333.exports;
                                                                                                                    return __exports.data(c.GetType() == k.b2_staticBody ? 1 : 0);
                                                                                                                })();
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                });
                                                                                                const __exports = __forInstance90.exports;
                                                                                                return __exports.data();
                                                                                            })();
                                                                                        }
                                                                                    },
                                                                                    impFunc2: () => {
                                                                                    }
                                                                                }
                                                                            });
                                                                            const __exports = __ifInstance325.exports;
                                                                            return __exports.data(e.GetType() != k.b2_staticBody ? 1 : 0);
                                                                        })();
                                                                    },
                                                                    impFunc2: () => {
                                                                    }
                                                                }
                                                            });
                                                            const __exports = __ifInstance324.exports;
                                                            return __exports.data(!(e.IsAwake() == false || e.IsActive() == false) ? 1 : 0);
                                                        })();
                                                    },
                                                    impFunc2: () => {
                                                    }
                                                }
                                            });
                                            const __exports = __ifInstance323.exports;
                                            return __exports.data(!(e.m_flags & k.e_islandFlag) ? 1 : 0);
                                        })();
                                    }
                                }
                            });
                            const __exports = __forInstance86.exports;
                            return __exports.data();
                        })();
                        for (f = 0; f < b.length; ++f) {
                            if (!b[f])
                                break;
                            b[f] = null;
                        }
                        (() => {
                            c = this.m_bodyList;
                            const __forInstance91 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return c ? 1 : 0;
                                    },
                                    update: () => {
                                        c = c.m_next;
                                    },
                                    body: () => {
                                        c.IsAwake() == false || c.IsActive() == false || c.GetType() != k.b2_staticBody && c.SynchronizeFixtures();
                                    }
                                }
                            });
                            const __exports = __forInstance91.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance386 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_contactManager.FindNewContacts();
                                    }
                                }
                            });
                            const __exports = __callInstance386.exports;
                            return __exports.data();
                        })();
                    };
                    h.prototype.SolveTOI = function (a) {
                        var c, g, b, e = this.m_island;
                        (() => {
                            const __callInstance385 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        e.Initialize(this.m_bodyCount, A.b2_maxTOIContactsPerIsland, A.b2_maxTOIJointsPerIsland, null, this.m_contactManager.m_contactListener, this.m_contactSolver);
                                    }
                                }
                            });
                            const __exports = __callInstance385.exports;
                            return __exports.data();
                        })();
                        var f = h.s_queue;
                        (() => {
                            c = this.m_bodyList;
                            const __forInstance92 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return c ? 1 : 0;
                                    },
                                    update: () => {
                                        c = c.m_next;
                                    },
                                    body: () => {
                                        {
                                            c.m_flags &= ~k.e_islandFlag;
                                            c.m_sweep.t0 = 0;
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance92.exports;
                            return __exports.data();
                        })();
                        (() => {
                            b = this.m_contactList;
                            const __forInstance93 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return b ? 1 : 0;
                                    },
                                    update: () => {
                                        b = b.m_next;
                                    },
                                    body: () => {
                                        b.m_flags &= ~(l.e_toiFlag | l.e_islandFlag);
                                    }
                                }
                            });
                            const __exports = __forInstance93.exports;
                            return __exports.data();
                        })();
                        (() => {
                            b = this.m_jointList;
                            const __forInstance94 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return b ? 1 : 0;
                                    },
                                    update: () => {
                                        b = b.m_next;
                                    },
                                    body: () => {
                                        b.m_islandFlag = false;
                                    }
                                }
                            });
                            const __exports = __forInstance94.exports;
                            return __exports.data();
                        })();
                        for (;;) {
                            var m = null, r = 1;
                            for (b = this.m_contactList; b; b = b.m_next)
                                if (!(b.IsSensor() == true || b.IsEnabled() == false || b.IsContinuous() == false)) {
                                    c = 1;
                                    if (b.m_flags & l.e_toiFlag)
                                        c = b.m_toi;
                                    else {
                                        c = b.m_fixtureA;
                                        g = b.m_fixtureB;
                                        c = c.m_body;
                                        g = g.m_body;
                                        if ((c.GetType() != k.b2_dynamicBody || c.IsAwake() == false) && (g.GetType() != k.b2_dynamicBody || g.IsAwake() == false))
                                            continue;
                                        var s = c.m_sweep.t0;
                                        (() => {
                                            const __ifInstance334 = new WebAssembly.Instance(__ifWasmModule, {
                                                env: {
                                                    impFunc1: () => {
                                                        {
                                                            s = g.m_sweep.t0;
                                                            (() => {
                                                                const __callInstance384 = new WebAssembly.Instance(__callWasmModule, {
                                                                    env: {
                                                                        impFunc: () => {
                                                                            c.m_sweep.Advance(s);
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __callInstance384.exports;
                                                                return __exports.data();
                                                            })();
                                                        }
                                                    },
                                                    impFunc2: () => {
                                                        (() => {
                                                            const __ifInstance335 = new WebAssembly.Instance(__ifWasmModule, {
                                                                env: {
                                                                    impFunc1: () => {
                                                                        {
                                                                            s = c.m_sweep.t0;
                                                                            (() => {
                                                                                const __callInstance383 = new WebAssembly.Instance(__callWasmModule, {
                                                                                    env: {
                                                                                        impFunc: () => {
                                                                                            g.m_sweep.Advance(s);
                                                                                        }
                                                                                    }
                                                                                });
                                                                                const __exports = __callInstance383.exports;
                                                                                return __exports.data();
                                                                            })();
                                                                        }
                                                                    },
                                                                    impFunc2: () => {
                                                                    }
                                                                }
                                                            });
                                                            const __exports = __ifInstance335.exports;
                                                            return __exports.data(g.m_sweep.t0 < c.m_sweep.t0 ? 1 : 0);
                                                        })();
                                                    }
                                                }
                                            });
                                            const __exports = __ifInstance334.exports;
                                            return __exports.data(c.m_sweep.t0 < g.m_sweep.t0 ? 1 : 0);
                                        })();
                                        c = b.ComputeTOI(c.m_sweep, g.m_sweep);
                                        (() => {
                                            const __callInstance382 = new WebAssembly.Instance(__callWasmModule, {
                                                env: {
                                                    impFunc: () => {
                                                        A.b2Assert(0 <= c && c <= 1);
                                                    }
                                                }
                                            });
                                            const __exports = __callInstance382.exports;
                                            return __exports.data();
                                        })();
                                        (() => {
                                            const __ifInstance336 = new WebAssembly.Instance(__ifWasmModule, {
                                                env: {
                                                    impFunc1: () => {
                                                        {
                                                            c = (1 - c) * s + c;
                                                            (() => {
                                                                const __ifInstance337 = new WebAssembly.Instance(__ifWasmModule, {
                                                                    env: {
                                                                        impFunc1: () => {
                                                                            c = 1;
                                                                        },
                                                                        impFunc2: () => {
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __ifInstance337.exports;
                                                                return __exports.data(c > 1 ? 1 : 0);
                                                            })();
                                                        }
                                                    },
                                                    impFunc2: () => {
                                                    }
                                                }
                                            });
                                            const __exports = __ifInstance336.exports;
                                            return __exports.data(c > 0 && c < 1 ? 1 : 0);
                                        })();
                                        b.m_toi = c;
                                        b.m_flags |= l.e_toiFlag;
                                    }
                                    (() => {
                                        const __ifInstance338 = new WebAssembly.Instance(__ifWasmModule, {
                                            env: {
                                                impFunc1: () => {
                                                    {
                                                        m = b;
                                                        r = c;
                                                    }
                                                },
                                                impFunc2: () => {
                                                }
                                            }
                                        });
                                        const __exports = __ifInstance338.exports;
                                        return __exports.data(Number.MIN_VALUE < c && c < r ? 1 : 0);
                                    })();
                                }
                            if (m == null || 1 - 100 * Number.MIN_VALUE < r)
                                break;
                            c = m.m_fixtureA;
                            g = m.m_fixtureB;
                            c = c.m_body;
                            g = g.m_body;
                            (() => {
                                const __callInstance381 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            h.s_backupA.Set(c.m_sweep);
                                        }
                                    }
                                });
                                const __exports = __callInstance381.exports;
                                return __exports.data();
                            })();
                            (() => {
                                const __callInstance380 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            h.s_backupB.Set(g.m_sweep);
                                        }
                                    }
                                });
                                const __exports = __callInstance380.exports;
                                return __exports.data();
                            })();
                            (() => {
                                const __callInstance379 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            c.Advance(r);
                                        }
                                    }
                                });
                                const __exports = __callInstance379.exports;
                                return __exports.data();
                            })();
                            (() => {
                                const __callInstance378 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            g.Advance(r);
                                        }
                                    }
                                });
                                const __exports = __callInstance378.exports;
                                return __exports.data();
                            })();
                            (() => {
                                const __callInstance377 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            m.Update(this.m_contactManager.m_contactListener);
                                        }
                                    }
                                });
                                const __exports = __callInstance377.exports;
                                return __exports.data();
                            })();
                            m.m_flags &= ~l.e_toiFlag;
                            if (m.IsSensor() == true || m.IsEnabled() == false) {
                                (() => {
                                    const __callInstance376 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                c.m_sweep.Set(h.s_backupA);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance376.exports;
                                    return __exports.data();
                                })();
                                (() => {
                                    const __callInstance375 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                g.m_sweep.Set(h.s_backupB);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance375.exports;
                                    return __exports.data();
                                })();
                                (() => {
                                    const __callInstance374 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                c.SynchronizeTransform();
                                            }
                                        }
                                    });
                                    const __exports = __callInstance374.exports;
                                    return __exports.data();
                                })();
                                (() => {
                                    const __callInstance373 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                g.SynchronizeTransform();
                                            }
                                        }
                                    });
                                    const __exports = __callInstance373.exports;
                                    return __exports.data();
                                })();
                            } else if (m.IsTouching() != false) {
                                c = c;
                                (() => {
                                    const __ifInstance339 = new WebAssembly.Instance(__ifWasmModule, {
                                        env: {
                                            impFunc1: () => {
                                                c = g;
                                            },
                                            impFunc2: () => {
                                            }
                                        }
                                    });
                                    const __exports = __ifInstance339.exports;
                                    return __exports.data(c.GetType() != k.b2_dynamicBody ? 1 : 0);
                                })();
                                (() => {
                                    const __callInstance372 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                e.Clear();
                                            }
                                        }
                                    });
                                    const __exports = __callInstance372.exports;
                                    return __exports.data();
                                })();
                                m = b = 0;
                                f[b + m++] = c;
                                for (c.m_flags |= k.e_islandFlag; m > 0;) {
                                    c = f[b++];
                                    --m;
                                    (() => {
                                        const __callInstance371 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    e.AddBody(c);
                                                }
                                            }
                                        });
                                        const __exports = __callInstance371.exports;
                                        return __exports.data();
                                    })();
                                    c.IsAwake() == false && c.SetAwake(true);
                                    if (c.GetType() == k.b2_dynamicBody) {
                                        for (g = c.m_contactList; g; g = g.next) {
                                            if (e.m_contactCount == e.m_contactCapacity)
                                                break;
                                            (() => {
                                                const __ifInstance340 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            (() => {
                                                                const __ifInstance341 = new WebAssembly.Instance(__ifWasmModule, {
                                                                    env: {
                                                                        impFunc1: () => {
                                                                            {
                                                                                (() => {
                                                                                    const __callInstance370 = new WebAssembly.Instance(__callWasmModule, {
                                                                                        env: {
                                                                                            impFunc: () => {
                                                                                                e.AddContact(g.contact);
                                                                                            }
                                                                                        }
                                                                                    });
                                                                                    const __exports = __callInstance370.exports;
                                                                                    return __exports.data();
                                                                                })();
                                                                                g.contact.m_flags |= l.e_islandFlag;
                                                                                s = g.other;
                                                                                (() => {
                                                                                    const __ifInstance342 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                        env: {
                                                                                            impFunc1: () => {
                                                                                                {
                                                                                                    (() => {
                                                                                                        const __ifInstance343 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                            env: {
                                                                                                                impFunc1: () => {
                                                                                                                    {
                                                                                                                        (() => {
                                                                                                                            const __callInstance369 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                                env: {
                                                                                                                                    impFunc: () => {
                                                                                                                                        s.Advance(r);
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            });
                                                                                                                            const __exports = __callInstance369.exports;
                                                                                                                            return __exports.data();
                                                                                                                        })();
                                                                                                                        (() => {
                                                                                                                            const __callInstance368 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                                env: {
                                                                                                                                    impFunc: () => {
                                                                                                                                        s.SetAwake(true);
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            });
                                                                                                                            const __exports = __callInstance368.exports;
                                                                                                                            return __exports.data();
                                                                                                                        })();
                                                                                                                    }
                                                                                                                },
                                                                                                                impFunc2: () => {
                                                                                                                }
                                                                                                            }
                                                                                                        });
                                                                                                        const __exports = __ifInstance343.exports;
                                                                                                        return __exports.data(s.GetType() != k.b2_staticBody ? 1 : 0);
                                                                                                    })();
                                                                                                    f[b + m] = s;
                                                                                                    ++m;
                                                                                                    s.m_flags |= k.e_islandFlag;
                                                                                                }
                                                                                            },
                                                                                            impFunc2: () => {
                                                                                            }
                                                                                        }
                                                                                    });
                                                                                    const __exports = __ifInstance342.exports;
                                                                                    return __exports.data(!(s.m_flags & k.e_islandFlag) ? 1 : 0);
                                                                                })();
                                                                            }
                                                                        },
                                                                        impFunc2: () => {
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __ifInstance341.exports;
                                                                return __exports.data(!(g.contact.IsSensor() == true || g.contact.IsEnabled() == false || g.contact.IsTouching() == false) ? 1 : 0);
                                                            })();
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance340.exports;
                                                return __exports.data(!(g.contact.m_flags & l.e_islandFlag) ? 1 : 0);
                                            })();
                                        }
                                        (() => {
                                            c = c.m_jointList;
                                            const __forInstance95 = new WebAssembly.Instance(__forWasmModule, {
                                                env: {
                                                    test: () => {
                                                        return c ? 1 : 0;
                                                    },
                                                    update: () => {
                                                        c = c.next;
                                                    },
                                                    body: () => {
                                                        (() => {
                                                            const __ifInstance344 = new WebAssembly.Instance(__ifWasmModule, {
                                                                env: {
                                                                    impFunc1: () => {
                                                                        (() => {
                                                                            const __ifInstance345 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                env: {
                                                                                    impFunc1: () => {
                                                                                        {
                                                                                            s = c.other;
                                                                                            (() => {
                                                                                                const __ifInstance346 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                    env: {
                                                                                                        impFunc1: () => {
                                                                                                            {
                                                                                                                (() => {
                                                                                                                    const __callInstance367 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                        env: {
                                                                                                                            impFunc: () => {
                                                                                                                                e.AddJoint(c.joint);
                                                                                                                            }
                                                                                                                        }
                                                                                                                    });
                                                                                                                    const __exports = __callInstance367.exports;
                                                                                                                    return __exports.data();
                                                                                                                })();
                                                                                                                c.joint.m_islandFlag = true;
                                                                                                                (() => {
                                                                                                                    const __ifInstance347 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                        env: {
                                                                                                                            impFunc1: () => {
                                                                                                                                {
                                                                                                                                    (() => {
                                                                                                                                        const __ifInstance348 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                                            env: {
                                                                                                                                                impFunc1: () => {
                                                                                                                                                    {
                                                                                                                                                        (() => {
                                                                                                                                                            const __callInstance366 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                                                                env: {
                                                                                                                                                                    impFunc: () => {
                                                                                                                                                                        s.Advance(r);
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            });
                                                                                                                                                            const __exports = __callInstance366.exports;
                                                                                                                                                            return __exports.data();
                                                                                                                                                        })();
                                                                                                                                                        (() => {
                                                                                                                                                            const __callInstance365 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                                                                env: {
                                                                                                                                                                    impFunc: () => {
                                                                                                                                                                        s.SetAwake(true);
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            });
                                                                                                                                                            const __exports = __callInstance365.exports;
                                                                                                                                                            return __exports.data();
                                                                                                                                                        })();
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                impFunc2: () => {
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        });
                                                                                                                                        const __exports = __ifInstance348.exports;
                                                                                                                                        return __exports.data(s.GetType() != k.b2_staticBody ? 1 : 0);
                                                                                                                                    })();
                                                                                                                                    f[b + m] = s;
                                                                                                                                    ++m;
                                                                                                                                    s.m_flags |= k.e_islandFlag;
                                                                                                                                }
                                                                                                                            },
                                                                                                                            impFunc2: () => {
                                                                                                                            }
                                                                                                                        }
                                                                                                                    });
                                                                                                                    const __exports = __ifInstance347.exports;
                                                                                                                    return __exports.data(!(s.m_flags & k.e_islandFlag) ? 1 : 0);
                                                                                                                })();
                                                                                                            }
                                                                                                        },
                                                                                                        impFunc2: () => {
                                                                                                        }
                                                                                                    }
                                                                                                });
                                                                                                const __exports = __ifInstance346.exports;
                                                                                                return __exports.data(s.IsActive() != false ? 1 : 0);
                                                                                            })();
                                                                                        }
                                                                                    },
                                                                                    impFunc2: () => {
                                                                                    }
                                                                                }
                                                                            });
                                                                            const __exports = __ifInstance345.exports;
                                                                            return __exports.data(c.joint.m_islandFlag != true ? 1 : 0);
                                                                        })();
                                                                    },
                                                                    impFunc2: () => {
                                                                    }
                                                                }
                                                            });
                                                            const __exports = __ifInstance344.exports;
                                                            return __exports.data(e.m_jointCount != e.m_jointCapacity ? 1 : 0);
                                                        })();
                                                    }
                                                }
                                            });
                                            const __exports = __forInstance95.exports;
                                            return __exports.data();
                                        })();
                                    }
                                }
                                b = h.s_timestep;
                                b.warmStarting = false;
                                b.dt = (1 - r) * a.dt;
                                b.inv_dt = 1 / b.dt;
                                b.dtRatio = 0;
                                b.velocityIterations = a.velocityIterations;
                                b.positionIterations = a.positionIterations;
                                (() => {
                                    const __callInstance364 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                e.SolveTOI(b);
                                            }
                                        }
                                    });
                                    const __exports = __callInstance364.exports;
                                    return __exports.data();
                                })();
                                (() => {
                                    r = r = 0;
                                    const __forInstance96 = new WebAssembly.Instance(__forWasmModule, {
                                        env: {
                                            test: () => {
                                                return r < e.m_bodyCount ? 1 : 0;
                                            },
                                            update: () => {
                                                ++r;
                                            },
                                            body: () => {
                                                {
                                                    c = e.m_bodies[r];
                                                    c.m_flags &= ~k.e_islandFlag;
                                                    (() => {
                                                        const __ifInstance349 = new WebAssembly.Instance(__ifWasmModule, {
                                                            env: {
                                                                impFunc1: () => {
                                                                    (() => {
                                                                        const __ifInstance350 = new WebAssembly.Instance(__ifWasmModule, {
                                                                            env: {
                                                                                impFunc1: () => {
                                                                                    {
                                                                                        (() => {
                                                                                            const __callInstance363 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                env: {
                                                                                                    impFunc: () => {
                                                                                                        c.SynchronizeFixtures();
                                                                                                    }
                                                                                                }
                                                                                            });
                                                                                            const __exports = __callInstance363.exports;
                                                                                            return __exports.data();
                                                                                        })();
                                                                                        (() => {
                                                                                            g = c.m_contactList;
                                                                                            const __forInstance97 = new WebAssembly.Instance(__forWasmModule, {
                                                                                                env: {
                                                                                                    test: () => {
                                                                                                        return g ? 1 : 0;
                                                                                                    },
                                                                                                    update: () => {
                                                                                                        g = g.next;
                                                                                                    },
                                                                                                    body: () => {
                                                                                                        g.contact.m_flags &= ~l.e_toiFlag;
                                                                                                    }
                                                                                                }
                                                                                            });
                                                                                            const __exports = __forInstance97.exports;
                                                                                            return __exports.data();
                                                                                        })();
                                                                                    }
                                                                                },
                                                                                impFunc2: () => {
                                                                                }
                                                                            }
                                                                        });
                                                                        const __exports = __ifInstance350.exports;
                                                                        return __exports.data(c.GetType() == k.b2_dynamicBody ? 1 : 0);
                                                                    })();
                                                                },
                                                                impFunc2: () => {
                                                                }
                                                            }
                                                        });
                                                        const __exports = __ifInstance349.exports;
                                                        return __exports.data(c.IsAwake() != false ? 1 : 0);
                                                    })();
                                                }
                                            }
                                        }
                                    });
                                    const __exports = __forInstance96.exports;
                                    return __exports.data();
                                })();
                                (() => {
                                    r = 0;
                                    const __forInstance98 = new WebAssembly.Instance(__forWasmModule, {
                                        env: {
                                            test: () => {
                                                return r < e.m_contactCount ? 1 : 0;
                                            },
                                            update: () => {
                                                ++r;
                                            },
                                            body: () => {
                                                {
                                                    b = e.m_contacts[r];
                                                    b.m_flags &= ~(l.e_toiFlag | l.e_islandFlag);
                                                }
                                            }
                                        }
                                    });
                                    const __exports = __forInstance98.exports;
                                    return __exports.data();
                                })();
                                (() => {
                                    r = 0;
                                    const __forInstance99 = new WebAssembly.Instance(__forWasmModule, {
                                        env: {
                                            test: () => {
                                                return r < e.m_jointCount ? 1 : 0;
                                            },
                                            update: () => {
                                                ++r;
                                            },
                                            body: () => {
                                                {
                                                    b = e.m_joints[r];
                                                    b.m_islandFlag = false;
                                                }
                                            }
                                        }
                                    });
                                    const __exports = __forInstance99.exports;
                                    return __exports.data();
                                })();
                                (() => {
                                    const __callInstance362 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                this.m_contactManager.FindNewContacts();
                                            }
                                        }
                                    });
                                    const __exports = __callInstance362.exports;
                                    return __exports.data();
                                })();
                            }
                        }
                    };
                    h.prototype.DrawJoint = function (a) {
                        var c = a.GetBodyA(), g = a.GetBodyB(), b = c.m_xf.position, e = g.m_xf.position, f = a.GetAnchorA(), m = a.GetAnchorB(), r = h.s_jointColor;
                        switch (a.m_type) {
                        case q.e_distanceJoint:
                            (() => {
                                const __callInstance361 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.m_debugDraw.DrawSegment(f, m, r);
                                        }
                                    }
                                });
                                const __exports = __callInstance361.exports;
                                return __exports.data();
                            })();
                            break;
                        case q.e_pulleyJoint:
                            c = a instanceof n ? a : null;
                            a = c.GetGroundAnchorA();
                            c = c.GetGroundAnchorB();
                            (() => {
                                const __callInstance360 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.m_debugDraw.DrawSegment(a, f, r);
                                        }
                                    }
                                });
                                const __exports = __callInstance360.exports;
                                return __exports.data();
                            })();
                            (() => {
                                const __callInstance359 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.m_debugDraw.DrawSegment(c, m, r);
                                        }
                                    }
                                });
                                const __exports = __callInstance359.exports;
                                return __exports.data();
                            })();
                            (() => {
                                const __callInstance358 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.m_debugDraw.DrawSegment(a, c, r);
                                        }
                                    }
                                });
                                const __exports = __callInstance358.exports;
                                return __exports.data();
                            })();
                            break;
                        case q.e_mouseJoint:
                            (() => {
                                const __callInstance357 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.m_debugDraw.DrawSegment(f, m, r);
                                        }
                                    }
                                });
                                const __exports = __callInstance357.exports;
                                return __exports.data();
                            })();
                            break;
                        default:
                            c != this.m_groundBody && this.m_debugDraw.DrawSegment(b, f, r);
                            (() => {
                                const __callInstance356 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.m_debugDraw.DrawSegment(f, m, r);
                                        }
                                    }
                                });
                                const __exports = __callInstance356.exports;
                                return __exports.data();
                            })();
                            g != this.m_groundBody && this.m_debugDraw.DrawSegment(e, m, r);
                        }
                    };
                    h.prototype.DrawShape = function (a, c, g) {
                        switch (a.m_type) {
                        case Y.e_circleShape:
                            var b = a instanceof M ? a : null;
                            (() => {
                                const __callInstance355 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.m_debugDraw.DrawSolidCircle(F.MulX(c, b.m_p), b.m_radius, c.R.col1, g);
                                        }
                                    }
                                });
                                const __exports = __callInstance355.exports;
                                return __exports.data();
                            })();
                            break;
                        case Y.e_polygonShape:
                            b = 0;
                            b = a instanceof W ? a : null;
                            a = parseInt(b.GetVertexCount());
                            var e = b.GetVertices(), f = new Vector(a);
                            (() => {
                                b = 0;
                                const __forInstance100 = new WebAssembly.Instance(__forWasmModule, {
                                    env: {
                                        test: () => {
                                            return b < a ? 1 : 0;
                                        },
                                        update: () => {
                                            ++b;
                                        },
                                        body: () => {
                                            f[b] = F.MulX(c, e[b]);
                                        }
                                    }
                                });
                                const __exports = __forInstance100.exports;
                                return __exports.data();
                            })();
                            (() => {
                                const __callInstance354 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.m_debugDraw.DrawSolidPolygon(f, a, g);
                                        }
                                    }
                                });
                                const __exports = __callInstance354.exports;
                                return __exports.data();
                            })();
                            break;
                        case Y.e_edgeShape:
                            b = a instanceof L ? a : null;
                            (() => {
                                const __callInstance353 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            this.m_debugDraw.DrawSegment(F.MulX(c, b.GetVertex1()), F.MulX(c, b.GetVertex2()), g);
                                        }
                                    }
                                });
                                const __exports = __callInstance353.exports;
                                return __exports.data();
                            })();
                        }
                    };
                    (() => {
                        const __callInstance352 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.postDefs.push(function () {
                                        Box2D.Dynamics.b2World.s_timestep2 = new d();
                                        Box2D.Dynamics.b2World.s_xf = new K();
                                        Box2D.Dynamics.b2World.s_backupA = new G();
                                        Box2D.Dynamics.b2World.s_backupB = new G();
                                        Box2D.Dynamics.b2World.s_timestep = new d();
                                        Box2D.Dynamics.b2World.s_queue = new Vector();
                                        Box2D.Dynamics.b2World.s_jointColor = new w(0.5, 0.8, 0.8);
                                        Box2D.Dynamics.b2World.e_newFixture = 1;
                                        Box2D.Dynamics.b2World.e_locked = 2;
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance352.exports;
                        return __exports.data();
                    })();
                }());
            }
        }
    });
    const __exports = __callInstance544.exports;
    return __exports.data();
})();
(() => {
    const __callInstance351 = new WebAssembly.Instance(__callWasmModule, {
        env: {
            impFunc: () => {
                (function () {
                    var F = Box2D.Collision.Shapes.b2CircleShape, G = Box2D.Collision.Shapes.b2EdgeShape, K = Box2D.Collision.Shapes.b2PolygonShape, y = Box2D.Collision.Shapes.b2Shape, w = Box2D.Dynamics.Contacts.b2CircleContact, A = Box2D.Dynamics.Contacts.b2Contact, U = Box2D.Dynamics.Contacts.b2ContactConstraint, p = Box2D.Dynamics.Contacts.b2ContactConstraintPoint, B = Box2D.Dynamics.Contacts.b2ContactEdge, Q = Box2D.Dynamics.Contacts.b2ContactFactory, V = Box2D.Dynamics.Contacts.b2ContactRegister, M = Box2D.Dynamics.Contacts.b2ContactResult, L = Box2D.Dynamics.Contacts.b2ContactSolver, I = Box2D.Dynamics.Contacts.b2EdgeAndCircleContact, W = Box2D.Dynamics.Contacts.b2NullContact, Y = Box2D.Dynamics.Contacts.b2PolyAndCircleContact, k = Box2D.Dynamics.Contacts.b2PolyAndEdgeContact, z = Box2D.Dynamics.Contacts.b2PolygonContact, u = Box2D.Dynamics.Contacts.b2PositionSolverManifold, D = Box2D.Dynamics.b2Body, H = Box2D.Dynamics.b2TimeStep, O = Box2D.Common.b2Settings, E = Box2D.Common.Math.b2Mat22, R = Box2D.Common.Math.b2Math, N = Box2D.Common.Math.b2Vec2, S = Box2D.Collision.b2Collision, aa = Box2D.Collision.b2ContactID, Z = Box2D.Collision.b2Manifold, d = Box2D.Collision.b2TimeOfImpact, h = Box2D.Collision.b2TOIInput, l = Box2D.Collision.b2WorldManifold;
                    (() => {
                        const __callInstance350 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(w, Box2D.Dynamics.Contacts.b2Contact);
                                }
                            }
                        });
                        const __exports = __callInstance350.exports;
                        return __exports.data();
                    })();
                    w.prototype.__super = Box2D.Dynamics.Contacts.b2Contact.prototype;
                    w.b2CircleContact = function () {
                        (() => {
                            const __callInstance349 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Contacts.b2Contact.b2Contact.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance349.exports;
                            return __exports.data();
                        })();
                    };
                    w.Create = function () {
                        return new w();
                    };
                    w.Destroy = function () {
                    };
                    w.prototype.Reset = function (j, o) {
                        (() => {
                            const __callInstance348 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.Reset.call(this, j, o);
                                    }
                                }
                            });
                            const __exports = __callInstance348.exports;
                            return __exports.data();
                        })();
                    };
                    w.prototype.Evaluate = function () {
                        var j = this.m_fixtureA.GetBody(), o = this.m_fixtureB.GetBody();
                        (() => {
                            const __callInstance347 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        S.CollideCircles(this.m_manifold, this.m_fixtureA.GetShape() instanceof F ? this.m_fixtureA.GetShape() : null, j.m_xf, this.m_fixtureB.GetShape() instanceof F ? this.m_fixtureB.GetShape() : null, o.m_xf);
                                    }
                                }
                            });
                            const __exports = __callInstance347.exports;
                            return __exports.data();
                        })();
                    };
                    A.b2Contact = function () {
                        this.m_nodeA = new B();
                        this.m_nodeB = new B();
                        this.m_manifold = new Z();
                        this.m_oldManifold = new Z();
                    };
                    A.prototype.GetManifold = function () {
                        return this.m_manifold;
                    };
                    A.prototype.GetWorldManifold = function (j) {
                        var o = this.m_fixtureA.GetBody(), q = this.m_fixtureB.GetBody(), n = this.m_fixtureA.GetShape(), a = this.m_fixtureB.GetShape();
                        (() => {
                            const __callInstance346 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        j.Initialize(this.m_manifold, o.GetTransform(), n.m_radius, q.GetTransform(), a.m_radius);
                                    }
                                }
                            });
                            const __exports = __callInstance346.exports;
                            return __exports.data();
                        })();
                    };
                    A.prototype.IsTouching = function () {
                        return (this.m_flags & A.e_touchingFlag) == A.e_touchingFlag;
                    };
                    A.prototype.IsContinuous = function () {
                        return (this.m_flags & A.e_continuousFlag) == A.e_continuousFlag;
                    };
                    A.prototype.SetSensor = function (j) {
                        (() => {
                            const __ifInstance351 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_flags |= A.e_sensorFlag;
                                    },
                                    impFunc2: () => {
                                        this.m_flags &= ~A.e_sensorFlag;
                                    }
                                }
                            });
                            const __exports = __ifInstance351.exports;
                            return __exports.data(j ? 1 : 0);
                        })();
                    };
                    A.prototype.IsSensor = function () {
                        return (this.m_flags & A.e_sensorFlag) == A.e_sensorFlag;
                    };
                    A.prototype.SetEnabled = function (j) {
                        (() => {
                            const __ifInstance352 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_flags |= A.e_enabledFlag;
                                    },
                                    impFunc2: () => {
                                        this.m_flags &= ~A.e_enabledFlag;
                                    }
                                }
                            });
                            const __exports = __ifInstance352.exports;
                            return __exports.data(j ? 1 : 0);
                        })();
                    };
                    A.prototype.IsEnabled = function () {
                        return (this.m_flags & A.e_enabledFlag) == A.e_enabledFlag;
                    };
                    A.prototype.GetNext = function () {
                        return this.m_next;
                    };
                    A.prototype.GetFixtureA = function () {
                        return this.m_fixtureA;
                    };
                    A.prototype.GetFixtureB = function () {
                        return this.m_fixtureB;
                    };
                    A.prototype.FlagForFiltering = function () {
                        this.m_flags |= A.e_filterFlag;
                    };
                    A.prototype.b2Contact = function () {
                    };
                    A.prototype.Reset = function (j, o) {
                        (() => {
                            const __ifInstance353 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        j = null;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance353.exports;
                            return __exports.data(j === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance354 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        o = null;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance354.exports;
                            return __exports.data(o === undefined ? 1 : 0);
                        })();
                        this.m_flags = A.e_enabledFlag;
                        (() => {
                            const __ifInstance355 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_fixtureB = this.m_fixtureA = null;
                                    },
                                    impFunc2: () => {
                                        {
                                            (() => {
                                                const __ifInstance356 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            this.m_flags |= A.e_sensorFlag;
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance356.exports;
                                                return __exports.data(j.IsSensor() || o.IsSensor() ? 1 : 0);
                                            })();
                                            var q = j.GetBody(), n = o.GetBody();
                                            (() => {
                                                const __ifInstance357 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            this.m_flags |= A.e_continuousFlag;
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance357.exports;
                                                return __exports.data(q.GetType() != D.b2_dynamicBody || q.IsBullet() || n.GetType() != D.b2_dynamicBody || n.IsBullet() ? 1 : 0);
                                            })();
                                            this.m_fixtureA = j;
                                            this.m_fixtureB = o;
                                            this.m_manifold.m_pointCount = 0;
                                            this.m_next = this.m_prev = null;
                                            this.m_nodeA.contact = null;
                                            this.m_nodeA.prev = null;
                                            this.m_nodeA.next = null;
                                            this.m_nodeA.other = null;
                                            this.m_nodeB.contact = null;
                                            this.m_nodeB.prev = null;
                                            this.m_nodeB.next = null;
                                            this.m_nodeB.other = null;
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance355.exports;
                            return __exports.data(!j || !o ? 1 : 0);
                        })();
                    };
                    A.prototype.Update = function (j) {
                        var o = this.m_oldManifold;
                        this.m_oldManifold = this.m_manifold;
                        this.m_manifold = o;
                        this.m_flags |= A.e_enabledFlag;
                        var q = false;
                        o = (this.m_flags & A.e_touchingFlag) == A.e_touchingFlag;
                        var n = this.m_fixtureA.m_body, a = this.m_fixtureB.m_body, c = this.m_fixtureA.m_aabb.TestOverlap(this.m_fixtureB.m_aabb);
                        if (this.m_flags & A.e_sensorFlag) {
                            (() => {
                                const __ifInstance358 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                q = this.m_fixtureA.GetShape();
                                                c = this.m_fixtureB.GetShape();
                                                n = n.GetTransform();
                                                a = a.GetTransform();
                                                q = y.TestOverlap(q, n, c, a);
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance358.exports;
                                return __exports.data(c ? 1 : 0);
                            })();
                            this.m_manifold.m_pointCount = 0;
                        } else {
                            (() => {
                                const __ifInstance359 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            this.m_flags |= A.e_continuousFlag;
                                        },
                                        impFunc2: () => {
                                            this.m_flags &= ~A.e_continuousFlag;
                                        }
                                    }
                                });
                                const __exports = __ifInstance359.exports;
                                return __exports.data(n.GetType() != D.b2_dynamicBody || n.IsBullet() || a.GetType() != D.b2_dynamicBody || a.IsBullet() ? 1 : 0);
                            })();
                            if (c) {
                                (() => {
                                    const __callInstance345 = new WebAssembly.Instance(__callWasmModule, {
                                        env: {
                                            impFunc: () => {
                                                this.Evaluate();
                                            }
                                        }
                                    });
                                    const __exports = __callInstance345.exports;
                                    return __exports.data();
                                })();
                                q = this.m_manifold.m_pointCount > 0;
                                for (c = 0; c < this.m_manifold.m_pointCount; ++c) {
                                    var g = this.m_manifold.m_points[c];
                                    g.m_normalImpulse = 0;
                                    g.m_tangentImpulse = 0;
                                    for (var b = g.m_id, e = 0; e < this.m_oldManifold.m_pointCount; ++e) {
                                        var f = this.m_oldManifold.m_points[e];
                                        if (f.m_id.key == b.key) {
                                            g.m_normalImpulse = f.m_normalImpulse;
                                            g.m_tangentImpulse = f.m_tangentImpulse;
                                            break;
                                        }
                                    }
                                }
                            } else
                                this.m_manifold.m_pointCount = 0;
                            (() => {
                                const __ifInstance360 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                (() => {
                                                    const __callInstance344 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                n.SetAwake(true);
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance344.exports;
                                                    return __exports.data();
                                                })();
                                                (() => {
                                                    const __callInstance343 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                a.SetAwake(true);
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance343.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance360.exports;
                                return __exports.data(q != o ? 1 : 0);
                            })();
                        }
                        (() => {
                            const __ifInstance361 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_flags |= A.e_touchingFlag;
                                    },
                                    impFunc2: () => {
                                        this.m_flags &= ~A.e_touchingFlag;
                                    }
                                }
                            });
                            const __exports = __ifInstance361.exports;
                            return __exports.data(q ? 1 : 0);
                        })();
                        o == false && q == true && j.BeginContact(this);
                        o == true && q == false && j.EndContact(this);
                        (this.m_flags & A.e_sensorFlag) == 0 && j.PreSolve(this, this.m_oldManifold);
                    };
                    A.prototype.Evaluate = function () {
                    };
                    A.prototype.ComputeTOI = function (j, o) {
                        (() => {
                            const __callInstance342 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        A.s_input.proxyA.Set(this.m_fixtureA.GetShape());
                                    }
                                }
                            });
                            const __exports = __callInstance342.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance341 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        A.s_input.proxyB.Set(this.m_fixtureB.GetShape());
                                    }
                                }
                            });
                            const __exports = __callInstance341.exports;
                            return __exports.data();
                        })();
                        A.s_input.sweepA = j;
                        A.s_input.sweepB = o;
                        A.s_input.tolerance = O.b2_linearSlop;
                        return d.TimeOfImpact(A.s_input);
                    };
                    (() => {
                        const __callInstance340 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.postDefs.push(function () {
                                        Box2D.Dynamics.Contacts.b2Contact.e_sensorFlag = 1;
                                        Box2D.Dynamics.Contacts.b2Contact.e_continuousFlag = 2;
                                        Box2D.Dynamics.Contacts.b2Contact.e_islandFlag = 4;
                                        Box2D.Dynamics.Contacts.b2Contact.e_toiFlag = 8;
                                        Box2D.Dynamics.Contacts.b2Contact.e_touchingFlag = 16;
                                        Box2D.Dynamics.Contacts.b2Contact.e_enabledFlag = 32;
                                        Box2D.Dynamics.Contacts.b2Contact.e_filterFlag = 64;
                                        Box2D.Dynamics.Contacts.b2Contact.s_input = new h();
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance340.exports;
                        return __exports.data();
                    })();
                    U.b2ContactConstraint = function () {
                        this.localPlaneNormal = new N();
                        this.localPoint = new N();
                        this.normal = new N();
                        this.normalMass = new E();
                        this.K = new E();
                    };
                    U.prototype.b2ContactConstraint = function () {
                        this.points = new Vector(O.b2_maxManifoldPoints);
                        (() => {
                            var j = 0;
                            const __forInstance101 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return j < O.b2_maxManifoldPoints ? 1 : 0;
                                    },
                                    update: () => {
                                        j++;
                                    },
                                    body: () => {
                                        this.points[j] = new p();
                                    }
                                }
                            });
                            const __exports = __forInstance101.exports;
                            return __exports.data();
                        })();
                    };
                    p.b2ContactConstraintPoint = function () {
                        this.localPoint = new N();
                        this.rA = new N();
                        this.rB = new N();
                    };
                    B.b2ContactEdge = function () {
                    };
                    Q.b2ContactFactory = function () {
                    };
                    Q.prototype.b2ContactFactory = function (j) {
                        this.m_allocator = j;
                        (() => {
                            const __callInstance339 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.InitializeRegisters();
                                    }
                                }
                            });
                            const __exports = __callInstance339.exports;
                            return __exports.data();
                        })();
                    };
                    Q.prototype.AddType = function (j, o, q, n) {
                        (() => {
                            const __ifInstance362 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        q = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance362.exports;
                            return __exports.data(q === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance363 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        n = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance363.exports;
                            return __exports.data(n === undefined ? 1 : 0);
                        })();
                        this.m_registers[q][n].createFcn = j;
                        this.m_registers[q][n].destroyFcn = o;
                        this.m_registers[q][n].primary = true;
                        (() => {
                            const __ifInstance364 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            this.m_registers[n][q].createFcn = j;
                                            this.m_registers[n][q].destroyFcn = o;
                                            this.m_registers[n][q].primary = false;
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance364.exports;
                            return __exports.data(q != n ? 1 : 0);
                        })();
                    };
                    Q.prototype.InitializeRegisters = function () {
                        this.m_registers = new Vector(y.e_shapeTypeCount);
                        (() => {
                            var j = 0;
                            const __forInstance102 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return j < y.e_shapeTypeCount ? 1 : 0;
                                    },
                                    update: () => {
                                        j++;
                                    },
                                    body: () => {
                                        {
                                            this.m_registers[j] = new Vector(y.e_shapeTypeCount);
                                            (() => {
                                                var o = 0;
                                                const __forInstance103 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return o < y.e_shapeTypeCount ? 1 : 0;
                                                        },
                                                        update: () => {
                                                            o++;
                                                        },
                                                        body: () => {
                                                            this.m_registers[j][o] = new V();
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance103.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance102.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance338 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.AddType(w.Create, w.Destroy, y.e_circleShape, y.e_circleShape);
                                    }
                                }
                            });
                            const __exports = __callInstance338.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance337 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.AddType(Y.Create, Y.Destroy, y.e_polygonShape, y.e_circleShape);
                                    }
                                }
                            });
                            const __exports = __callInstance337.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance336 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.AddType(z.Create, z.Destroy, y.e_polygonShape, y.e_polygonShape);
                                    }
                                }
                            });
                            const __exports = __callInstance336.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance335 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.AddType(I.Create, I.Destroy, y.e_edgeShape, y.e_circleShape);
                                    }
                                }
                            });
                            const __exports = __callInstance335.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance334 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.AddType(k.Create, k.Destroy, y.e_polygonShape, y.e_edgeShape);
                                    }
                                }
                            });
                            const __exports = __callInstance334.exports;
                            return __exports.data();
                        })();
                    };
                    Q.prototype.Create = function (j, o) {
                        var q = parseInt(j.GetType()), n = parseInt(o.GetType());
                        q = this.m_registers[q][n];
                        if (q.pool) {
                            n = q.pool;
                            q.pool = n.m_next;
                            q.poolCount--;
                            (() => {
                                const __callInstance333 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            n.Reset(j, o);
                                        }
                                    }
                                });
                                const __exports = __callInstance333.exports;
                                return __exports.data();
                            })();
                            return n;
                        }
                        n = q.createFcn;
                        if (n != null) {
                            (() => {
                                const __ifInstance365 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                n = n(this.m_allocator);
                                                (() => {
                                                    const __callInstance332 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                n.Reset(j, o);
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance332.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        },
                                        impFunc2: () => {
                                            {
                                                n = n(this.m_allocator);
                                                (() => {
                                                    const __callInstance331 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                n.Reset(o, j);
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance331.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        }
                                    }
                                });
                                const __exports = __ifInstance365.exports;
                                return __exports.data(q.primary ? 1 : 0);
                            })();
                            return n;
                        } else
                            return null;
                    };
                    Q.prototype.Destroy = function (j) {
                        (() => {
                            const __ifInstance366 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            (() => {
                                                const __callInstance330 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            j.m_fixtureA.m_body.SetAwake(true);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance330.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance329 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            j.m_fixtureB.m_body.SetAwake(true);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance329.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance366.exports;
                            return __exports.data(j.m_manifold.m_pointCount > 0 ? 1 : 0);
                        })();
                        var o = parseInt(j.m_fixtureA.GetType()), q = parseInt(j.m_fixtureB.GetType());
                        o = this.m_registers[o][q];
                        o.poolCount++;
                        j.m_next = o.pool;
                        o.pool = j;
                        o = o.destroyFcn;
                        (() => {
                            const __callInstance328 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        o(j, this.m_allocator);
                                    }
                                }
                            });
                            const __exports = __callInstance328.exports;
                            return __exports.data();
                        })();
                    };
                    V.b2ContactRegister = function () {
                    };
                    M.b2ContactResult = function () {
                        this.position = new N();
                        this.normal = new N();
                        this.id = new aa();
                    };
                    L.b2ContactSolver = function () {
                        this.m_step = new H();
                        this.m_constraints = new Vector();
                    };
                    L.prototype.b2ContactSolver = function () {
                    };
                    L.prototype.Initialize = function (j, o, q, n) {
                        (() => {
                            const __ifInstance367 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        q = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance367.exports;
                            return __exports.data(q === undefined ? 1 : 0);
                        })();
                        var a;
                        (() => {
                            const __callInstance327 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_step.Set(j);
                                    }
                                }
                            });
                            const __exports = __callInstance327.exports;
                            return __exports.data();
                        })();
                        this.m_allocator = n;
                        j = 0;
                        (() => {
                            this.m_constraintCount = q;
                            const __forInstance104 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return this.m_constraints.length < this.m_constraintCount ? 1 : 0;
                                    },
                                    update: () => {
                                    },
                                    body: () => {
                                        this.m_constraints[this.m_constraints.length] = new U();
                                    }
                                }
                            });
                            const __exports = __forInstance104.exports;
                            return __exports.data();
                        })();
                        (() => {
                            j = 0;
                            const __forInstance105 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return j < q ? 1 : 0;
                                    },
                                    update: () => {
                                        ++j;
                                    },
                                    body: () => {
                                        {
                                            a = o[j];
                                            n = a.m_fixtureA;
                                            var c = a.m_fixtureB, g = n.m_shape.m_radius, b = c.m_shape.m_radius, e = n.m_body, f = c.m_body, m = a.GetManifold(), r = O.b2MixFriction(n.GetFriction(), c.GetFriction()), s = O.b2MixRestitution(n.GetRestitution(), c.GetRestitution()), v = e.m_linearVelocity.x, t = e.m_linearVelocity.y, x = f.m_linearVelocity.x, C = f.m_linearVelocity.y, J = e.m_angularVelocity, T = f.m_angularVelocity;
                                            (() => {
                                                const __callInstance326 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            O.b2Assert(m.m_pointCount > 0);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance326.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance325 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            L.s_worldManifold.Initialize(m, e.m_xf, g, f.m_xf, b);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance325.exports;
                                                return __exports.data();
                                            })();
                                            c = L.s_worldManifold.m_normal.x;
                                            a = L.s_worldManifold.m_normal.y;
                                            n = this.m_constraints[j];
                                            n.bodyA = e;
                                            n.bodyB = f;
                                            n.manifold = m;
                                            n.normal.x = c;
                                            n.normal.y = a;
                                            n.pointCount = m.m_pointCount;
                                            n.friction = r;
                                            n.restitution = s;
                                            n.localPlaneNormal.x = m.m_localPlaneNormal.x;
                                            n.localPlaneNormal.y = m.m_localPlaneNormal.y;
                                            n.localPoint.x = m.m_localPoint.x;
                                            n.localPoint.y = m.m_localPoint.y;
                                            n.radius = g + b;
                                            n.type = m.m_type;
                                            (() => {
                                                g = 0;
                                                const __forInstance106 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return g < n.pointCount ? 1 : 0;
                                                        },
                                                        update: () => {
                                                            ++g;
                                                        },
                                                        body: () => {
                                                            {
                                                                r = m.m_points[g];
                                                                b = n.points[g];
                                                                b.normalImpulse = r.m_normalImpulse;
                                                                b.tangentImpulse = r.m_tangentImpulse;
                                                                (() => {
                                                                    const __callInstance324 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                b.localPoint.SetV(r.m_localPoint);
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance324.exports;
                                                                    return __exports.data();
                                                                })();
                                                                r = b.rA.x = L.s_worldManifold.m_points[g].x - e.m_sweep.c.x;
                                                                s = b.rA.y = L.s_worldManifold.m_points[g].y - e.m_sweep.c.y;
                                                                var P = b.rB.x = L.s_worldManifold.m_points[g].x - f.m_sweep.c.x, X = b.rB.y = L.s_worldManifold.m_points[g].y - f.m_sweep.c.y, $ = r * a - s * c, ba = P * a - X * c;
                                                                $ *= $;
                                                                ba *= ba;
                                                                b.normalMass = 1 / (e.m_invMass + f.m_invMass + e.m_invI * $ + f.m_invI * ba);
                                                                var ca = e.m_mass * e.m_invMass + f.m_mass * f.m_invMass;
                                                                ca += e.m_mass * e.m_invI * $ + f.m_mass * f.m_invI * ba;
                                                                b.equalizedMass = 1 / ca;
                                                                ba = a;
                                                                ca = -c;
                                                                $ = r * ca - s * ba;
                                                                ba = P * ca - X * ba;
                                                                $ *= $;
                                                                ba *= ba;
                                                                b.tangentMass = 1 / (e.m_invMass + f.m_invMass + e.m_invI * $ + f.m_invI * ba);
                                                                b.velocityBias = 0;
                                                                r = n.normal.x * (x + -T * X - v - -J * s) + n.normal.y * (C + T * P - t - J * r);
                                                                (() => {
                                                                    const __ifInstance368 = new WebAssembly.Instance(__ifWasmModule, {
                                                                        env: {
                                                                            impFunc1: () => {
                                                                                b.velocityBias += -n.restitution * r;
                                                                            },
                                                                            impFunc2: () => {
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __ifInstance368.exports;
                                                                    return __exports.data(r < -O.b2_velocityThreshold ? 1 : 0);
                                                                })();
                                                            }
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance106.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __ifInstance369 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                C = n.points[0];
                                                                x = n.points[1];
                                                                m = e.m_invMass;
                                                                e = e.m_invI;
                                                                v = f.m_invMass;
                                                                f = f.m_invI;
                                                                t = C.rA.x * a - C.rA.y * c;
                                                                C = C.rB.x * a - C.rB.y * c;
                                                                J = x.rA.x * a - x.rA.y * c;
                                                                x = x.rB.x * a - x.rB.y * c;
                                                                c = m + v + e * t * t + f * C * C;
                                                                a = m + v + e * J * J + f * x * x;
                                                                f = m + v + e * t * J + f * C * x;
                                                                (() => {
                                                                    const __ifInstance370 = new WebAssembly.Instance(__ifWasmModule, {
                                                                        env: {
                                                                            impFunc1: () => {
                                                                                {
                                                                                    (() => {
                                                                                        const __callInstance323 = new WebAssembly.Instance(__callWasmModule, {
                                                                                            env: {
                                                                                                impFunc: () => {
                                                                                                    n.K.col1.Set(c, f);
                                                                                                }
                                                                                            }
                                                                                        });
                                                                                        const __exports = __callInstance323.exports;
                                                                                        return __exports.data();
                                                                                    })();
                                                                                    (() => {
                                                                                        const __callInstance322 = new WebAssembly.Instance(__callWasmModule, {
                                                                                            env: {
                                                                                                impFunc: () => {
                                                                                                    n.K.col2.Set(f, a);
                                                                                                }
                                                                                            }
                                                                                        });
                                                                                        const __exports = __callInstance322.exports;
                                                                                        return __exports.data();
                                                                                    })();
                                                                                    (() => {
                                                                                        const __callInstance321 = new WebAssembly.Instance(__callWasmModule, {
                                                                                            env: {
                                                                                                impFunc: () => {
                                                                                                    n.K.GetInverse(n.normalMass);
                                                                                                }
                                                                                            }
                                                                                        });
                                                                                        const __exports = __callInstance321.exports;
                                                                                        return __exports.data();
                                                                                    })();
                                                                                }
                                                                            },
                                                                            impFunc2: () => {
                                                                                n.pointCount = 1;
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __ifInstance370.exports;
                                                                    return __exports.data(c * c < 100 * (c * a - f * f) ? 1 : 0);
                                                                })();
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance369.exports;
                                                return __exports.data(n.pointCount == 2 ? 1 : 0);
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance105.exports;
                            return __exports.data();
                        })();
                    };
                    L.prototype.InitVelocityConstraints = function (j) {
                        (() => {
                            var o = 0;
                            const __forInstance107 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return o < this.m_constraintCount ? 1 : 0;
                                    },
                                    update: () => {
                                        ++o;
                                    },
                                    body: () => {
                                        {
                                            var q = this.m_constraints[o], n = q.bodyA, a = q.bodyB, c = n.m_invMass, g = n.m_invI, b = a.m_invMass, e = a.m_invI, f = q.normal.x, m = q.normal.y, r = m, s = -f, v = 0, t = 0;
                                            (() => {
                                                const __ifInstance371 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                t = q.pointCount;
                                                                (() => {
                                                                    v = 0;
                                                                    const __forInstance108 = new WebAssembly.Instance(__forWasmModule, {
                                                                        env: {
                                                                            test: () => {
                                                                                return v < t ? 1 : 0;
                                                                            },
                                                                            update: () => {
                                                                                ++v;
                                                                            },
                                                                            body: () => {
                                                                                {
                                                                                    var x = q.points[v];
                                                                                    x.normalImpulse *= j.dtRatio;
                                                                                    x.tangentImpulse *= j.dtRatio;
                                                                                    var C = x.normalImpulse * f + x.tangentImpulse * r, J = x.normalImpulse * m + x.tangentImpulse * s;
                                                                                    n.m_angularVelocity -= g * (x.rA.x * J - x.rA.y * C);
                                                                                    n.m_linearVelocity.x -= c * C;
                                                                                    n.m_linearVelocity.y -= c * J;
                                                                                    a.m_angularVelocity += e * (x.rB.x * J - x.rB.y * C);
                                                                                    a.m_linearVelocity.x += b * C;
                                                                                    a.m_linearVelocity.y += b * J;
                                                                                }
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __forInstance108.exports;
                                                                    return __exports.data();
                                                                })();
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                            {
                                                                t = q.pointCount;
                                                                (() => {
                                                                    v = 0;
                                                                    const __forInstance109 = new WebAssembly.Instance(__forWasmModule, {
                                                                        env: {
                                                                            test: () => {
                                                                                return v < t ? 1 : 0;
                                                                            },
                                                                            update: () => {
                                                                                ++v;
                                                                            },
                                                                            body: () => {
                                                                                {
                                                                                    n = q.points[v];
                                                                                    n.normalImpulse = 0;
                                                                                    n.tangentImpulse = 0;
                                                                                }
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __forInstance109.exports;
                                                                    return __exports.data();
                                                                })();
                                                            }
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance371.exports;
                                                return __exports.data(j.warmStarting ? 1 : 0);
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance107.exports;
                            return __exports.data();
                        })();
                    };
                    L.prototype.SolveVelocityConstraints = function () {
                        for (var j = 0, o, q = 0, n = 0, a = 0, c = n = n = q = q = 0, g = q = q = 0, b = q = a = 0, e = 0, f, m = 0; m < this.m_constraintCount; ++m) {
                            a = this.m_constraints[m];
                            var r = a.bodyA, s = a.bodyB, v = r.m_angularVelocity, t = s.m_angularVelocity, x = r.m_linearVelocity, C = s.m_linearVelocity, J = r.m_invMass, T = r.m_invI, P = s.m_invMass, X = s.m_invI;
                            b = a.normal.x;
                            var $ = e = a.normal.y;
                            f = -b;
                            g = a.friction;
                            (() => {
                                j = 0;
                                const __forInstance110 = new WebAssembly.Instance(__forWasmModule, {
                                    env: {
                                        test: () => {
                                            return j < a.pointCount ? 1 : 0;
                                        },
                                        update: () => {
                                            j++;
                                        },
                                        body: () => {
                                            {
                                                o = a.points[j];
                                                q = C.x - t * o.rB.y - x.x + v * o.rA.y;
                                                n = C.y + t * o.rB.x - x.y - v * o.rA.x;
                                                q = q * $ + n * f;
                                                q = o.tangentMass * -q;
                                                n = g * o.normalImpulse;
                                                n = R.Clamp(o.tangentImpulse + q, -n, n);
                                                q = n - o.tangentImpulse;
                                                c = q * $;
                                                q = q * f;
                                                x.x -= J * c;
                                                x.y -= J * q;
                                                v -= T * (o.rA.x * q - o.rA.y * c);
                                                C.x += P * c;
                                                C.y += P * q;
                                                t += X * (o.rB.x * q - o.rB.y * c);
                                                o.tangentImpulse = n;
                                            }
                                        }
                                    }
                                });
                                const __exports = __forInstance110.exports;
                                return __exports.data();
                            })();
                            (() => {
                                const __callInstance320 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            parseInt(a.pointCount);
                                        }
                                    }
                                });
                                const __exports = __callInstance320.exports;
                                return __exports.data();
                            })();
                            if (a.pointCount == 1) {
                                o = a.points[0];
                                q = C.x + -t * o.rB.y - x.x - -v * o.rA.y;
                                n = C.y + t * o.rB.x - x.y - v * o.rA.x;
                                a = q * b + n * e;
                                q = -o.normalMass * (a - o.velocityBias);
                                n = o.normalImpulse + q;
                                n = n > 0 ? n : 0;
                                q = n - o.normalImpulse;
                                c = q * b;
                                q = q * e;
                                x.x -= J * c;
                                x.y -= J * q;
                                v -= T * (o.rA.x * q - o.rA.y * c);
                                C.x += P * c;
                                C.y += P * q;
                                t += X * (o.rB.x * q - o.rB.y * c);
                                o.normalImpulse = n;
                            } else {
                                o = a.points[0];
                                j = a.points[1];
                                q = o.normalImpulse;
                                g = j.normalImpulse;
                                var ba = (C.x - t * o.rB.y - x.x + v * o.rA.y) * b + (C.y + t * o.rB.x - x.y - v * o.rA.x) * e, ca = (C.x - t * j.rB.y - x.x + v * j.rA.y) * b + (C.y + t * j.rB.x - x.y - v * j.rA.x) * e;
                                n = ba - o.velocityBias;
                                c = ca - j.velocityBias;
                                f = a.K;
                                n -= f.col1.x * q + f.col2.x * g;
                                for (c -= f.col1.y * q + f.col2.y * g;;) {
                                    f = a.normalMass;
                                    $ = -(f.col1.x * n + f.col2.x * c);
                                    f = -(f.col1.y * n + f.col2.y * c);
                                    if ($ >= 0 && f >= 0) {
                                        q = $ - q;
                                        g = f - g;
                                        a = q * b;
                                        q = q * e;
                                        b = g * b;
                                        e = g * e;
                                        x.x -= J * (a + b);
                                        x.y -= J * (q + e);
                                        v -= T * (o.rA.x * q - o.rA.y * a + j.rA.x * e - j.rA.y * b);
                                        C.x += P * (a + b);
                                        C.y += P * (q + e);
                                        t += X * (o.rB.x * q - o.rB.y * a + j.rB.x * e - j.rB.y * b);
                                        o.normalImpulse = $;
                                        j.normalImpulse = f;
                                        break;
                                    }
                                    $ = -o.normalMass * n;
                                    f = 0;
                                    ca = a.K.col1.y * $ + c;
                                    if ($ >= 0 && ca >= 0) {
                                        q = $ - q;
                                        g = f - g;
                                        a = q * b;
                                        q = q * e;
                                        b = g * b;
                                        e = g * e;
                                        x.x -= J * (a + b);
                                        x.y -= J * (q + e);
                                        v -= T * (o.rA.x * q - o.rA.y * a + j.rA.x * e - j.rA.y * b);
                                        C.x += P * (a + b);
                                        C.y += P * (q + e);
                                        t += X * (o.rB.x * q - o.rB.y * a + j.rB.x * e - j.rB.y * b);
                                        o.normalImpulse = $;
                                        j.normalImpulse = f;
                                        break;
                                    }
                                    $ = 0;
                                    f = -j.normalMass * c;
                                    ba = a.K.col2.x * f + n;
                                    if (f >= 0 && ba >= 0) {
                                        q = $ - q;
                                        g = f - g;
                                        a = q * b;
                                        q = q * e;
                                        b = g * b;
                                        e = g * e;
                                        x.x -= J * (a + b);
                                        x.y -= J * (q + e);
                                        v -= T * (o.rA.x * q - o.rA.y * a + j.rA.x * e - j.rA.y * b);
                                        C.x += P * (a + b);
                                        C.y += P * (q + e);
                                        t += X * (o.rB.x * q - o.rB.y * a + j.rB.x * e - j.rB.y * b);
                                        o.normalImpulse = $;
                                        j.normalImpulse = f;
                                        break;
                                    }
                                    f = $ = 0;
                                    ba = n;
                                    ca = c;
                                    if (ba >= 0 && ca >= 0) {
                                        q = $ - q;
                                        g = f - g;
                                        a = q * b;
                                        q = q * e;
                                        b = g * b;
                                        e = g * e;
                                        x.x -= J * (a + b);
                                        x.y -= J * (q + e);
                                        v -= T * (o.rA.x * q - o.rA.y * a + j.rA.x * e - j.rA.y * b);
                                        C.x += P * (a + b);
                                        C.y += P * (q + e);
                                        t += X * (o.rB.x * q - o.rB.y * a + j.rB.x * e - j.rB.y * b);
                                        o.normalImpulse = $;
                                        j.normalImpulse = f;
                                        break;
                                    }
                                    break;
                                }
                            }
                            r.m_angularVelocity = v;
                            s.m_angularVelocity = t;
                        }
                    };
                    L.prototype.FinalizeVelocityConstraints = function () {
                        (() => {
                            var j = 0;
                            const __forInstance111 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return j < this.m_constraintCount ? 1 : 0;
                                    },
                                    update: () => {
                                        ++j;
                                    },
                                    body: () => {
                                        (() => {
                                            var o = this.m_constraints[j], q = o.manifold, n = 0;
                                            const __forInstance112 = new WebAssembly.Instance(__forWasmModule, {
                                                env: {
                                                    test: () => {
                                                        return n < o.pointCount ? 1 : 0;
                                                    },
                                                    update: () => {
                                                        ++n;
                                                    },
                                                    body: () => {
                                                        {
                                                            var a = q.m_points[n], c = o.points[n];
                                                            a.m_normalImpulse = c.normalImpulse;
                                                            a.m_tangentImpulse = c.tangentImpulse;
                                                        }
                                                    }
                                                }
                                            });
                                            const __exports = __forInstance112.exports;
                                            return __exports.data();
                                        })();
                                    }
                                }
                            });
                            const __exports = __forInstance111.exports;
                            return __exports.data();
                        })();
                    };
                    L.prototype.SolvePositionConstraints = function (j) {
                        (() => {
                            const __ifInstance372 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        j = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance372.exports;
                            return __exports.data(j === undefined ? 1 : 0);
                        })();
                        (() => {
                            var o = 0, q = 0;
                            const __forInstance113 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return q < this.m_constraintCount ? 1 : 0;
                                    },
                                    update: () => {
                                        q++;
                                    },
                                    body: () => {
                                        {
                                            var n = this.m_constraints[q], a = n.bodyA, c = n.bodyB, g = a.m_mass * a.m_invMass, b = a.m_mass * a.m_invI, e = c.m_mass * c.m_invMass, f = c.m_mass * c.m_invI;
                                            (() => {
                                                const __callInstance319 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            L.s_psm.Initialize(n);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance319.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                var m = L.s_psm.m_normal, r = 0;
                                                const __forInstance114 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return r < n.pointCount ? 1 : 0;
                                                        },
                                                        update: () => {
                                                            r++;
                                                        },
                                                        body: () => {
                                                            {
                                                                var s = n.points[r], v = L.s_psm.m_points[r], t = L.s_psm.m_separations[r], x = v.x - a.m_sweep.c.x, C = v.y - a.m_sweep.c.y, J = v.x - c.m_sweep.c.x;
                                                                v = v.y - c.m_sweep.c.y;
                                                                o = o < t ? o : t;
                                                                t = R.Clamp(j * (t + O.b2_linearSlop), -O.b2_maxLinearCorrection, 0);
                                                                t = -s.equalizedMass * t;
                                                                s = t * m.x;
                                                                t = t * m.y;
                                                                a.m_sweep.c.x -= g * s;
                                                                a.m_sweep.c.y -= g * t;
                                                                a.m_sweep.a -= b * (x * t - C * s);
                                                                (() => {
                                                                    const __callInstance318 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                a.SynchronizeTransform();
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance318.exports;
                                                                    return __exports.data();
                                                                })();
                                                                c.m_sweep.c.x += e * s;
                                                                c.m_sweep.c.y += e * t;
                                                                c.m_sweep.a += f * (J * t - v * s);
                                                                (() => {
                                                                    const __callInstance317 = new WebAssembly.Instance(__callWasmModule, {
                                                                        env: {
                                                                            impFunc: () => {
                                                                                c.SynchronizeTransform();
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __callInstance317.exports;
                                                                    return __exports.data();
                                                                })();
                                                            }
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance114.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance113.exports;
                            return __exports.data();
                        })();
                        return o > -1.5 * O.b2_linearSlop;
                    };
                    (() => {
                        const __callInstance316 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.postDefs.push(function () {
                                        Box2D.Dynamics.Contacts.b2ContactSolver.s_worldManifold = new l();
                                        Box2D.Dynamics.Contacts.b2ContactSolver.s_psm = new u();
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance316.exports;
                        return __exports.data();
                    })();
                    (() => {
                        const __callInstance315 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(I, Box2D.Dynamics.Contacts.b2Contact);
                                }
                            }
                        });
                        const __exports = __callInstance315.exports;
                        return __exports.data();
                    })();
                    I.prototype.__super = Box2D.Dynamics.Contacts.b2Contact.prototype;
                    I.b2EdgeAndCircleContact = function () {
                        (() => {
                            const __callInstance314 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Contacts.b2Contact.b2Contact.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance314.exports;
                            return __exports.data();
                        })();
                    };
                    I.Create = function () {
                        return new I();
                    };
                    I.Destroy = function () {
                    };
                    I.prototype.Reset = function (j, o) {
                        (() => {
                            const __callInstance313 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.Reset.call(this, j, o);
                                    }
                                }
                            });
                            const __exports = __callInstance313.exports;
                            return __exports.data();
                        })();
                    };
                    I.prototype.Evaluate = function () {
                        var j = this.m_fixtureA.GetBody(), o = this.m_fixtureB.GetBody();
                        (() => {
                            const __callInstance312 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.b2CollideEdgeAndCircle(this.m_manifold, this.m_fixtureA.GetShape() instanceof G ? this.m_fixtureA.GetShape() : null, j.m_xf, this.m_fixtureB.GetShape() instanceof F ? this.m_fixtureB.GetShape() : null, o.m_xf);
                                    }
                                }
                            });
                            const __exports = __callInstance312.exports;
                            return __exports.data();
                        })();
                    };
                    I.prototype.b2CollideEdgeAndCircle = function () {
                    };
                    (() => {
                        const __callInstance311 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(W, Box2D.Dynamics.Contacts.b2Contact);
                                }
                            }
                        });
                        const __exports = __callInstance311.exports;
                        return __exports.data();
                    })();
                    W.prototype.__super = Box2D.Dynamics.Contacts.b2Contact.prototype;
                    W.b2NullContact = function () {
                        (() => {
                            const __callInstance310 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Contacts.b2Contact.b2Contact.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance310.exports;
                            return __exports.data();
                        })();
                    };
                    W.prototype.b2NullContact = function () {
                        (() => {
                            const __callInstance309 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.b2Contact.call(this);
                                    }
                                }
                            });
                            const __exports = __callInstance309.exports;
                            return __exports.data();
                        })();
                    };
                    W.prototype.Evaluate = function () {
                    };
                    (() => {
                        const __callInstance308 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(Y, Box2D.Dynamics.Contacts.b2Contact);
                                }
                            }
                        });
                        const __exports = __callInstance308.exports;
                        return __exports.data();
                    })();
                    Y.prototype.__super = Box2D.Dynamics.Contacts.b2Contact.prototype;
                    Y.b2PolyAndCircleContact = function () {
                        (() => {
                            const __callInstance307 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Contacts.b2Contact.b2Contact.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance307.exports;
                            return __exports.data();
                        })();
                    };
                    Y.Create = function () {
                        return new Y();
                    };
                    Y.Destroy = function () {
                    };
                    Y.prototype.Reset = function (j, o) {
                        (() => {
                            const __callInstance306 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.Reset.call(this, j, o);
                                    }
                                }
                            });
                            const __exports = __callInstance306.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance305 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        O.b2Assert(j.GetType() == y.e_polygonShape);
                                    }
                                }
                            });
                            const __exports = __callInstance305.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance304 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        O.b2Assert(o.GetType() == y.e_circleShape);
                                    }
                                }
                            });
                            const __exports = __callInstance304.exports;
                            return __exports.data();
                        })();
                    };
                    Y.prototype.Evaluate = function () {
                        var j = this.m_fixtureA.m_body, o = this.m_fixtureB.m_body;
                        (() => {
                            const __callInstance303 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        S.CollidePolygonAndCircle(this.m_manifold, this.m_fixtureA.GetShape() instanceof K ? this.m_fixtureA.GetShape() : null, j.m_xf, this.m_fixtureB.GetShape() instanceof F ? this.m_fixtureB.GetShape() : null, o.m_xf);
                                    }
                                }
                            });
                            const __exports = __callInstance303.exports;
                            return __exports.data();
                        })();
                    };
                    (() => {
                        const __callInstance302 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(k, Box2D.Dynamics.Contacts.b2Contact);
                                }
                            }
                        });
                        const __exports = __callInstance302.exports;
                        return __exports.data();
                    })();
                    k.prototype.__super = Box2D.Dynamics.Contacts.b2Contact.prototype;
                    k.b2PolyAndEdgeContact = function () {
                        (() => {
                            const __callInstance301 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Contacts.b2Contact.b2Contact.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance301.exports;
                            return __exports.data();
                        })();
                    };
                    k.Create = function () {
                        return new k();
                    };
                    k.Destroy = function () {
                    };
                    k.prototype.Reset = function (j, o) {
                        (() => {
                            const __callInstance300 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.Reset.call(this, j, o);
                                    }
                                }
                            });
                            const __exports = __callInstance300.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance299 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        O.b2Assert(j.GetType() == y.e_polygonShape);
                                    }
                                }
                            });
                            const __exports = __callInstance299.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance298 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        O.b2Assert(o.GetType() == y.e_edgeShape);
                                    }
                                }
                            });
                            const __exports = __callInstance298.exports;
                            return __exports.data();
                        })();
                    };
                    k.prototype.Evaluate = function () {
                        var j = this.m_fixtureA.GetBody(), o = this.m_fixtureB.GetBody();
                        (() => {
                            const __callInstance297 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.b2CollidePolyAndEdge(this.m_manifold, this.m_fixtureA.GetShape() instanceof K ? this.m_fixtureA.GetShape() : null, j.m_xf, this.m_fixtureB.GetShape() instanceof G ? this.m_fixtureB.GetShape() : null, o.m_xf);
                                    }
                                }
                            });
                            const __exports = __callInstance297.exports;
                            return __exports.data();
                        })();
                    };
                    k.prototype.b2CollidePolyAndEdge = function () {
                    };
                    (() => {
                        const __callInstance296 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(z, Box2D.Dynamics.Contacts.b2Contact);
                                }
                            }
                        });
                        const __exports = __callInstance296.exports;
                        return __exports.data();
                    })();
                    z.prototype.__super = Box2D.Dynamics.Contacts.b2Contact.prototype;
                    z.b2PolygonContact = function () {
                        (() => {
                            const __callInstance295 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Contacts.b2Contact.b2Contact.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance295.exports;
                            return __exports.data();
                        })();
                    };
                    z.Create = function () {
                        return new z();
                    };
                    z.Destroy = function () {
                    };
                    z.prototype.Reset = function (j, o) {
                        (() => {
                            const __callInstance294 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.Reset.call(this, j, o);
                                    }
                                }
                            });
                            const __exports = __callInstance294.exports;
                            return __exports.data();
                        })();
                    };
                    z.prototype.Evaluate = function () {
                        var j = this.m_fixtureA.GetBody(), o = this.m_fixtureB.GetBody();
                        (() => {
                            const __callInstance293 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        S.CollidePolygons(this.m_manifold, this.m_fixtureA.GetShape() instanceof K ? this.m_fixtureA.GetShape() : null, j.m_xf, this.m_fixtureB.GetShape() instanceof K ? this.m_fixtureB.GetShape() : null, o.m_xf);
                                    }
                                }
                            });
                            const __exports = __callInstance293.exports;
                            return __exports.data();
                        })();
                    };
                    u.b2PositionSolverManifold = function () {
                    };
                    u.prototype.b2PositionSolverManifold = function () {
                        this.m_normal = new N();
                        this.m_separations = new Vector_a2j_Number(O.b2_maxManifoldPoints);
                        this.m_points = new Vector(O.b2_maxManifoldPoints);
                        (() => {
                            var j = 0;
                            const __forInstance115 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return j < O.b2_maxManifoldPoints ? 1 : 0;
                                    },
                                    update: () => {
                                        j++;
                                    },
                                    body: () => {
                                        this.m_points[j] = new N();
                                    }
                                }
                            });
                            const __exports = __forInstance115.exports;
                            return __exports.data();
                        })();
                    };
                    u.prototype.Initialize = function (j) {
                        (() => {
                            const __callInstance292 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        O.b2Assert(j.pointCount > 0);
                                    }
                                }
                            });
                            const __exports = __callInstance292.exports;
                            return __exports.data();
                        })();
                        var o = 0, q = 0, n = 0, a, c = 0, g = 0;
                        switch (j.type) {
                        case Z.e_circles:
                            a = j.bodyA.m_xf.R;
                            n = j.localPoint;
                            o = j.bodyA.m_xf.position.x + (a.col1.x * n.x + a.col2.x * n.y);
                            q = j.bodyA.m_xf.position.y + (a.col1.y * n.x + a.col2.y * n.y);
                            a = j.bodyB.m_xf.R;
                            n = j.points[0].localPoint;
                            c = j.bodyB.m_xf.position.x + (a.col1.x * n.x + a.col2.x * n.y);
                            a = j.bodyB.m_xf.position.y + (a.col1.y * n.x + a.col2.y * n.y);
                            n = c - o;
                            g = a - q;
                            var b = n * n + g * g;
                            (() => {
                                const __ifInstance373 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                b = Math.sqrt(b);
                                                this.m_normal.x = n / b;
                                                this.m_normal.y = g / b;
                                            }
                                        },
                                        impFunc2: () => {
                                            {
                                                this.m_normal.x = 1;
                                                this.m_normal.y = 0;
                                            }
                                        }
                                    }
                                });
                                const __exports = __ifInstance373.exports;
                                return __exports.data(b > Number.MIN_VALUE * Number.MIN_VALUE ? 1 : 0);
                            })();
                            this.m_points[0].x = 0.5 * (o + c);
                            this.m_points[0].y = 0.5 * (q + a);
                            this.m_separations[0] = n * this.m_normal.x + g * this.m_normal.y - j.radius;
                            break;
                        case Z.e_faceA:
                            a = j.bodyA.m_xf.R;
                            n = j.localPlaneNormal;
                            this.m_normal.x = a.col1.x * n.x + a.col2.x * n.y;
                            this.m_normal.y = a.col1.y * n.x + a.col2.y * n.y;
                            a = j.bodyA.m_xf.R;
                            n = j.localPoint;
                            c = j.bodyA.m_xf.position.x + (a.col1.x * n.x + a.col2.x * n.y);
                            g = j.bodyA.m_xf.position.y + (a.col1.y * n.x + a.col2.y * n.y);
                            a = j.bodyB.m_xf.R;
                            (() => {
                                o = 0;
                                const __forInstance116 = new WebAssembly.Instance(__forWasmModule, {
                                    env: {
                                        test: () => {
                                            return o < j.pointCount ? 1 : 0;
                                        },
                                        update: () => {
                                            ++o;
                                        },
                                        body: () => {
                                            {
                                                n = j.points[o].localPoint;
                                                q = j.bodyB.m_xf.position.x + (a.col1.x * n.x + a.col2.x * n.y);
                                                n = j.bodyB.m_xf.position.y + (a.col1.y * n.x + a.col2.y * n.y);
                                                this.m_separations[o] = (q - c) * this.m_normal.x + (n - g) * this.m_normal.y - j.radius;
                                                this.m_points[o].x = q;
                                                this.m_points[o].y = n;
                                            }
                                        }
                                    }
                                });
                                const __exports = __forInstance116.exports;
                                return __exports.data();
                            })();
                            break;
                        case Z.e_faceB:
                            a = j.bodyB.m_xf.R;
                            n = j.localPlaneNormal;
                            this.m_normal.x = a.col1.x * n.x + a.col2.x * n.y;
                            this.m_normal.y = a.col1.y * n.x + a.col2.y * n.y;
                            a = j.bodyB.m_xf.R;
                            n = j.localPoint;
                            c = j.bodyB.m_xf.position.x + (a.col1.x * n.x + a.col2.x * n.y);
                            g = j.bodyB.m_xf.position.y + (a.col1.y * n.x + a.col2.y * n.y);
                            a = j.bodyA.m_xf.R;
                            (() => {
                                o = 0;
                                const __forInstance117 = new WebAssembly.Instance(__forWasmModule, {
                                    env: {
                                        test: () => {
                                            return o < j.pointCount ? 1 : 0;
                                        },
                                        update: () => {
                                            ++o;
                                        },
                                        body: () => {
                                            {
                                                n = j.points[o].localPoint;
                                                q = j.bodyA.m_xf.position.x + (a.col1.x * n.x + a.col2.x * n.y);
                                                n = j.bodyA.m_xf.position.y + (a.col1.y * n.x + a.col2.y * n.y);
                                                this.m_separations[o] = (q - c) * this.m_normal.x + (n - g) * this.m_normal.y - j.radius;
                                                (() => {
                                                    const __callInstance291 = new WebAssembly.Instance(__callWasmModule, {
                                                        env: {
                                                            impFunc: () => {
                                                                this.m_points[o].Set(q, n);
                                                            }
                                                        }
                                                    });
                                                    const __exports = __callInstance291.exports;
                                                    return __exports.data();
                                                })();
                                            }
                                        }
                                    }
                                });
                                const __exports = __forInstance117.exports;
                                return __exports.data();
                            })();
                            this.m_normal.x *= -1;
                            this.m_normal.y *= -1;
                        }
                    };
                    (() => {
                        const __callInstance290 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.postDefs.push(function () {
                                        Box2D.Dynamics.Contacts.b2PositionSolverManifold.circlePointA = new N();
                                        Box2D.Dynamics.Contacts.b2PositionSolverManifold.circlePointB = new N();
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance290.exports;
                        return __exports.data();
                    })();
                }());
            }
        }
    });
    const __exports = __callInstance351.exports;
    return __exports.data();
})();
(() => {
    const __callInstance289 = new WebAssembly.Instance(__callWasmModule, {
        env: {
            impFunc: () => {
                (function () {
                    var F = Box2D.Common.Math.b2Mat22, G = Box2D.Common.Math.b2Math, K = Box2D.Common.Math.b2Vec2, y = Box2D.Common.b2Color, w = Box2D.Dynamics.Controllers.b2BuoyancyController, A = Box2D.Dynamics.Controllers.b2ConstantAccelController, U = Box2D.Dynamics.Controllers.b2ConstantForceController, p = Box2D.Dynamics.Controllers.b2Controller, B = Box2D.Dynamics.Controllers.b2ControllerEdge, Q = Box2D.Dynamics.Controllers.b2GravityController, V = Box2D.Dynamics.Controllers.b2TensorDampingController;
                    (() => {
                        const __callInstance288 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(w, Box2D.Dynamics.Controllers.b2Controller);
                                }
                            }
                        });
                        const __exports = __callInstance288.exports;
                        return __exports.data();
                    })();
                    w.prototype.__super = Box2D.Dynamics.Controllers.b2Controller.prototype;
                    w.b2BuoyancyController = function () {
                        (() => {
                            const __callInstance287 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Controllers.b2Controller.b2Controller.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance287.exports;
                            return __exports.data();
                        })();
                        this.normal = new K(0, -1);
                        this.density = this.offset = 0;
                        this.velocity = new K(0, 0);
                        this.linearDrag = 2;
                        this.angularDrag = 1;
                        this.useDensity = false;
                        this.useWorldGravity = true;
                        this.gravity = null;
                    };
                    w.prototype.Step = function () {
                        (() => {
                            const __ifInstance374 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            (() => {
                                                const __ifInstance375 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            this.gravity = this.GetWorld().GetGravity().Copy();
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance375.exports;
                                                return __exports.data(this.useWorldGravity ? 1 : 0);
                                            })();
                                            (() => {
                                                var M = this.m_bodyList;
                                                const __forInstance118 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return M ? 1 : 0;
                                                        },
                                                        update: () => {
                                                            M = M.nextBody;
                                                        },
                                                        body: () => {
                                                            {
                                                                var L = M.body;
                                                                (() => {
                                                                    const __ifInstance376 = new WebAssembly.Instance(__ifWasmModule, {
                                                                        env: {
                                                                            impFunc1: () => {
                                                                                {
                                                                                    (() => {
                                                                                        var I = new K(), W = new K(), Y = 0, k = 0, z = L.GetFixtureList();
                                                                                        const __forInstance119 = new WebAssembly.Instance(__forWasmModule, {
                                                                                            env: {
                                                                                                test: () => {
                                                                                                    return z ? 1 : 0;
                                                                                                },
                                                                                                update: () => {
                                                                                                    z = z.GetNext();
                                                                                                },
                                                                                                body: () => {
                                                                                                    {
                                                                                                        var u = new K(), D = z.GetShape().ComputeSubmergedArea(this.normal, this.offset, L.GetTransform(), u);
                                                                                                        Y += D;
                                                                                                        I.x += D * u.x;
                                                                                                        I.y += D * u.y;
                                                                                                        var H = 0;
                                                                                                        H = 1;
                                                                                                        k += D * H;
                                                                                                        W.x += D * u.x * H;
                                                                                                        W.y += D * u.y * H;
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        });
                                                                                        const __exports = __forInstance119.exports;
                                                                                        return __exports.data();
                                                                                    })();
                                                                                    I.x /= Y;
                                                                                    I.y /= Y;
                                                                                    W.x /= k;
                                                                                    W.y /= k;
                                                                                    (() => {
                                                                                        const __ifInstance377 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                            env: {
                                                                                                impFunc1: () => {
                                                                                                    {
                                                                                                        k = this.gravity.GetNegative();
                                                                                                        (() => {
                                                                                                            const __callInstance286 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                env: {
                                                                                                                    impFunc: () => {
                                                                                                                        k.Multiply(this.density * Y);
                                                                                                                    }
                                                                                                                }
                                                                                                            });
                                                                                                            const __exports = __callInstance286.exports;
                                                                                                            return __exports.data();
                                                                                                        })();
                                                                                                        (() => {
                                                                                                            const __callInstance285 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                env: {
                                                                                                                    impFunc: () => {
                                                                                                                        L.ApplyForce(k, W);
                                                                                                                    }
                                                                                                                }
                                                                                                            });
                                                                                                            const __exports = __callInstance285.exports;
                                                                                                            return __exports.data();
                                                                                                        })();
                                                                                                        W = L.GetLinearVelocityFromWorldPoint(I);
                                                                                                        (() => {
                                                                                                            const __callInstance284 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                env: {
                                                                                                                    impFunc: () => {
                                                                                                                        W.Subtract(this.velocity);
                                                                                                                    }
                                                                                                                }
                                                                                                            });
                                                                                                            const __exports = __callInstance284.exports;
                                                                                                            return __exports.data();
                                                                                                        })();
                                                                                                        (() => {
                                                                                                            const __callInstance283 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                env: {
                                                                                                                    impFunc: () => {
                                                                                                                        W.Multiply(-this.linearDrag * Y);
                                                                                                                    }
                                                                                                                }
                                                                                                            });
                                                                                                            const __exports = __callInstance283.exports;
                                                                                                            return __exports.data();
                                                                                                        })();
                                                                                                        (() => {
                                                                                                            const __callInstance282 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                env: {
                                                                                                                    impFunc: () => {
                                                                                                                        L.ApplyForce(W, I);
                                                                                                                    }
                                                                                                                }
                                                                                                            });
                                                                                                            const __exports = __callInstance282.exports;
                                                                                                            return __exports.data();
                                                                                                        })();
                                                                                                        (() => {
                                                                                                            const __callInstance281 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                env: {
                                                                                                                    impFunc: () => {
                                                                                                                        L.ApplyTorque(-L.GetInertia() / L.GetMass() * Y * L.GetAngularVelocity() * this.angularDrag);
                                                                                                                    }
                                                                                                                }
                                                                                                            });
                                                                                                            const __exports = __callInstance281.exports;
                                                                                                            return __exports.data();
                                                                                                        })();
                                                                                                    }
                                                                                                },
                                                                                                impFunc2: () => {
                                                                                                }
                                                                                            }
                                                                                        });
                                                                                        const __exports = __ifInstance377.exports;
                                                                                        return __exports.data(!(Y < Number.MIN_VALUE) ? 1 : 0);
                                                                                    })();
                                                                                }
                                                                            },
                                                                            impFunc2: () => {
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __ifInstance376.exports;
                                                                    return __exports.data(L.IsAwake() != false ? 1 : 0);
                                                                })();
                                                            }
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance118.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance374.exports;
                            return __exports.data(this.m_bodyList ? 1 : 0);
                        })();
                    };
                    w.prototype.Draw = function (M) {
                        var L = new K(), I = new K();
                        L.x = this.normal.x * this.offset + this.normal.y * 1000;
                        L.y = this.normal.y * this.offset - this.normal.x * 1000;
                        I.x = this.normal.x * this.offset - this.normal.y * 1000;
                        I.y = this.normal.y * this.offset + this.normal.x * 1000;
                        var W = new y(0, 0, 1);
                        (() => {
                            const __callInstance280 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        M.DrawSegment(L, I, W);
                                    }
                                }
                            });
                            const __exports = __callInstance280.exports;
                            return __exports.data();
                        })();
                    };
                    (() => {
                        const __callInstance279 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(A, Box2D.Dynamics.Controllers.b2Controller);
                                }
                            }
                        });
                        const __exports = __callInstance279.exports;
                        return __exports.data();
                    })();
                    A.prototype.__super = Box2D.Dynamics.Controllers.b2Controller.prototype;
                    A.b2ConstantAccelController = function () {
                        (() => {
                            const __callInstance278 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Controllers.b2Controller.b2Controller.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance278.exports;
                            return __exports.data();
                        })();
                        this.A = new K(0, 0);
                    };
                    A.prototype.Step = function (M) {
                        M = new K(this.A.x * M.dt, this.A.y * M.dt);
                        (() => {
                            var L = this.m_bodyList;
                            const __forInstance120 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return L ? 1 : 0;
                                    },
                                    update: () => {
                                        L = L.nextBody;
                                    },
                                    body: () => {
                                        {
                                            var I = L.body;
                                            I.IsAwake() && I.SetLinearVelocity(new K(I.GetLinearVelocity().x + M.x, I.GetLinearVelocity().y + M.y));
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance120.exports;
                            return __exports.data();
                        })();
                    };
                    (() => {
                        const __callInstance277 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(U, Box2D.Dynamics.Controllers.b2Controller);
                                }
                            }
                        });
                        const __exports = __callInstance277.exports;
                        return __exports.data();
                    })();
                    U.prototype.__super = Box2D.Dynamics.Controllers.b2Controller.prototype;
                    U.b2ConstantForceController = function () {
                        (() => {
                            const __callInstance276 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Controllers.b2Controller.b2Controller.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance276.exports;
                            return __exports.data();
                        })();
                        this.F = new K(0, 0);
                    };
                    U.prototype.Step = function () {
                        (() => {
                            var M = this.m_bodyList;
                            const __forInstance121 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return M ? 1 : 0;
                                    },
                                    update: () => {
                                        M = M.nextBody;
                                    },
                                    body: () => {
                                        {
                                            var L = M.body;
                                            L.IsAwake() && L.ApplyForce(this.F, L.GetWorldCenter());
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance121.exports;
                            return __exports.data();
                        })();
                    };
                    p.b2Controller = function () {
                    };
                    p.prototype.Step = function () {
                    };
                    p.prototype.Draw = function () {
                    };
                    p.prototype.AddBody = function (M) {
                        var L = new B();
                        L.controller = this;
                        L.body = M;
                        L.nextBody = this.m_bodyList;
                        L.prevBody = null;
                        this.m_bodyList = L;
                        (() => {
                            const __ifInstance378 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        L.nextBody.prevBody = L;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance378.exports;
                            return __exports.data(L.nextBody ? 1 : 0);
                        })();
                        this.m_bodyCount++;
                        L.nextController = M.m_controllerList;
                        L.prevController = null;
                        M.m_controllerList = L;
                        (() => {
                            const __ifInstance379 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        L.nextController.prevController = L;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance379.exports;
                            return __exports.data(L.nextController ? 1 : 0);
                        })();
                        M.m_controllerCount++;
                    };
                    p.prototype.RemoveBody = function (M) {
                        (() => {
                            var L = M.m_controllerList;
                            const __forInstance122 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return L && L.controller != this ? 1 : 0;
                                    },
                                    update: () => {
                                    },
                                    body: () => {
                                        L = L.nextController;
                                    }
                                }
                            });
                            const __exports = __forInstance122.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __ifInstance380 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        L.prevBody.nextBody = L.nextBody;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance380.exports;
                            return __exports.data(L.prevBody ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance381 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        L.nextBody.prevBody = L.prevBody;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance381.exports;
                            return __exports.data(L.nextBody ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance382 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        L.nextController.prevController = L.prevController;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance382.exports;
                            return __exports.data(L.nextController ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance383 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        L.prevController.nextController = L.nextController;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance383.exports;
                            return __exports.data(L.prevController ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance384 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_bodyList = L.nextBody;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance384.exports;
                            return __exports.data(this.m_bodyList == L ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance385 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        M.m_controllerList = L.nextController;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance385.exports;
                            return __exports.data(M.m_controllerList == L ? 1 : 0);
                        })();
                        M.m_controllerCount--;
                        this.m_bodyCount--;
                    };
                    p.prototype.Clear = function () {
                        (() => {
                            const __forInstance123 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return this.m_bodyList ? 1 : 0;
                                    },
                                    update: () => {
                                    },
                                    body: () => {
                                        (() => {
                                            const __callInstance275 = new WebAssembly.Instance(__callWasmModule, {
                                                env: {
                                                    impFunc: () => {
                                                        this.RemoveBody(this.m_bodyList.body);
                                                    }
                                                }
                                            });
                                            const __exports = __callInstance275.exports;
                                            return __exports.data();
                                        })();
                                    }
                                }
                            });
                            const __exports = __forInstance123.exports;
                            return __exports.data();
                        })();
                    };
                    p.prototype.GetNext = function () {
                        return this.m_next;
                    };
                    p.prototype.GetWorld = function () {
                        return this.m_world;
                    };
                    p.prototype.GetBodyList = function () {
                        return this.m_bodyList;
                    };
                    B.b2ControllerEdge = function () {
                    };
                    (() => {
                        const __callInstance274 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(Q, Box2D.Dynamics.Controllers.b2Controller);
                                }
                            }
                        });
                        const __exports = __callInstance274.exports;
                        return __exports.data();
                    })();
                    Q.prototype.__super = Box2D.Dynamics.Controllers.b2Controller.prototype;
                    Q.b2GravityController = function () {
                        (() => {
                            const __callInstance273 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Controllers.b2Controller.b2Controller.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance273.exports;
                            return __exports.data();
                        })();
                        this.G = 1;
                        this.invSqr = true;
                    };
                    Q.prototype.Step = function () {
                        var M = null, L = null, I = null, W = 0, Y = null, k = null, z = null, u = 0, D = 0, H = 0;
                        u = null;
                        (() => {
                            const __ifInstance386 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        for (M = this.m_bodyList; M; M = M.nextBody) {
                                            L = M.body;
                                            I = L.GetWorldCenter();
                                            W = L.GetMass();
                                            (() => {
                                                Y = this.m_bodyList;
                                                const __forInstance125 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return Y != M ? 1 : 0;
                                                        },
                                                        update: () => {
                                                            Y = Y.nextBody;
                                                        },
                                                        body: () => {
                                                            {
                                                                k = Y.body;
                                                                z = k.GetWorldCenter();
                                                                u = z.x - I.x;
                                                                D = z.y - I.y;
                                                                H = u * u + D * D;
                                                                (() => {
                                                                    const __ifInstance387 = new WebAssembly.Instance(__ifWasmModule, {
                                                                        env: {
                                                                            impFunc1: () => {
                                                                                {
                                                                                    u = new K(u, D);
                                                                                    (() => {
                                                                                        const __callInstance272 = new WebAssembly.Instance(__callWasmModule, {
                                                                                            env: {
                                                                                                impFunc: () => {
                                                                                                    u.Multiply(this.G / H / Math.sqrt(H) * W * k.GetMass());
                                                                                                }
                                                                                            }
                                                                                        });
                                                                                        const __exports = __callInstance272.exports;
                                                                                        return __exports.data();
                                                                                    })();
                                                                                    L.IsAwake() && L.ApplyForce(u, I);
                                                                                    (() => {
                                                                                        const __callInstance271 = new WebAssembly.Instance(__callWasmModule, {
                                                                                            env: {
                                                                                                impFunc: () => {
                                                                                                    u.Multiply(-1);
                                                                                                }
                                                                                            }
                                                                                        });
                                                                                        const __exports = __callInstance271.exports;
                                                                                        return __exports.data();
                                                                                    })();
                                                                                    k.IsAwake() && k.ApplyForce(u, z);
                                                                                }
                                                                            },
                                                                            impFunc2: () => {
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __ifInstance387.exports;
                                                                    return __exports.data(!(H < Number.MIN_VALUE) ? 1 : 0);
                                                                })();
                                                            }
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance125.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                        for (M = this.m_bodyList; M; M = M.nextBody) {
                                            L = M.body;
                                            I = L.GetWorldCenter();
                                            W = L.GetMass();
                                            (() => {
                                                Y = this.m_bodyList;
                                                const __forInstance127 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return Y != M ? 1 : 0;
                                                        },
                                                        update: () => {
                                                            Y = Y.nextBody;
                                                        },
                                                        body: () => {
                                                            {
                                                                k = Y.body;
                                                                z = k.GetWorldCenter();
                                                                u = z.x - I.x;
                                                                D = z.y - I.y;
                                                                H = u * u + D * D;
                                                                (() => {
                                                                    const __ifInstance388 = new WebAssembly.Instance(__ifWasmModule, {
                                                                        env: {
                                                                            impFunc1: () => {
                                                                                {
                                                                                    u = new K(u, D);
                                                                                    (() => {
                                                                                        const __callInstance270 = new WebAssembly.Instance(__callWasmModule, {
                                                                                            env: {
                                                                                                impFunc: () => {
                                                                                                    u.Multiply(this.G / H * W * k.GetMass());
                                                                                                }
                                                                                            }
                                                                                        });
                                                                                        const __exports = __callInstance270.exports;
                                                                                        return __exports.data();
                                                                                    })();
                                                                                    L.IsAwake() && L.ApplyForce(u, I);
                                                                                    (() => {
                                                                                        const __callInstance269 = new WebAssembly.Instance(__callWasmModule, {
                                                                                            env: {
                                                                                                impFunc: () => {
                                                                                                    u.Multiply(-1);
                                                                                                }
                                                                                            }
                                                                                        });
                                                                                        const __exports = __callInstance269.exports;
                                                                                        return __exports.data();
                                                                                    })();
                                                                                    k.IsAwake() && k.ApplyForce(u, z);
                                                                                }
                                                                            },
                                                                            impFunc2: () => {
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __ifInstance388.exports;
                                                                    return __exports.data(!(H < Number.MIN_VALUE) ? 1 : 0);
                                                                })();
                                                            }
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance127.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance386.exports;
                            return __exports.data(this.invSqr ? 1 : 0);
                        })();
                    };
                    (() => {
                        const __callInstance268 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(V, Box2D.Dynamics.Controllers.b2Controller);
                                }
                            }
                        });
                        const __exports = __callInstance268.exports;
                        return __exports.data();
                    })();
                    V.prototype.__super = Box2D.Dynamics.Controllers.b2Controller.prototype;
                    V.b2TensorDampingController = function () {
                        (() => {
                            const __callInstance267 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Controllers.b2Controller.b2Controller.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance267.exports;
                            return __exports.data();
                        })();
                        this.T = new F();
                        this.maxTimestep = 0;
                    };
                    V.prototype.SetAxisAligned = function (M, L) {
                        (() => {
                            const __ifInstance389 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        M = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance389.exports;
                            return __exports.data(M === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance390 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        L = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance390.exports;
                            return __exports.data(L === undefined ? 1 : 0);
                        })();
                        this.T.col1.x = -M;
                        this.T.col1.y = 0;
                        this.T.col2.x = 0;
                        this.T.col2.y = -L;
                        this.maxTimestep = M > 0 || L > 0 ? 1 / Math.max(M, L) : 0;
                    };
                    V.prototype.Step = function (M) {
                        M = M.dt;
                        (() => {
                            const __ifInstance391 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            (() => {
                                                const __ifInstance392 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            M = this.maxTimestep;
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance392.exports;
                                                return __exports.data(M > this.maxTimestep && this.maxTimestep > 0 ? 1 : 0);
                                            })();
                                            (() => {
                                                var L = this.m_bodyList;
                                                const __forInstance128 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return L ? 1 : 0;
                                                        },
                                                        update: () => {
                                                            L = L.nextBody;
                                                        },
                                                        body: () => {
                                                            {
                                                                var I = L.body;
                                                                (() => {
                                                                    const __ifInstance393 = new WebAssembly.Instance(__ifWasmModule, {
                                                                        env: {
                                                                            impFunc1: () => {
                                                                                {
                                                                                    var W = I.GetWorldVector(G.MulMV(this.T, I.GetLocalVector(I.GetLinearVelocity())));
                                                                                    (() => {
                                                                                        const __callInstance266 = new WebAssembly.Instance(__callWasmModule, {
                                                                                            env: {
                                                                                                impFunc: () => {
                                                                                                    I.SetLinearVelocity(new K(I.GetLinearVelocity().x + W.x * M, I.GetLinearVelocity().y + W.y * M));
                                                                                                }
                                                                                            }
                                                                                        });
                                                                                        const __exports = __callInstance266.exports;
                                                                                        return __exports.data();
                                                                                    })();
                                                                                }
                                                                            },
                                                                            impFunc2: () => {
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __ifInstance393.exports;
                                                                    return __exports.data(I.IsAwake() ? 1 : 0);
                                                                })();
                                                            }
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance128.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance391.exports;
                            return __exports.data(!(M <= Number.MIN_VALUE) ? 1 : 0);
                        })();
                    };
                }());
            }
        }
    });
    const __exports = __callInstance289.exports;
    return __exports.data();
})();
(() => {
    const __callInstance265 = new WebAssembly.Instance(__callWasmModule, {
        env: {
            impFunc: () => {
                (function () {
                    var F = Box2D.Common.b2Settings, G = Box2D.Common.Math.b2Mat22, K = Box2D.Common.Math.b2Mat33, y = Box2D.Common.Math.b2Math, w = Box2D.Common.Math.b2Vec2, A = Box2D.Common.Math.b2Vec3, U = Box2D.Dynamics.Joints.b2DistanceJoint, p = Box2D.Dynamics.Joints.b2DistanceJointDef, B = Box2D.Dynamics.Joints.b2FrictionJoint, Q = Box2D.Dynamics.Joints.b2FrictionJointDef, V = Box2D.Dynamics.Joints.b2GearJoint, M = Box2D.Dynamics.Joints.b2GearJointDef, L = Box2D.Dynamics.Joints.b2Jacobian, I = Box2D.Dynamics.Joints.b2Joint, W = Box2D.Dynamics.Joints.b2JointDef, Y = Box2D.Dynamics.Joints.b2JointEdge, k = Box2D.Dynamics.Joints.b2LineJoint, z = Box2D.Dynamics.Joints.b2LineJointDef, u = Box2D.Dynamics.Joints.b2MouseJoint, D = Box2D.Dynamics.Joints.b2MouseJointDef, H = Box2D.Dynamics.Joints.b2PrismaticJoint, O = Box2D.Dynamics.Joints.b2PrismaticJointDef, E = Box2D.Dynamics.Joints.b2PulleyJoint, R = Box2D.Dynamics.Joints.b2PulleyJointDef, N = Box2D.Dynamics.Joints.b2RevoluteJoint, S = Box2D.Dynamics.Joints.b2RevoluteJointDef, aa = Box2D.Dynamics.Joints.b2WeldJoint, Z = Box2D.Dynamics.Joints.b2WeldJointDef;
                    (() => {
                        const __callInstance264 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(U, Box2D.Dynamics.Joints.b2Joint);
                                }
                            }
                        });
                        const __exports = __callInstance264.exports;
                        return __exports.data();
                    })();
                    U.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;
                    U.b2DistanceJoint = function () {
                        (() => {
                            const __callInstance263 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance263.exports;
                            return __exports.data();
                        })();
                        this.m_localAnchor1 = new w();
                        this.m_localAnchor2 = new w();
                        this.m_u = new w();
                    };
                    U.prototype.GetAnchorA = function () {
                        return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);
                    };
                    U.prototype.GetAnchorB = function () {
                        return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);
                    };
                    U.prototype.GetReactionForce = function (d) {
                        (() => {
                            const __ifInstance394 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance394.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        return new w(d * this.m_impulse * this.m_u.x, d * this.m_impulse * this.m_u.y);
                    };
                    U.prototype.GetReactionTorque = function () {
                        return 0;
                    };
                    U.prototype.GetLength = function () {
                        return this.m_length;
                    };
                    U.prototype.SetLength = function (d) {
                        (() => {
                            const __ifInstance395 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance395.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        this.m_length = d;
                    };
                    U.prototype.GetFrequency = function () {
                        return this.m_frequencyHz;
                    };
                    U.prototype.SetFrequency = function (d) {
                        (() => {
                            const __ifInstance396 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance396.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        this.m_frequencyHz = d;
                    };
                    U.prototype.GetDampingRatio = function () {
                        return this.m_dampingRatio;
                    };
                    U.prototype.SetDampingRatio = function (d) {
                        (() => {
                            const __ifInstance397 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance397.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        this.m_dampingRatio = d;
                    };
                    U.prototype.b2DistanceJoint = function (d) {
                        (() => {
                            const __callInstance262 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.b2Joint.call(this, d);
                                    }
                                }
                            });
                            const __exports = __callInstance262.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance261 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localAnchor1.SetV(d.localAnchorA);
                                    }
                                }
                            });
                            const __exports = __callInstance261.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance260 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localAnchor2.SetV(d.localAnchorB);
                                    }
                                }
                            });
                            const __exports = __callInstance260.exports;
                            return __exports.data();
                        })();
                        this.m_length = d.length;
                        this.m_frequencyHz = d.frequencyHz;
                        this.m_dampingRatio = d.dampingRatio;
                        this.m_bias = this.m_gamma = this.m_impulse = 0;
                    };
                    U.prototype.InitVelocityConstraints = function (d) {
                        var h, l = 0, j = this.m_bodyA, o = this.m_bodyB;
                        h = j.m_xf.R;
                        var q = this.m_localAnchor1.x - j.m_sweep.localCenter.x, n = this.m_localAnchor1.y - j.m_sweep.localCenter.y;
                        l = h.col1.x * q + h.col2.x * n;
                        n = h.col1.y * q + h.col2.y * n;
                        q = l;
                        h = o.m_xf.R;
                        var a = this.m_localAnchor2.x - o.m_sweep.localCenter.x, c = this.m_localAnchor2.y - o.m_sweep.localCenter.y;
                        l = h.col1.x * a + h.col2.x * c;
                        c = h.col1.y * a + h.col2.y * c;
                        a = l;
                        this.m_u.x = o.m_sweep.c.x + a - j.m_sweep.c.x - q;
                        this.m_u.y = o.m_sweep.c.y + c - j.m_sweep.c.y - n;
                        l = Math.sqrt(this.m_u.x * this.m_u.x + this.m_u.y * this.m_u.y);
                        l > F.b2_linearSlop ? this.m_u.Multiply(1 / l) : this.m_u.SetZero();
                        h = q * this.m_u.y - n * this.m_u.x;
                        var g = a * this.m_u.y - c * this.m_u.x;
                        h = j.m_invMass + j.m_invI * h * h + o.m_invMass + o.m_invI * g * g;
                        this.m_mass = h != 0 ? 1 / h : 0;
                        (() => {
                            const __ifInstance398 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            l = l - this.m_length;
                                            g = 2 * Math.PI * this.m_frequencyHz;
                                            var b = this.m_mass * g * g;
                                            this.m_gamma = d.dt * (2 * this.m_mass * this.m_dampingRatio * g + d.dt * b);
                                            this.m_gamma = this.m_gamma != 0 ? 1 / this.m_gamma : 0;
                                            this.m_bias = l * d.dt * b * this.m_gamma;
                                            this.m_mass = h + this.m_gamma;
                                            this.m_mass = this.m_mass != 0 ? 1 / this.m_mass : 0;
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance398.exports;
                            return __exports.data(this.m_frequencyHz > 0 ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance399 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            this.m_impulse *= d.dtRatio;
                                            d = this.m_impulse * this.m_u.x;
                                            h = this.m_impulse * this.m_u.y;
                                            j.m_linearVelocity.x -= j.m_invMass * d;
                                            j.m_linearVelocity.y -= j.m_invMass * h;
                                            j.m_angularVelocity -= j.m_invI * (q * h - n * d);
                                            o.m_linearVelocity.x += o.m_invMass * d;
                                            o.m_linearVelocity.y += o.m_invMass * h;
                                            o.m_angularVelocity += o.m_invI * (a * h - c * d);
                                        }
                                    },
                                    impFunc2: () => {
                                        this.m_impulse = 0;
                                    }
                                }
                            });
                            const __exports = __ifInstance399.exports;
                            return __exports.data(d.warmStarting ? 1 : 0);
                        })();
                    };
                    U.prototype.SolveVelocityConstraints = function () {
                        var d, h = this.m_bodyA, l = this.m_bodyB;
                        d = h.m_xf.R;
                        var j = this.m_localAnchor1.x - h.m_sweep.localCenter.x, o = this.m_localAnchor1.y - h.m_sweep.localCenter.y, q = d.col1.x * j + d.col2.x * o;
                        o = d.col1.y * j + d.col2.y * o;
                        j = q;
                        d = l.m_xf.R;
                        var n = this.m_localAnchor2.x - l.m_sweep.localCenter.x, a = this.m_localAnchor2.y - l.m_sweep.localCenter.y;
                        q = d.col1.x * n + d.col2.x * a;
                        a = d.col1.y * n + d.col2.y * a;
                        n = q;
                        q = -this.m_mass * (this.m_u.x * (l.m_linearVelocity.x + -l.m_angularVelocity * a - (h.m_linearVelocity.x + -h.m_angularVelocity * o)) + this.m_u.y * (l.m_linearVelocity.y + l.m_angularVelocity * n - (h.m_linearVelocity.y + h.m_angularVelocity * j)) + this.m_bias + this.m_gamma * this.m_impulse);
                        this.m_impulse += q;
                        d = q * this.m_u.x;
                        q = q * this.m_u.y;
                        h.m_linearVelocity.x -= h.m_invMass * d;
                        h.m_linearVelocity.y -= h.m_invMass * q;
                        h.m_angularVelocity -= h.m_invI * (j * q - o * d);
                        l.m_linearVelocity.x += l.m_invMass * d;
                        l.m_linearVelocity.y += l.m_invMass * q;
                        l.m_angularVelocity += l.m_invI * (n * q - a * d);
                    };
                    U.prototype.SolvePositionConstraints = function () {
                        var d;
                        if (this.m_frequencyHz > 0)
                            return true;
                        var h = this.m_bodyA, l = this.m_bodyB;
                        d = h.m_xf.R;
                        var j = this.m_localAnchor1.x - h.m_sweep.localCenter.x, o = this.m_localAnchor1.y - h.m_sweep.localCenter.y, q = d.col1.x * j + d.col2.x * o;
                        o = d.col1.y * j + d.col2.y * o;
                        j = q;
                        d = l.m_xf.R;
                        var n = this.m_localAnchor2.x - l.m_sweep.localCenter.x, a = this.m_localAnchor2.y - l.m_sweep.localCenter.y;
                        q = d.col1.x * n + d.col2.x * a;
                        a = d.col1.y * n + d.col2.y * a;
                        n = q;
                        q = l.m_sweep.c.x + n - h.m_sweep.c.x - j;
                        var c = l.m_sweep.c.y + a - h.m_sweep.c.y - o;
                        d = Math.sqrt(q * q + c * c);
                        q /= d;
                        c /= d;
                        d = d - this.m_length;
                        d = y.Clamp(d, -F.b2_maxLinearCorrection, F.b2_maxLinearCorrection);
                        var g = -this.m_mass * d;
                        (() => {
                            const __callInstance259 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_u.Set(q, c);
                                    }
                                }
                            });
                            const __exports = __callInstance259.exports;
                            return __exports.data();
                        })();
                        q = g * this.m_u.x;
                        c = g * this.m_u.y;
                        h.m_sweep.c.x -= h.m_invMass * q;
                        h.m_sweep.c.y -= h.m_invMass * c;
                        h.m_sweep.a -= h.m_invI * (j * c - o * q);
                        l.m_sweep.c.x += l.m_invMass * q;
                        l.m_sweep.c.y += l.m_invMass * c;
                        l.m_sweep.a += l.m_invI * (n * c - a * q);
                        (() => {
                            const __callInstance258 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        h.SynchronizeTransform();
                                    }
                                }
                            });
                            const __exports = __callInstance258.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance257 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        l.SynchronizeTransform();
                                    }
                                }
                            });
                            const __exports = __callInstance257.exports;
                            return __exports.data();
                        })();
                        return y.Abs(d) < F.b2_linearSlop;
                    };
                    (() => {
                        const __callInstance256 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(p, Box2D.Dynamics.Joints.b2JointDef);
                                }
                            }
                        });
                        const __exports = __callInstance256.exports;
                        return __exports.data();
                    })();
                    p.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;
                    p.b2DistanceJointDef = function () {
                        (() => {
                            const __callInstance255 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance255.exports;
                            return __exports.data();
                        })();
                        this.localAnchorA = new w();
                        this.localAnchorB = new w();
                    };
                    p.prototype.b2DistanceJointDef = function () {
                        (() => {
                            const __callInstance254 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.b2JointDef.call(this);
                                    }
                                }
                            });
                            const __exports = __callInstance254.exports;
                            return __exports.data();
                        })();
                        this.type = I.e_distanceJoint;
                        this.length = 1;
                        this.dampingRatio = this.frequencyHz = 0;
                    };
                    p.prototype.Initialize = function (d, h, l, j) {
                        this.bodyA = d;
                        this.bodyB = h;
                        (() => {
                            const __callInstance253 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.localAnchorA.SetV(this.bodyA.GetLocalPoint(l));
                                    }
                                }
                            });
                            const __exports = __callInstance253.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance252 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.localAnchorB.SetV(this.bodyB.GetLocalPoint(j));
                                    }
                                }
                            });
                            const __exports = __callInstance252.exports;
                            return __exports.data();
                        })();
                        d = j.x - l.x;
                        l = j.y - l.y;
                        this.length = Math.sqrt(d * d + l * l);
                        this.dampingRatio = this.frequencyHz = 0;
                    };
                    (() => {
                        const __callInstance251 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(B, Box2D.Dynamics.Joints.b2Joint);
                                }
                            }
                        });
                        const __exports = __callInstance251.exports;
                        return __exports.data();
                    })();
                    B.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;
                    B.b2FrictionJoint = function () {
                        (() => {
                            const __callInstance250 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance250.exports;
                            return __exports.data();
                        })();
                        this.m_localAnchorA = new w();
                        this.m_localAnchorB = new w();
                        this.m_linearMass = new G();
                        this.m_linearImpulse = new w();
                    };
                    B.prototype.GetAnchorA = function () {
                        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA);
                    };
                    B.prototype.GetAnchorB = function () {
                        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB);
                    };
                    B.prototype.GetReactionForce = function (d) {
                        (() => {
                            const __ifInstance400 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance400.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        return new w(d * this.m_linearImpulse.x, d * this.m_linearImpulse.y);
                    };
                    B.prototype.GetReactionTorque = function (d) {
                        (() => {
                            const __ifInstance401 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance401.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        return d * this.m_angularImpulse;
                    };
                    B.prototype.SetMaxForce = function (d) {
                        (() => {
                            const __ifInstance402 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance402.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        this.m_maxForce = d;
                    };
                    B.prototype.GetMaxForce = function () {
                        return this.m_maxForce;
                    };
                    B.prototype.SetMaxTorque = function (d) {
                        (() => {
                            const __ifInstance403 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance403.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        this.m_maxTorque = d;
                    };
                    B.prototype.GetMaxTorque = function () {
                        return this.m_maxTorque;
                    };
                    B.prototype.b2FrictionJoint = function (d) {
                        (() => {
                            const __callInstance249 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.b2Joint.call(this, d);
                                    }
                                }
                            });
                            const __exports = __callInstance249.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance248 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localAnchorA.SetV(d.localAnchorA);
                                    }
                                }
                            });
                            const __exports = __callInstance248.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance247 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localAnchorB.SetV(d.localAnchorB);
                                    }
                                }
                            });
                            const __exports = __callInstance247.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance246 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_linearMass.SetZero();
                                    }
                                }
                            });
                            const __exports = __callInstance246.exports;
                            return __exports.data();
                        })();
                        this.m_angularMass = 0;
                        (() => {
                            const __callInstance245 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_linearImpulse.SetZero();
                                    }
                                }
                            });
                            const __exports = __callInstance245.exports;
                            return __exports.data();
                        })();
                        this.m_angularImpulse = 0;
                        this.m_maxForce = d.maxForce;
                        this.m_maxTorque = d.maxTorque;
                    };
                    B.prototype.InitVelocityConstraints = function (d) {
                        var h, l = 0, j = this.m_bodyA, o = this.m_bodyB;
                        h = j.m_xf.R;
                        var q = this.m_localAnchorA.x - j.m_sweep.localCenter.x, n = this.m_localAnchorA.y - j.m_sweep.localCenter.y;
                        l = h.col1.x * q + h.col2.x * n;
                        n = h.col1.y * q + h.col2.y * n;
                        q = l;
                        h = o.m_xf.R;
                        var a = this.m_localAnchorB.x - o.m_sweep.localCenter.x, c = this.m_localAnchorB.y - o.m_sweep.localCenter.y;
                        l = h.col1.x * a + h.col2.x * c;
                        c = h.col1.y * a + h.col2.y * c;
                        a = l;
                        h = j.m_invMass;
                        l = o.m_invMass;
                        var g = j.m_invI, b = o.m_invI, e = new G();
                        e.col1.x = h + l;
                        e.col2.x = 0;
                        e.col1.y = 0;
                        e.col2.y = h + l;
                        e.col1.x += g * n * n;
                        e.col2.x += -g * q * n;
                        e.col1.y += -g * q * n;
                        e.col2.y += g * q * q;
                        e.col1.x += b * c * c;
                        e.col2.x += -b * a * c;
                        e.col1.y += -b * a * c;
                        e.col2.y += b * a * a;
                        (() => {
                            const __callInstance244 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        e.GetInverse(this.m_linearMass);
                                    }
                                }
                            });
                            const __exports = __callInstance244.exports;
                            return __exports.data();
                        })();
                        this.m_angularMass = g + b;
                        (() => {
                            const __ifInstance404 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_angularMass = 1 / this.m_angularMass;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance404.exports;
                            return __exports.data(this.m_angularMass > 0 ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance405 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            this.m_linearImpulse.x *= d.dtRatio;
                                            this.m_linearImpulse.y *= d.dtRatio;
                                            this.m_angularImpulse *= d.dtRatio;
                                            d = this.m_linearImpulse;
                                            j.m_linearVelocity.x -= h * d.x;
                                            j.m_linearVelocity.y -= h * d.y;
                                            j.m_angularVelocity -= g * (q * d.y - n * d.x + this.m_angularImpulse);
                                            o.m_linearVelocity.x += l * d.x;
                                            o.m_linearVelocity.y += l * d.y;
                                            o.m_angularVelocity += b * (a * d.y - c * d.x + this.m_angularImpulse);
                                        }
                                    },
                                    impFunc2: () => {
                                        {
                                            (() => {
                                                const __callInstance243 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_linearImpulse.SetZero();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance243.exports;
                                                return __exports.data();
                                            })();
                                            this.m_angularImpulse = 0;
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance405.exports;
                            return __exports.data(d.warmStarting ? 1 : 0);
                        })();
                    };
                    B.prototype.SolveVelocityConstraints = function (d) {
                        var h, l = 0, j = this.m_bodyA, o = this.m_bodyB, q = j.m_linearVelocity, n = j.m_angularVelocity, a = o.m_linearVelocity, c = o.m_angularVelocity, g = j.m_invMass, b = o.m_invMass, e = j.m_invI, f = o.m_invI;
                        h = j.m_xf.R;
                        var m = this.m_localAnchorA.x - j.m_sweep.localCenter.x, r = this.m_localAnchorA.y - j.m_sweep.localCenter.y;
                        l = h.col1.x * m + h.col2.x * r;
                        r = h.col1.y * m + h.col2.y * r;
                        m = l;
                        h = o.m_xf.R;
                        var s = this.m_localAnchorB.x - o.m_sweep.localCenter.x, v = this.m_localAnchorB.y - o.m_sweep.localCenter.y;
                        l = h.col1.x * s + h.col2.x * v;
                        v = h.col1.y * s + h.col2.y * v;
                        s = l;
                        h = 0;
                        l = -this.m_angularMass * (c - n);
                        var t = this.m_angularImpulse;
                        h = d.dt * this.m_maxTorque;
                        this.m_angularImpulse = y.Clamp(this.m_angularImpulse + l, -h, h);
                        l = this.m_angularImpulse - t;
                        n -= e * l;
                        c += f * l;
                        h = y.MulMV(this.m_linearMass, new w(-(a.x - c * v - q.x + n * r), -(a.y + c * s - q.y - n * m)));
                        l = this.m_linearImpulse.Copy();
                        (() => {
                            const __callInstance242 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_linearImpulse.Add(h);
                                    }
                                }
                            });
                            const __exports = __callInstance242.exports;
                            return __exports.data();
                        })();
                        h = d.dt * this.m_maxForce;
                        (() => {
                            const __ifInstance406 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            (() => {
                                                const __callInstance241 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_linearImpulse.Normalize();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance241.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance240 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_linearImpulse.Multiply(h);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance240.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance406.exports;
                            return __exports.data(this.m_linearImpulse.LengthSquared() > h * h ? 1 : 0);
                        })();
                        h = y.SubtractVV(this.m_linearImpulse, l);
                        q.x -= g * h.x;
                        q.y -= g * h.y;
                        n -= e * (m * h.y - r * h.x);
                        a.x += b * h.x;
                        a.y += b * h.y;
                        c += f * (s * h.y - v * h.x);
                        j.m_angularVelocity = n;
                        o.m_angularVelocity = c;
                    };
                    B.prototype.SolvePositionConstraints = function () {
                        return true;
                    };
                    (() => {
                        const __callInstance239 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(Q, Box2D.Dynamics.Joints.b2JointDef);
                                }
                            }
                        });
                        const __exports = __callInstance239.exports;
                        return __exports.data();
                    })();
                    Q.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;
                    Q.b2FrictionJointDef = function () {
                        (() => {
                            const __callInstance238 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance238.exports;
                            return __exports.data();
                        })();
                        this.localAnchorA = new w();
                        this.localAnchorB = new w();
                    };
                    Q.prototype.b2FrictionJointDef = function () {
                        (() => {
                            const __callInstance237 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.b2JointDef.call(this);
                                    }
                                }
                            });
                            const __exports = __callInstance237.exports;
                            return __exports.data();
                        })();
                        this.type = I.e_frictionJoint;
                        this.maxTorque = this.maxForce = 0;
                    };
                    Q.prototype.Initialize = function (d, h, l) {
                        this.bodyA = d;
                        this.bodyB = h;
                        (() => {
                            const __callInstance236 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.localAnchorA.SetV(this.bodyA.GetLocalPoint(l));
                                    }
                                }
                            });
                            const __exports = __callInstance236.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance235 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.localAnchorB.SetV(this.bodyB.GetLocalPoint(l));
                                    }
                                }
                            });
                            const __exports = __callInstance235.exports;
                            return __exports.data();
                        })();
                    };
                    (() => {
                        const __callInstance234 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(V, Box2D.Dynamics.Joints.b2Joint);
                                }
                            }
                        });
                        const __exports = __callInstance234.exports;
                        return __exports.data();
                    })();
                    V.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;
                    V.b2GearJoint = function () {
                        (() => {
                            const __callInstance233 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance233.exports;
                            return __exports.data();
                        })();
                        this.m_groundAnchor1 = new w();
                        this.m_groundAnchor2 = new w();
                        this.m_localAnchor1 = new w();
                        this.m_localAnchor2 = new w();
                        this.m_J = new L();
                    };
                    V.prototype.GetAnchorA = function () {
                        return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);
                    };
                    V.prototype.GetAnchorB = function () {
                        return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);
                    };
                    V.prototype.GetReactionForce = function (d) {
                        (() => {
                            const __ifInstance407 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance407.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        return new w(d * this.m_impulse * this.m_J.linearB.x, d * this.m_impulse * this.m_J.linearB.y);
                    };
                    V.prototype.GetReactionTorque = function (d) {
                        (() => {
                            const __ifInstance408 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance408.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        var h = this.m_bodyB.m_xf.R, l = this.m_localAnchor1.x - this.m_bodyB.m_sweep.localCenter.x, j = this.m_localAnchor1.y - this.m_bodyB.m_sweep.localCenter.y, o = h.col1.x * l + h.col2.x * j;
                        j = h.col1.y * l + h.col2.y * j;
                        l = o;
                        return d * (this.m_impulse * this.m_J.angularB - l * this.m_impulse * this.m_J.linearB.y + j * this.m_impulse * this.m_J.linearB.x);
                    };
                    V.prototype.GetRatio = function () {
                        return this.m_ratio;
                    };
                    V.prototype.SetRatio = function (d) {
                        (() => {
                            const __ifInstance409 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance409.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        this.m_ratio = d;
                    };
                    V.prototype.b2GearJoint = function (d) {
                        (() => {
                            const __callInstance232 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.b2Joint.call(this, d);
                                    }
                                }
                            });
                            const __exports = __callInstance232.exports;
                            return __exports.data();
                        })();
                        var h = parseInt(d.joint1.m_type), l = parseInt(d.joint2.m_type);
                        this.m_prismatic2 = this.m_revolute2 = this.m_prismatic1 = this.m_revolute1 = null;
                        var j = 0, o = 0;
                        this.m_ground1 = d.joint1.GetBodyA();
                        this.m_bodyA = d.joint1.GetBodyB();
                        (() => {
                            const __ifInstance410 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            this.m_revolute1 = d.joint1 instanceof N ? d.joint1 : null;
                                            (() => {
                                                const __callInstance231 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_groundAnchor1.SetV(this.m_revolute1.m_localAnchor1);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance231.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance230 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_localAnchor1.SetV(this.m_revolute1.m_localAnchor2);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance230.exports;
                                                return __exports.data();
                                            })();
                                            j = this.m_revolute1.GetJointAngle();
                                        }
                                    },
                                    impFunc2: () => {
                                        {
                                            this.m_prismatic1 = d.joint1 instanceof H ? d.joint1 : null;
                                            (() => {
                                                const __callInstance229 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_groundAnchor1.SetV(this.m_prismatic1.m_localAnchor1);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance229.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance228 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_localAnchor1.SetV(this.m_prismatic1.m_localAnchor2);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance228.exports;
                                                return __exports.data();
                                            })();
                                            j = this.m_prismatic1.GetJointTranslation();
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance410.exports;
                            return __exports.data(h == I.e_revoluteJoint ? 1 : 0);
                        })();
                        this.m_ground2 = d.joint2.GetBodyA();
                        this.m_bodyB = d.joint2.GetBodyB();
                        (() => {
                            const __ifInstance411 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            this.m_revolute2 = d.joint2 instanceof N ? d.joint2 : null;
                                            (() => {
                                                const __callInstance227 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_groundAnchor2.SetV(this.m_revolute2.m_localAnchor1);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance227.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance226 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_localAnchor2.SetV(this.m_revolute2.m_localAnchor2);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance226.exports;
                                                return __exports.data();
                                            })();
                                            o = this.m_revolute2.GetJointAngle();
                                        }
                                    },
                                    impFunc2: () => {
                                        {
                                            this.m_prismatic2 = d.joint2 instanceof H ? d.joint2 : null;
                                            (() => {
                                                const __callInstance225 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_groundAnchor2.SetV(this.m_prismatic2.m_localAnchor1);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance225.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance224 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_localAnchor2.SetV(this.m_prismatic2.m_localAnchor2);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance224.exports;
                                                return __exports.data();
                                            })();
                                            o = this.m_prismatic2.GetJointTranslation();
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance411.exports;
                            return __exports.data(l == I.e_revoluteJoint ? 1 : 0);
                        })();
                        this.m_ratio = d.ratio;
                        this.m_constant = j + this.m_ratio * o;
                        this.m_impulse = 0;
                    };
                    V.prototype.InitVelocityConstraints = function (d) {
                        var h = this.m_ground1, l = this.m_ground2, j = this.m_bodyA, o = this.m_bodyB, q = 0, n = 0, a = 0, c = 0, g = a = 0, b = 0;
                        (() => {
                            const __callInstance223 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_J.SetZero();
                                    }
                                }
                            });
                            const __exports = __callInstance223.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __ifInstance412 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            this.m_J.angularA = -1;
                                            b += j.m_invI;
                                        }
                                    },
                                    impFunc2: () => {
                                        {
                                            h = h.m_xf.R;
                                            n = this.m_prismatic1.m_localXAxis1;
                                            q = h.col1.x * n.x + h.col2.x * n.y;
                                            n = h.col1.y * n.x + h.col2.y * n.y;
                                            h = j.m_xf.R;
                                            a = this.m_localAnchor1.x - j.m_sweep.localCenter.x;
                                            c = this.m_localAnchor1.y - j.m_sweep.localCenter.y;
                                            g = h.col1.x * a + h.col2.x * c;
                                            c = h.col1.y * a + h.col2.y * c;
                                            a = g;
                                            a = a * n - c * q;
                                            (() => {
                                                const __callInstance222 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_J.linearA.Set(-q, -n);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance222.exports;
                                                return __exports.data();
                                            })();
                                            this.m_J.angularA = -a;
                                            b += j.m_invMass + j.m_invI * a * a;
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance412.exports;
                            return __exports.data(this.m_revolute1 ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance413 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            this.m_J.angularB = -this.m_ratio;
                                            b += this.m_ratio * this.m_ratio * o.m_invI;
                                        }
                                    },
                                    impFunc2: () => {
                                        {
                                            h = l.m_xf.R;
                                            n = this.m_prismatic2.m_localXAxis1;
                                            q = h.col1.x * n.x + h.col2.x * n.y;
                                            n = h.col1.y * n.x + h.col2.y * n.y;
                                            h = o.m_xf.R;
                                            a = this.m_localAnchor2.x - o.m_sweep.localCenter.x;
                                            c = this.m_localAnchor2.y - o.m_sweep.localCenter.y;
                                            g = h.col1.x * a + h.col2.x * c;
                                            c = h.col1.y * a + h.col2.y * c;
                                            a = g;
                                            a = a * n - c * q;
                                            (() => {
                                                const __callInstance221 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_J.linearB.Set(-this.m_ratio * q, -this.m_ratio * n);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance221.exports;
                                                return __exports.data();
                                            })();
                                            this.m_J.angularB = -this.m_ratio * a;
                                            b += this.m_ratio * this.m_ratio * (o.m_invMass + o.m_invI * a * a);
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance413.exports;
                            return __exports.data(this.m_revolute2 ? 1 : 0);
                        })();
                        this.m_mass = b > 0 ? 1 / b : 0;
                        (() => {
                            const __ifInstance414 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            j.m_linearVelocity.x += j.m_invMass * this.m_impulse * this.m_J.linearA.x;
                                            j.m_linearVelocity.y += j.m_invMass * this.m_impulse * this.m_J.linearA.y;
                                            j.m_angularVelocity += j.m_invI * this.m_impulse * this.m_J.angularA;
                                            o.m_linearVelocity.x += o.m_invMass * this.m_impulse * this.m_J.linearB.x;
                                            o.m_linearVelocity.y += o.m_invMass * this.m_impulse * this.m_J.linearB.y;
                                            o.m_angularVelocity += o.m_invI * this.m_impulse * this.m_J.angularB;
                                        }
                                    },
                                    impFunc2: () => {
                                        this.m_impulse = 0;
                                    }
                                }
                            });
                            const __exports = __ifInstance414.exports;
                            return __exports.data(d.warmStarting ? 1 : 0);
                        })();
                    };
                    V.prototype.SolveVelocityConstraints = function () {
                        var d = this.m_bodyA, h = this.m_bodyB, l = -this.m_mass * this.m_J.Compute(d.m_linearVelocity, d.m_angularVelocity, h.m_linearVelocity, h.m_angularVelocity);
                        this.m_impulse += l;
                        d.m_linearVelocity.x += d.m_invMass * l * this.m_J.linearA.x;
                        d.m_linearVelocity.y += d.m_invMass * l * this.m_J.linearA.y;
                        d.m_angularVelocity += d.m_invI * l * this.m_J.angularA;
                        h.m_linearVelocity.x += h.m_invMass * l * this.m_J.linearB.x;
                        h.m_linearVelocity.y += h.m_invMass * l * this.m_J.linearB.y;
                        h.m_angularVelocity += h.m_invI * l * this.m_J.angularB;
                    };
                    V.prototype.SolvePositionConstraints = function () {
                        var d = this.m_bodyA, h = this.m_bodyB, l = 0, j = 0;
                        l = this.m_revolute1 ? this.m_revolute1.GetJointAngle() : this.m_prismatic1.GetJointTranslation();
                        j = this.m_revolute2 ? this.m_revolute2.GetJointAngle() : this.m_prismatic2.GetJointTranslation();
                        l = -this.m_mass * (this.m_constant - (l + this.m_ratio * j));
                        d.m_sweep.c.x += d.m_invMass * l * this.m_J.linearA.x;
                        d.m_sweep.c.y += d.m_invMass * l * this.m_J.linearA.y;
                        d.m_sweep.a += d.m_invI * l * this.m_J.angularA;
                        h.m_sweep.c.x += h.m_invMass * l * this.m_J.linearB.x;
                        h.m_sweep.c.y += h.m_invMass * l * this.m_J.linearB.y;
                        h.m_sweep.a += h.m_invI * l * this.m_J.angularB;
                        (() => {
                            const __callInstance220 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        d.SynchronizeTransform();
                                    }
                                }
                            });
                            const __exports = __callInstance220.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance219 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        h.SynchronizeTransform();
                                    }
                                }
                            });
                            const __exports = __callInstance219.exports;
                            return __exports.data();
                        })();
                        return 0 < F.b2_linearSlop;
                    };
                    (() => {
                        const __callInstance218 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(M, Box2D.Dynamics.Joints.b2JointDef);
                                }
                            }
                        });
                        const __exports = __callInstance218.exports;
                        return __exports.data();
                    })();
                    M.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;
                    M.b2GearJointDef = function () {
                        (() => {
                            const __callInstance217 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance217.exports;
                            return __exports.data();
                        })();
                    };
                    M.prototype.b2GearJointDef = function () {
                        (() => {
                            const __callInstance216 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.b2JointDef.call(this);
                                    }
                                }
                            });
                            const __exports = __callInstance216.exports;
                            return __exports.data();
                        })();
                        this.type = I.e_gearJoint;
                        this.joint2 = this.joint1 = null;
                        this.ratio = 1;
                    };
                    L.b2Jacobian = function () {
                        this.linearA = new w();
                        this.linearB = new w();
                    };
                    L.prototype.SetZero = function () {
                        (() => {
                            const __callInstance215 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.linearA.SetZero();
                                    }
                                }
                            });
                            const __exports = __callInstance215.exports;
                            return __exports.data();
                        })();
                        this.angularA = 0;
                        (() => {
                            const __callInstance214 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.linearB.SetZero();
                                    }
                                }
                            });
                            const __exports = __callInstance214.exports;
                            return __exports.data();
                        })();
                        this.angularB = 0;
                    };
                    L.prototype.Set = function (d, h, l, j) {
                        (() => {
                            const __ifInstance415 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        h = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance415.exports;
                            return __exports.data(h === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance416 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        j = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance416.exports;
                            return __exports.data(j === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __callInstance213 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.linearA.SetV(d);
                                    }
                                }
                            });
                            const __exports = __callInstance213.exports;
                            return __exports.data();
                        })();
                        this.angularA = h;
                        (() => {
                            const __callInstance212 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.linearB.SetV(l);
                                    }
                                }
                            });
                            const __exports = __callInstance212.exports;
                            return __exports.data();
                        })();
                        this.angularB = j;
                    };
                    L.prototype.Compute = function (d, h, l, j) {
                        (() => {
                            const __ifInstance417 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        h = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance417.exports;
                            return __exports.data(h === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance418 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        j = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance418.exports;
                            return __exports.data(j === undefined ? 1 : 0);
                        })();
                        return this.linearA.x * d.x + this.linearA.y * d.y + this.angularA * h + (this.linearB.x * l.x + this.linearB.y * l.y) + this.angularB * j;
                    };
                    I.b2Joint = function () {
                        this.m_edgeA = new Y();
                        this.m_edgeB = new Y();
                        this.m_localCenterA = new w();
                        this.m_localCenterB = new w();
                    };
                    I.prototype.GetType = function () {
                        return this.m_type;
                    };
                    I.prototype.GetAnchorA = function () {
                        return null;
                    };
                    I.prototype.GetAnchorB = function () {
                        return null;
                    };
                    I.prototype.GetReactionForce = function () {
                        return null;
                    };
                    I.prototype.GetReactionTorque = function () {
                        return 0;
                    };
                    I.prototype.GetBodyA = function () {
                        return this.m_bodyA;
                    };
                    I.prototype.GetBodyB = function () {
                        return this.m_bodyB;
                    };
                    I.prototype.GetNext = function () {
                        return this.m_next;
                    };
                    I.prototype.GetUserData = function () {
                        return this.m_userData;
                    };
                    I.prototype.SetUserData = function (d) {
                        this.m_userData = d;
                    };
                    I.prototype.IsActive = function () {
                        return this.m_bodyA.IsActive() && this.m_bodyB.IsActive();
                    };
                    I.Create = function (d) {
                        var h = null;
                        switch (d.type) {
                        case I.e_distanceJoint:
                            h = new U(d instanceof p ? d : null);
                            break;
                        case I.e_mouseJoint:
                            h = new u(d instanceof D ? d : null);
                            break;
                        case I.e_prismaticJoint:
                            h = new H(d instanceof O ? d : null);
                            break;
                        case I.e_revoluteJoint:
                            h = new N(d instanceof S ? d : null);
                            break;
                        case I.e_pulleyJoint:
                            h = new E(d instanceof R ? d : null);
                            break;
                        case I.e_gearJoint:
                            h = new V(d instanceof M ? d : null);
                            break;
                        case I.e_lineJoint:
                            h = new k(d instanceof z ? d : null);
                            break;
                        case I.e_weldJoint:
                            h = new aa(d instanceof Z ? d : null);
                            break;
                        case I.e_frictionJoint:
                            h = new B(d instanceof Q ? d : null);
                        }
                        return h;
                    };
                    I.Destroy = function () {
                    };
                    I.prototype.b2Joint = function (d) {
                        (() => {
                            const __callInstance211 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        F.b2Assert(d.bodyA != d.bodyB);
                                    }
                                }
                            });
                            const __exports = __callInstance211.exports;
                            return __exports.data();
                        })();
                        this.m_type = d.type;
                        this.m_next = this.m_prev = null;
                        this.m_bodyA = d.bodyA;
                        this.m_bodyB = d.bodyB;
                        this.m_collideConnected = d.collideConnected;
                        this.m_islandFlag = false;
                        this.m_userData = d.userData;
                    };
                    I.prototype.InitVelocityConstraints = function () {
                    };
                    I.prototype.SolveVelocityConstraints = function () {
                    };
                    I.prototype.FinalizeVelocityConstraints = function () {
                    };
                    I.prototype.SolvePositionConstraints = function () {
                        return false;
                    };
                    (() => {
                        const __callInstance210 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.postDefs.push(function () {
                                        Box2D.Dynamics.Joints.b2Joint.e_unknownJoint = 0;
                                        Box2D.Dynamics.Joints.b2Joint.e_revoluteJoint = 1;
                                        Box2D.Dynamics.Joints.b2Joint.e_prismaticJoint = 2;
                                        Box2D.Dynamics.Joints.b2Joint.e_distanceJoint = 3;
                                        Box2D.Dynamics.Joints.b2Joint.e_pulleyJoint = 4;
                                        Box2D.Dynamics.Joints.b2Joint.e_mouseJoint = 5;
                                        Box2D.Dynamics.Joints.b2Joint.e_gearJoint = 6;
                                        Box2D.Dynamics.Joints.b2Joint.e_lineJoint = 7;
                                        Box2D.Dynamics.Joints.b2Joint.e_weldJoint = 8;
                                        Box2D.Dynamics.Joints.b2Joint.e_frictionJoint = 9;
                                        Box2D.Dynamics.Joints.b2Joint.e_inactiveLimit = 0;
                                        Box2D.Dynamics.Joints.b2Joint.e_atLowerLimit = 1;
                                        Box2D.Dynamics.Joints.b2Joint.e_atUpperLimit = 2;
                                        Box2D.Dynamics.Joints.b2Joint.e_equalLimits = 3;
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance210.exports;
                        return __exports.data();
                    })();
                    W.b2JointDef = function () {
                    };
                    W.prototype.b2JointDef = function () {
                        this.type = I.e_unknownJoint;
                        this.bodyB = this.bodyA = this.userData = null;
                        this.collideConnected = false;
                    };
                    Y.b2JointEdge = function () {
                    };
                    (() => {
                        const __callInstance209 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(k, Box2D.Dynamics.Joints.b2Joint);
                                }
                            }
                        });
                        const __exports = __callInstance209.exports;
                        return __exports.data();
                    })();
                    k.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;
                    k.b2LineJoint = function () {
                        (() => {
                            const __callInstance208 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance208.exports;
                            return __exports.data();
                        })();
                        this.m_localAnchor1 = new w();
                        this.m_localAnchor2 = new w();
                        this.m_localXAxis1 = new w();
                        this.m_localYAxis1 = new w();
                        this.m_axis = new w();
                        this.m_perp = new w();
                        this.m_K = new G();
                        this.m_impulse = new w();
                    };
                    k.prototype.GetAnchorA = function () {
                        return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);
                    };
                    k.prototype.GetAnchorB = function () {
                        return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);
                    };
                    k.prototype.GetReactionForce = function (d) {
                        (() => {
                            const __ifInstance419 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance419.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        return new w(d * (this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.y) * this.m_axis.x), d * (this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.y) * this.m_axis.y));
                    };
                    k.prototype.GetReactionTorque = function (d) {
                        (() => {
                            const __ifInstance420 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance420.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        return d * this.m_impulse.y;
                    };
                    k.prototype.GetJointTranslation = function () {
                        var d = this.m_bodyA, h = this.m_bodyB, l = d.GetWorldPoint(this.m_localAnchor1), j = h.GetWorldPoint(this.m_localAnchor2);
                        h = j.x - l.x;
                        l = j.y - l.y;
                        d = d.GetWorldVector(this.m_localXAxis1);
                        return d.x * h + d.y * l;
                    };
                    k.prototype.GetJointSpeed = function () {
                        var d = this.m_bodyA, h = this.m_bodyB, l;
                        l = d.m_xf.R;
                        var j = this.m_localAnchor1.x - d.m_sweep.localCenter.x, o = this.m_localAnchor1.y - d.m_sweep.localCenter.y, q = l.col1.x * j + l.col2.x * o;
                        o = l.col1.y * j + l.col2.y * o;
                        j = q;
                        l = h.m_xf.R;
                        var n = this.m_localAnchor2.x - h.m_sweep.localCenter.x, a = this.m_localAnchor2.y - h.m_sweep.localCenter.y;
                        q = l.col1.x * n + l.col2.x * a;
                        a = l.col1.y * n + l.col2.y * a;
                        n = q;
                        l = h.m_sweep.c.x + n - (d.m_sweep.c.x + j);
                        q = h.m_sweep.c.y + a - (d.m_sweep.c.y + o);
                        var c = d.GetWorldVector(this.m_localXAxis1), g = d.m_linearVelocity, b = h.m_linearVelocity;
                        d = d.m_angularVelocity;
                        h = h.m_angularVelocity;
                        return l * -d * c.y + q * d * c.x + (c.x * (b.x + -h * a - g.x - -d * o) + c.y * (b.y + h * n - g.y - d * j));
                    };
                    k.prototype.IsLimitEnabled = function () {
                        return this.m_enableLimit;
                    };
                    k.prototype.EnableLimit = function (d) {
                        (() => {
                            const __callInstance207 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_bodyA.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance207.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance206 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_bodyB.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance206.exports;
                            return __exports.data();
                        })();
                        this.m_enableLimit = d;
                    };
                    k.prototype.GetLowerLimit = function () {
                        return this.m_lowerTranslation;
                    };
                    k.prototype.GetUpperLimit = function () {
                        return this.m_upperTranslation;
                    };
                    k.prototype.SetLimits = function (d, h) {
                        (() => {
                            const __ifInstance421 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance421.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance422 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        h = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance422.exports;
                            return __exports.data(h === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __callInstance205 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_bodyA.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance205.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance204 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_bodyB.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance204.exports;
                            return __exports.data();
                        })();
                        this.m_lowerTranslation = d;
                        this.m_upperTranslation = h;
                    };
                    k.prototype.IsMotorEnabled = function () {
                        return this.m_enableMotor;
                    };
                    k.prototype.EnableMotor = function (d) {
                        (() => {
                            const __callInstance203 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_bodyA.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance203.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance202 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_bodyB.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance202.exports;
                            return __exports.data();
                        })();
                        this.m_enableMotor = d;
                    };
                    k.prototype.SetMotorSpeed = function (d) {
                        (() => {
                            const __ifInstance423 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance423.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __callInstance201 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_bodyA.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance201.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance200 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_bodyB.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance200.exports;
                            return __exports.data();
                        })();
                        this.m_motorSpeed = d;
                    };
                    k.prototype.GetMotorSpeed = function () {
                        return this.m_motorSpeed;
                    };
                    k.prototype.SetMaxMotorForce = function (d) {
                        (() => {
                            const __ifInstance424 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance424.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __callInstance199 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_bodyA.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance199.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance198 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_bodyB.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance198.exports;
                            return __exports.data();
                        })();
                        this.m_maxMotorForce = d;
                    };
                    k.prototype.GetMaxMotorForce = function () {
                        return this.m_maxMotorForce;
                    };
                    k.prototype.GetMotorForce = function () {
                        return this.m_motorImpulse;
                    };
                    k.prototype.b2LineJoint = function (d) {
                        (() => {
                            const __callInstance197 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.b2Joint.call(this, d);
                                    }
                                }
                            });
                            const __exports = __callInstance197.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance196 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localAnchor1.SetV(d.localAnchorA);
                                    }
                                }
                            });
                            const __exports = __callInstance196.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance195 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localAnchor2.SetV(d.localAnchorB);
                                    }
                                }
                            });
                            const __exports = __callInstance195.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance194 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localXAxis1.SetV(d.localAxisA);
                                    }
                                }
                            });
                            const __exports = __callInstance194.exports;
                            return __exports.data();
                        })();
                        this.m_localYAxis1.x = -this.m_localXAxis1.y;
                        this.m_localYAxis1.y = this.m_localXAxis1.x;
                        (() => {
                            const __callInstance193 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_impulse.SetZero();
                                    }
                                }
                            });
                            const __exports = __callInstance193.exports;
                            return __exports.data();
                        })();
                        this.m_motorImpulse = this.m_motorMass = 0;
                        this.m_lowerTranslation = d.lowerTranslation;
                        this.m_upperTranslation = d.upperTranslation;
                        this.m_maxMotorForce = d.maxMotorForce;
                        this.m_motorSpeed = d.motorSpeed;
                        this.m_enableLimit = d.enableLimit;
                        this.m_enableMotor = d.enableMotor;
                        this.m_limitState = I.e_inactiveLimit;
                        (() => {
                            const __callInstance192 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_axis.SetZero();
                                    }
                                }
                            });
                            const __exports = __callInstance192.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance191 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_perp.SetZero();
                                    }
                                }
                            });
                            const __exports = __callInstance191.exports;
                            return __exports.data();
                        })();
                    };
                    k.prototype.InitVelocityConstraints = function (d) {
                        var h = this.m_bodyA, l = this.m_bodyB, j, o = 0;
                        (() => {
                            const __callInstance190 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localCenterA.SetV(h.GetLocalCenter());
                                    }
                                }
                            });
                            const __exports = __callInstance190.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance189 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localCenterB.SetV(l.GetLocalCenter());
                                    }
                                }
                            });
                            const __exports = __callInstance189.exports;
                            return __exports.data();
                        })();
                        var q = h.GetTransform();
                        (() => {
                            const __callInstance188 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        l.GetTransform();
                                    }
                                }
                            });
                            const __exports = __callInstance188.exports;
                            return __exports.data();
                        })();
                        j = h.m_xf.R;
                        var n = this.m_localAnchor1.x - this.m_localCenterA.x, a = this.m_localAnchor1.y - this.m_localCenterA.y;
                        o = j.col1.x * n + j.col2.x * a;
                        a = j.col1.y * n + j.col2.y * a;
                        n = o;
                        j = l.m_xf.R;
                        var c = this.m_localAnchor2.x - this.m_localCenterB.x, g = this.m_localAnchor2.y - this.m_localCenterB.y;
                        o = j.col1.x * c + j.col2.x * g;
                        g = j.col1.y * c + j.col2.y * g;
                        c = o;
                        j = l.m_sweep.c.x + c - h.m_sweep.c.x - n;
                        o = l.m_sweep.c.y + g - h.m_sweep.c.y - a;
                        this.m_invMassA = h.m_invMass;
                        this.m_invMassB = l.m_invMass;
                        this.m_invIA = h.m_invI;
                        this.m_invIB = l.m_invI;
                        (() => {
                            const __callInstance187 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_axis.SetV(y.MulMV(q.R, this.m_localXAxis1));
                                    }
                                }
                            });
                            const __exports = __callInstance187.exports;
                            return __exports.data();
                        })();
                        this.m_a1 = (j + n) * this.m_axis.y - (o + a) * this.m_axis.x;
                        this.m_a2 = c * this.m_axis.y - g * this.m_axis.x;
                        this.m_motorMass = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_a1 * this.m_a1 + this.m_invIB * this.m_a2 * this.m_a2;
                        this.m_motorMass = this.m_motorMass > Number.MIN_VALUE ? 1 / this.m_motorMass : 0;
                        (() => {
                            const __callInstance186 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_perp.SetV(y.MulMV(q.R, this.m_localYAxis1));
                                    }
                                }
                            });
                            const __exports = __callInstance186.exports;
                            return __exports.data();
                        })();
                        this.m_s1 = (j + n) * this.m_perp.y - (o + a) * this.m_perp.x;
                        this.m_s2 = c * this.m_perp.y - g * this.m_perp.x;
                        q = this.m_invMassA;
                        n = this.m_invMassB;
                        a = this.m_invIA;
                        c = this.m_invIB;
                        this.m_K.col1.x = q + n + a * this.m_s1 * this.m_s1 + c * this.m_s2 * this.m_s2;
                        this.m_K.col1.y = a * this.m_s1 * this.m_a1 + c * this.m_s2 * this.m_a2;
                        this.m_K.col2.x = this.m_K.col1.y;
                        this.m_K.col2.y = q + n + a * this.m_a1 * this.m_a1 + c * this.m_a2 * this.m_a2;
                        (() => {
                            const __ifInstance425 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            j = this.m_axis.x * j + this.m_axis.y * o;
                                            (() => {
                                                const __ifInstance426 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            this.m_limitState = I.e_equalLimits;
                                                        },
                                                        impFunc2: () => {
                                                            (() => {
                                                                const __ifInstance427 = new WebAssembly.Instance(__ifWasmModule, {
                                                                    env: {
                                                                        impFunc1: () => {
                                                                            {
                                                                                (() => {
                                                                                    const __ifInstance428 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                        env: {
                                                                                            impFunc1: () => {
                                                                                                {
                                                                                                    this.m_limitState = I.e_atLowerLimit;
                                                                                                    this.m_impulse.y = 0;
                                                                                                }
                                                                                            },
                                                                                            impFunc2: () => {
                                                                                            }
                                                                                        }
                                                                                    });
                                                                                    const __exports = __ifInstance428.exports;
                                                                                    return __exports.data(this.m_limitState != I.e_atLowerLimit ? 1 : 0);
                                                                                })();
                                                                            }
                                                                        },
                                                                        impFunc2: () => {
                                                                            (() => {
                                                                                const __ifInstance429 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                    env: {
                                                                                        impFunc1: () => {
                                                                                            {
                                                                                                (() => {
                                                                                                    const __ifInstance430 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                        env: {
                                                                                                            impFunc1: () => {
                                                                                                                {
                                                                                                                    this.m_limitState = I.e_atUpperLimit;
                                                                                                                    this.m_impulse.y = 0;
                                                                                                                }
                                                                                                            },
                                                                                                            impFunc2: () => {
                                                                                                            }
                                                                                                        }
                                                                                                    });
                                                                                                    const __exports = __ifInstance430.exports;
                                                                                                    return __exports.data(this.m_limitState != I.e_atUpperLimit ? 1 : 0);
                                                                                                })();
                                                                                            }
                                                                                        },
                                                                                        impFunc2: () => {
                                                                                            {
                                                                                                this.m_limitState = I.e_inactiveLimit;
                                                                                                this.m_impulse.y = 0;
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                });
                                                                                const __exports = __ifInstance429.exports;
                                                                                return __exports.data(j >= this.m_upperTranslation ? 1 : 0);
                                                                            })();
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __ifInstance427.exports;
                                                                return __exports.data(j <= this.m_lowerTranslation ? 1 : 0);
                                                            })();
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance426.exports;
                                                return __exports.data(y.Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2 * F.b2_linearSlop ? 1 : 0);
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                        this.m_limitState = I.e_inactiveLimit;
                                    }
                                }
                            });
                            const __exports = __ifInstance425.exports;
                            return __exports.data(this.m_enableLimit ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance431 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_motorImpulse = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance431.exports;
                            return __exports.data(this.m_enableMotor == false ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance432 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            this.m_impulse.x *= d.dtRatio;
                                            this.m_impulse.y *= d.dtRatio;
                                            this.m_motorImpulse *= d.dtRatio;
                                            d = this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.y) * this.m_axis.x;
                                            j = this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.y) * this.m_axis.y;
                                            o = this.m_impulse.x * this.m_s1 + (this.m_motorImpulse + this.m_impulse.y) * this.m_a1;
                                            q = this.m_impulse.x * this.m_s2 + (this.m_motorImpulse + this.m_impulse.y) * this.m_a2;
                                            h.m_linearVelocity.x -= this.m_invMassA * d;
                                            h.m_linearVelocity.y -= this.m_invMassA * j;
                                            h.m_angularVelocity -= this.m_invIA * o;
                                            l.m_linearVelocity.x += this.m_invMassB * d;
                                            l.m_linearVelocity.y += this.m_invMassB * j;
                                            l.m_angularVelocity += this.m_invIB * q;
                                        }
                                    },
                                    impFunc2: () => {
                                        {
                                            (() => {
                                                const __callInstance185 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_impulse.SetZero();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance185.exports;
                                                return __exports.data();
                                            })();
                                            this.m_motorImpulse = 0;
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance432.exports;
                            return __exports.data(d.warmStarting ? 1 : 0);
                        })();
                    };
                    k.prototype.SolveVelocityConstraints = function (d) {
                        var h = this.m_bodyA, l = this.m_bodyB, j = h.m_linearVelocity, o = h.m_angularVelocity, q = l.m_linearVelocity, n = l.m_angularVelocity, a = 0, c = 0, g = 0, b = 0;
                        (() => {
                            const __ifInstance433 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            b = this.m_motorMass * (this.m_motorSpeed - (this.m_axis.x * (q.x - j.x) + this.m_axis.y * (q.y - j.y) + this.m_a2 * n - this.m_a1 * o));
                                            a = this.m_motorImpulse;
                                            c = d.dt * this.m_maxMotorForce;
                                            this.m_motorImpulse = y.Clamp(this.m_motorImpulse + b, -c, c);
                                            b = this.m_motorImpulse - a;
                                            a = b * this.m_axis.x;
                                            c = b * this.m_axis.y;
                                            g = b * this.m_a1;
                                            b = b * this.m_a2;
                                            j.x -= this.m_invMassA * a;
                                            j.y -= this.m_invMassA * c;
                                            o -= this.m_invIA * g;
                                            q.x += this.m_invMassB * a;
                                            q.y += this.m_invMassB * c;
                                            n += this.m_invIB * b;
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance433.exports;
                            return __exports.data(this.m_enableMotor && this.m_limitState != I.e_equalLimits ? 1 : 0);
                        })();
                        c = this.m_perp.x * (q.x - j.x) + this.m_perp.y * (q.y - j.y) + this.m_s2 * n - this.m_s1 * o;
                        (() => {
                            const __ifInstance434 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            g = this.m_axis.x * (q.x - j.x) + this.m_axis.y * (q.y - j.y) + this.m_a2 * n - this.m_a1 * o;
                                            a = this.m_impulse.Copy();
                                            d = this.m_K.Solve(new w(), -c, -g);
                                            (() => {
                                                const __callInstance184 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_impulse.Add(d);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance184.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __ifInstance435 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            this.m_impulse.y = y.Max(this.m_impulse.y, 0);
                                                        },
                                                        impFunc2: () => {
                                                            (() => {
                                                                const __ifInstance436 = new WebAssembly.Instance(__ifWasmModule, {
                                                                    env: {
                                                                        impFunc1: () => {
                                                                            this.m_impulse.y = y.Min(this.m_impulse.y, 0);
                                                                        },
                                                                        impFunc2: () => {
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __ifInstance436.exports;
                                                                return __exports.data(this.m_limitState == I.e_atUpperLimit ? 1 : 0);
                                                            })();
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance435.exports;
                                                return __exports.data(this.m_limitState == I.e_atLowerLimit ? 1 : 0);
                                            })();
                                            c = -c - (this.m_impulse.y - a.y) * this.m_K.col2.x;
                                            g = 0;
                                            g = this.m_K.col1.x != 0 ? c / this.m_K.col1.x + a.x : a.x;
                                            this.m_impulse.x = g;
                                            d.x = this.m_impulse.x - a.x;
                                            d.y = this.m_impulse.y - a.y;
                                            a = d.x * this.m_perp.x + d.y * this.m_axis.x;
                                            c = d.x * this.m_perp.y + d.y * this.m_axis.y;
                                            g = d.x * this.m_s1 + d.y * this.m_a1;
                                            b = d.x * this.m_s2 + d.y * this.m_a2;
                                        }
                                    },
                                    impFunc2: () => {
                                        {
                                            d = 0;
                                            d = this.m_K.col1.x != 0 ? -c / this.m_K.col1.x : 0;
                                            this.m_impulse.x += d;
                                            a = d * this.m_perp.x;
                                            c = d * this.m_perp.y;
                                            g = d * this.m_s1;
                                            b = d * this.m_s2;
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance434.exports;
                            return __exports.data(this.m_enableLimit && this.m_limitState != I.e_inactiveLimit ? 1 : 0);
                        })();
                        j.x -= this.m_invMassA * a;
                        j.y -= this.m_invMassA * c;
                        o -= this.m_invIA * g;
                        q.x += this.m_invMassB * a;
                        q.y += this.m_invMassB * c;
                        n += this.m_invIB * b;
                        (() => {
                            const __callInstance183 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        h.m_linearVelocity.SetV(j);
                                    }
                                }
                            });
                            const __exports = __callInstance183.exports;
                            return __exports.data();
                        })();
                        h.m_angularVelocity = o;
                        (() => {
                            const __callInstance182 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        l.m_linearVelocity.SetV(q);
                                    }
                                }
                            });
                            const __exports = __callInstance182.exports;
                            return __exports.data();
                        })();
                        l.m_angularVelocity = n;
                    };
                    k.prototype.SolvePositionConstraints = function () {
                        var d = this.m_bodyA, h = this.m_bodyB, l = d.m_sweep.c, j = d.m_sweep.a, o = h.m_sweep.c, q = h.m_sweep.a, n, a = 0, c = 0, g = 0, b = 0, e = n = 0, f = 0;
                        c = false;
                        var m = 0, r = G.FromAngle(j);
                        g = G.FromAngle(q);
                        n = r;
                        f = this.m_localAnchor1.x - this.m_localCenterA.x;
                        var s = this.m_localAnchor1.y - this.m_localCenterA.y;
                        a = n.col1.x * f + n.col2.x * s;
                        s = n.col1.y * f + n.col2.y * s;
                        f = a;
                        n = g;
                        g = this.m_localAnchor2.x - this.m_localCenterB.x;
                        b = this.m_localAnchor2.y - this.m_localCenterB.y;
                        a = n.col1.x * g + n.col2.x * b;
                        b = n.col1.y * g + n.col2.y * b;
                        g = a;
                        n = o.x + g - l.x - f;
                        a = o.y + b - l.y - s;
                        (() => {
                            const __ifInstance437 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            this.m_axis = y.MulMV(r, this.m_localXAxis1);
                                            this.m_a1 = (n + f) * this.m_axis.y - (a + s) * this.m_axis.x;
                                            this.m_a2 = g * this.m_axis.y - b * this.m_axis.x;
                                            var v = this.m_axis.x * n + this.m_axis.y * a;
                                            (() => {
                                                const __ifInstance438 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                m = y.Clamp(v, -F.b2_maxLinearCorrection, F.b2_maxLinearCorrection);
                                                                e = y.Abs(v);
                                                                c = true;
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                            (() => {
                                                                const __ifInstance439 = new WebAssembly.Instance(__ifWasmModule, {
                                                                    env: {
                                                                        impFunc1: () => {
                                                                            {
                                                                                m = y.Clamp(v - this.m_lowerTranslation + F.b2_linearSlop, -F.b2_maxLinearCorrection, 0);
                                                                                e = this.m_lowerTranslation - v;
                                                                                c = true;
                                                                            }
                                                                        },
                                                                        impFunc2: () => {
                                                                            (() => {
                                                                                const __ifInstance440 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                    env: {
                                                                                        impFunc1: () => {
                                                                                            {
                                                                                                m = y.Clamp(v - this.m_upperTranslation + F.b2_linearSlop, 0, F.b2_maxLinearCorrection);
                                                                                                e = v - this.m_upperTranslation;
                                                                                                c = true;
                                                                                            }
                                                                                        },
                                                                                        impFunc2: () => {
                                                                                        }
                                                                                    }
                                                                                });
                                                                                const __exports = __ifInstance440.exports;
                                                                                return __exports.data(v >= this.m_upperTranslation ? 1 : 0);
                                                                            })();
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __ifInstance439.exports;
                                                                return __exports.data(v <= this.m_lowerTranslation ? 1 : 0);
                                                            })();
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance438.exports;
                                                return __exports.data(y.Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2 * F.b2_linearSlop ? 1 : 0);
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance437.exports;
                            return __exports.data(this.m_enableLimit ? 1 : 0);
                        })();
                        this.m_perp = y.MulMV(r, this.m_localYAxis1);
                        this.m_s1 = (n + f) * this.m_perp.y - (a + s) * this.m_perp.x;
                        this.m_s2 = g * this.m_perp.y - b * this.m_perp.x;
                        r = new w();
                        s = this.m_perp.x * n + this.m_perp.y * a;
                        e = y.Max(e, y.Abs(s));
                        f = 0;
                        (() => {
                            const __ifInstance441 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            c = this.m_invMassA;
                                            g = this.m_invMassB;
                                            b = this.m_invIA;
                                            n = this.m_invIB;
                                            this.m_K.col1.x = c + g + b * this.m_s1 * this.m_s1 + n * this.m_s2 * this.m_s2;
                                            this.m_K.col1.y = b * this.m_s1 * this.m_a1 + n * this.m_s2 * this.m_a2;
                                            this.m_K.col2.x = this.m_K.col1.y;
                                            this.m_K.col2.y = c + g + b * this.m_a1 * this.m_a1 + n * this.m_a2 * this.m_a2;
                                            (() => {
                                                const __callInstance181 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_K.Solve(r, -s, -m);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance181.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                        {
                                            c = this.m_invMassA;
                                            g = this.m_invMassB;
                                            b = this.m_invIA;
                                            n = this.m_invIB;
                                            m = c + g + b * this.m_s1 * this.m_s1 + n * this.m_s2 * this.m_s2;
                                            c = 0;
                                            c = m != 0 ? -s / m : 0;
                                            r.x = c;
                                            r.y = 0;
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance441.exports;
                            return __exports.data(c ? 1 : 0);
                        })();
                        m = r.x * this.m_perp.x + r.y * this.m_axis.x;
                        c = r.x * this.m_perp.y + r.y * this.m_axis.y;
                        s = r.x * this.m_s1 + r.y * this.m_a1;
                        r = r.x * this.m_s2 + r.y * this.m_a2;
                        l.x -= this.m_invMassA * m;
                        l.y -= this.m_invMassA * c;
                        j -= this.m_invIA * s;
                        o.x += this.m_invMassB * m;
                        o.y += this.m_invMassB * c;
                        q += this.m_invIB * r;
                        d.m_sweep.a = j;
                        h.m_sweep.a = q;
                        (() => {
                            const __callInstance180 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        d.SynchronizeTransform();
                                    }
                                }
                            });
                            const __exports = __callInstance180.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance179 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        h.SynchronizeTransform();
                                    }
                                }
                            });
                            const __exports = __callInstance179.exports;
                            return __exports.data();
                        })();
                        return e <= F.b2_linearSlop && f <= F.b2_angularSlop;
                    };
                    (() => {
                        const __callInstance178 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(z, Box2D.Dynamics.Joints.b2JointDef);
                                }
                            }
                        });
                        const __exports = __callInstance178.exports;
                        return __exports.data();
                    })();
                    z.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;
                    z.b2LineJointDef = function () {
                        (() => {
                            const __callInstance177 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance177.exports;
                            return __exports.data();
                        })();
                        this.localAnchorA = new w();
                        this.localAnchorB = new w();
                        this.localAxisA = new w();
                    };
                    z.prototype.b2LineJointDef = function () {
                        (() => {
                            const __callInstance176 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.b2JointDef.call(this);
                                    }
                                }
                            });
                            const __exports = __callInstance176.exports;
                            return __exports.data();
                        })();
                        this.type = I.e_lineJoint;
                        (() => {
                            const __callInstance175 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.localAxisA.Set(1, 0);
                                    }
                                }
                            });
                            const __exports = __callInstance175.exports;
                            return __exports.data();
                        })();
                        this.enableLimit = false;
                        this.upperTranslation = this.lowerTranslation = 0;
                        this.enableMotor = false;
                        this.motorSpeed = this.maxMotorForce = 0;
                    };
                    z.prototype.Initialize = function (d, h, l, j) {
                        this.bodyA = d;
                        this.bodyB = h;
                        this.localAnchorA = this.bodyA.GetLocalPoint(l);
                        this.localAnchorB = this.bodyB.GetLocalPoint(l);
                        this.localAxisA = this.bodyA.GetLocalVector(j);
                    };
                    (() => {
                        const __callInstance174 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(u, Box2D.Dynamics.Joints.b2Joint);
                                }
                            }
                        });
                        const __exports = __callInstance174.exports;
                        return __exports.data();
                    })();
                    u.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;
                    u.b2MouseJoint = function () {
                        (() => {
                            const __callInstance173 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance173.exports;
                            return __exports.data();
                        })();
                        this.K = new G();
                        this.K1 = new G();
                        this.K2 = new G();
                        this.m_localAnchor = new w();
                        this.m_target = new w();
                        this.m_impulse = new w();
                        this.m_mass = new G();
                        this.m_C = new w();
                    };
                    u.prototype.GetAnchorA = function () {
                        return this.m_target;
                    };
                    u.prototype.GetAnchorB = function () {
                        return this.m_bodyB.GetWorldPoint(this.m_localAnchor);
                    };
                    u.prototype.GetReactionForce = function (d) {
                        (() => {
                            const __ifInstance442 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance442.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        return new w(d * this.m_impulse.x, d * this.m_impulse.y);
                    };
                    u.prototype.GetReactionTorque = function () {
                        return 0;
                    };
                    u.prototype.GetTarget = function () {
                        return this.m_target;
                    };
                    u.prototype.SetTarget = function (d) {
                        this.m_bodyB.IsAwake() == false && this.m_bodyB.SetAwake(true);
                        this.m_target = d;
                    };
                    u.prototype.GetMaxForce = function () {
                        return this.m_maxForce;
                    };
                    u.prototype.SetMaxForce = function (d) {
                        (() => {
                            const __ifInstance443 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance443.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        this.m_maxForce = d;
                    };
                    u.prototype.GetFrequency = function () {
                        return this.m_frequencyHz;
                    };
                    u.prototype.SetFrequency = function (d) {
                        (() => {
                            const __ifInstance444 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance444.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        this.m_frequencyHz = d;
                    };
                    u.prototype.GetDampingRatio = function () {
                        return this.m_dampingRatio;
                    };
                    u.prototype.SetDampingRatio = function (d) {
                        (() => {
                            const __ifInstance445 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance445.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        this.m_dampingRatio = d;
                    };
                    u.prototype.b2MouseJoint = function (d) {
                        (() => {
                            const __callInstance172 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.b2Joint.call(this, d);
                                    }
                                }
                            });
                            const __exports = __callInstance172.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance171 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_target.SetV(d.target);
                                    }
                                }
                            });
                            const __exports = __callInstance171.exports;
                            return __exports.data();
                        })();
                        var h = this.m_target.x - this.m_bodyB.m_xf.position.x, l = this.m_target.y - this.m_bodyB.m_xf.position.y, j = this.m_bodyB.m_xf.R;
                        this.m_localAnchor.x = h * j.col1.x + l * j.col1.y;
                        this.m_localAnchor.y = h * j.col2.x + l * j.col2.y;
                        this.m_maxForce = d.maxForce;
                        (() => {
                            const __callInstance170 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_impulse.SetZero();
                                    }
                                }
                            });
                            const __exports = __callInstance170.exports;
                            return __exports.data();
                        })();
                        this.m_frequencyHz = d.frequencyHz;
                        this.m_dampingRatio = d.dampingRatio;
                        this.m_gamma = this.m_beta = 0;
                    };
                    u.prototype.InitVelocityConstraints = function (d) {
                        var h = this.m_bodyB, l = h.GetMass(), j = 2 * Math.PI * this.m_frequencyHz, o = l * j * j;
                        this.m_gamma = d.dt * (2 * l * this.m_dampingRatio * j + d.dt * o);
                        this.m_gamma = this.m_gamma != 0 ? 1 / this.m_gamma : 0;
                        this.m_beta = d.dt * o * this.m_gamma;
                        o = h.m_xf.R;
                        l = this.m_localAnchor.x - h.m_sweep.localCenter.x;
                        j = this.m_localAnchor.y - h.m_sweep.localCenter.y;
                        var q = o.col1.x * l + o.col2.x * j;
                        j = o.col1.y * l + o.col2.y * j;
                        l = q;
                        o = h.m_invMass;
                        q = h.m_invI;
                        this.K1.col1.x = o;
                        this.K1.col2.x = 0;
                        this.K1.col1.y = 0;
                        this.K1.col2.y = o;
                        this.K2.col1.x = q * j * j;
                        this.K2.col2.x = -q * l * j;
                        this.K2.col1.y = -q * l * j;
                        this.K2.col2.y = q * l * l;
                        (() => {
                            const __callInstance169 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.K.SetM(this.K1);
                                    }
                                }
                            });
                            const __exports = __callInstance169.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance168 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.K.AddM(this.K2);
                                    }
                                }
                            });
                            const __exports = __callInstance168.exports;
                            return __exports.data();
                        })();
                        this.K.col1.x += this.m_gamma;
                        this.K.col2.y += this.m_gamma;
                        (() => {
                            const __callInstance167 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.K.GetInverse(this.m_mass);
                                    }
                                }
                            });
                            const __exports = __callInstance167.exports;
                            return __exports.data();
                        })();
                        this.m_C.x = h.m_sweep.c.x + l - this.m_target.x;
                        this.m_C.y = h.m_sweep.c.y + j - this.m_target.y;
                        h.m_angularVelocity *= 0.98;
                        this.m_impulse.x *= d.dtRatio;
                        this.m_impulse.y *= d.dtRatio;
                        h.m_linearVelocity.x += o * this.m_impulse.x;
                        h.m_linearVelocity.y += o * this.m_impulse.y;
                        h.m_angularVelocity += q * (l * this.m_impulse.y - j * this.m_impulse.x);
                    };
                    u.prototype.SolveVelocityConstraints = function (d) {
                        var h = this.m_bodyB, l, j = 0, o = 0;
                        l = h.m_xf.R;
                        var q = this.m_localAnchor.x - h.m_sweep.localCenter.x, n = this.m_localAnchor.y - h.m_sweep.localCenter.y;
                        j = l.col1.x * q + l.col2.x * n;
                        n = l.col1.y * q + l.col2.y * n;
                        q = j;
                        j = h.m_linearVelocity.x + -h.m_angularVelocity * n;
                        var a = h.m_linearVelocity.y + h.m_angularVelocity * q;
                        l = this.m_mass;
                        j = j + this.m_beta * this.m_C.x + this.m_gamma * this.m_impulse.x;
                        o = a + this.m_beta * this.m_C.y + this.m_gamma * this.m_impulse.y;
                        a = -(l.col1.x * j + l.col2.x * o);
                        o = -(l.col1.y * j + l.col2.y * o);
                        l = this.m_impulse.x;
                        j = this.m_impulse.y;
                        this.m_impulse.x += a;
                        this.m_impulse.y += o;
                        d = d.dt * this.m_maxForce;
                        this.m_impulse.LengthSquared() > d * d && this.m_impulse.Multiply(d / this.m_impulse.Length());
                        a = this.m_impulse.x - l;
                        o = this.m_impulse.y - j;
                        h.m_linearVelocity.x += h.m_invMass * a;
                        h.m_linearVelocity.y += h.m_invMass * o;
                        h.m_angularVelocity += h.m_invI * (q * o - n * a);
                    };
                    u.prototype.SolvePositionConstraints = function () {
                        return true;
                    };
                    (() => {
                        const __callInstance166 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(D, Box2D.Dynamics.Joints.b2JointDef);
                                }
                            }
                        });
                        const __exports = __callInstance166.exports;
                        return __exports.data();
                    })();
                    D.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;
                    D.b2MouseJointDef = function () {
                        (() => {
                            const __callInstance165 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance165.exports;
                            return __exports.data();
                        })();
                        this.target = new w();
                    };
                    D.prototype.b2MouseJointDef = function () {
                        (() => {
                            const __callInstance164 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.b2JointDef.call(this);
                                    }
                                }
                            });
                            const __exports = __callInstance164.exports;
                            return __exports.data();
                        })();
                        this.type = I.e_mouseJoint;
                        this.maxForce = 0;
                        this.frequencyHz = 5;
                        this.dampingRatio = 0.7;
                    };
                    (() => {
                        const __callInstance163 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(H, Box2D.Dynamics.Joints.b2Joint);
                                }
                            }
                        });
                        const __exports = __callInstance163.exports;
                        return __exports.data();
                    })();
                    H.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;
                    H.b2PrismaticJoint = function () {
                        (() => {
                            const __callInstance162 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance162.exports;
                            return __exports.data();
                        })();
                        this.m_localAnchor1 = new w();
                        this.m_localAnchor2 = new w();
                        this.m_localXAxis1 = new w();
                        this.m_localYAxis1 = new w();
                        this.m_axis = new w();
                        this.m_perp = new w();
                        this.m_K = new K();
                        this.m_impulse = new A();
                    };
                    H.prototype.GetAnchorA = function () {
                        return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);
                    };
                    H.prototype.GetAnchorB = function () {
                        return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);
                    };
                    H.prototype.GetReactionForce = function (d) {
                        (() => {
                            const __ifInstance446 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance446.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        return new w(d * (this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.x), d * (this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.y));
                    };
                    H.prototype.GetReactionTorque = function (d) {
                        (() => {
                            const __ifInstance447 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance447.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        return d * this.m_impulse.y;
                    };
                    H.prototype.GetJointTranslation = function () {
                        var d = this.m_bodyA, h = this.m_bodyB, l = d.GetWorldPoint(this.m_localAnchor1), j = h.GetWorldPoint(this.m_localAnchor2);
                        h = j.x - l.x;
                        l = j.y - l.y;
                        d = d.GetWorldVector(this.m_localXAxis1);
                        return d.x * h + d.y * l;
                    };
                    H.prototype.GetJointSpeed = function () {
                        var d = this.m_bodyA, h = this.m_bodyB, l;
                        l = d.m_xf.R;
                        var j = this.m_localAnchor1.x - d.m_sweep.localCenter.x, o = this.m_localAnchor1.y - d.m_sweep.localCenter.y, q = l.col1.x * j + l.col2.x * o;
                        o = l.col1.y * j + l.col2.y * o;
                        j = q;
                        l = h.m_xf.R;
                        var n = this.m_localAnchor2.x - h.m_sweep.localCenter.x, a = this.m_localAnchor2.y - h.m_sweep.localCenter.y;
                        q = l.col1.x * n + l.col2.x * a;
                        a = l.col1.y * n + l.col2.y * a;
                        n = q;
                        l = h.m_sweep.c.x + n - (d.m_sweep.c.x + j);
                        q = h.m_sweep.c.y + a - (d.m_sweep.c.y + o);
                        var c = d.GetWorldVector(this.m_localXAxis1), g = d.m_linearVelocity, b = h.m_linearVelocity;
                        d = d.m_angularVelocity;
                        h = h.m_angularVelocity;
                        return l * -d * c.y + q * d * c.x + (c.x * (b.x + -h * a - g.x - -d * o) + c.y * (b.y + h * n - g.y - d * j));
                    };
                    H.prototype.IsLimitEnabled = function () {
                        return this.m_enableLimit;
                    };
                    H.prototype.EnableLimit = function (d) {
                        (() => {
                            const __callInstance161 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_bodyA.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance161.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance160 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_bodyB.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance160.exports;
                            return __exports.data();
                        })();
                        this.m_enableLimit = d;
                    };
                    H.prototype.GetLowerLimit = function () {
                        return this.m_lowerTranslation;
                    };
                    H.prototype.GetUpperLimit = function () {
                        return this.m_upperTranslation;
                    };
                    H.prototype.SetLimits = function (d, h) {
                        (() => {
                            const __ifInstance448 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance448.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance449 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        h = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance449.exports;
                            return __exports.data(h === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __callInstance159 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_bodyA.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance159.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance158 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_bodyB.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance158.exports;
                            return __exports.data();
                        })();
                        this.m_lowerTranslation = d;
                        this.m_upperTranslation = h;
                    };
                    H.prototype.IsMotorEnabled = function () {
                        return this.m_enableMotor;
                    };
                    H.prototype.EnableMotor = function (d) {
                        (() => {
                            const __callInstance157 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_bodyA.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance157.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance156 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_bodyB.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance156.exports;
                            return __exports.data();
                        })();
                        this.m_enableMotor = d;
                    };
                    H.prototype.SetMotorSpeed = function (d) {
                        (() => {
                            const __ifInstance450 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance450.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __callInstance155 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_bodyA.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance155.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance154 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_bodyB.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance154.exports;
                            return __exports.data();
                        })();
                        this.m_motorSpeed = d;
                    };
                    H.prototype.GetMotorSpeed = function () {
                        return this.m_motorSpeed;
                    };
                    H.prototype.SetMaxMotorForce = function (d) {
                        (() => {
                            const __ifInstance451 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance451.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __callInstance153 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_bodyA.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance153.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance152 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_bodyB.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance152.exports;
                            return __exports.data();
                        })();
                        this.m_maxMotorForce = d;
                    };
                    H.prototype.GetMotorForce = function () {
                        return this.m_motorImpulse;
                    };
                    H.prototype.b2PrismaticJoint = function (d) {
                        (() => {
                            const __callInstance151 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.b2Joint.call(this, d);
                                    }
                                }
                            });
                            const __exports = __callInstance151.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance150 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localAnchor1.SetV(d.localAnchorA);
                                    }
                                }
                            });
                            const __exports = __callInstance150.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance149 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localAnchor2.SetV(d.localAnchorB);
                                    }
                                }
                            });
                            const __exports = __callInstance149.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance148 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localXAxis1.SetV(d.localAxisA);
                                    }
                                }
                            });
                            const __exports = __callInstance148.exports;
                            return __exports.data();
                        })();
                        this.m_localYAxis1.x = -this.m_localXAxis1.y;
                        this.m_localYAxis1.y = this.m_localXAxis1.x;
                        this.m_refAngle = d.referenceAngle;
                        (() => {
                            const __callInstance147 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_impulse.SetZero();
                                    }
                                }
                            });
                            const __exports = __callInstance147.exports;
                            return __exports.data();
                        })();
                        this.m_motorImpulse = this.m_motorMass = 0;
                        this.m_lowerTranslation = d.lowerTranslation;
                        this.m_upperTranslation = d.upperTranslation;
                        this.m_maxMotorForce = d.maxMotorForce;
                        this.m_motorSpeed = d.motorSpeed;
                        this.m_enableLimit = d.enableLimit;
                        this.m_enableMotor = d.enableMotor;
                        this.m_limitState = I.e_inactiveLimit;
                        (() => {
                            const __callInstance146 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_axis.SetZero();
                                    }
                                }
                            });
                            const __exports = __callInstance146.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance145 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_perp.SetZero();
                                    }
                                }
                            });
                            const __exports = __callInstance145.exports;
                            return __exports.data();
                        })();
                    };
                    H.prototype.InitVelocityConstraints = function (d) {
                        var h = this.m_bodyA, l = this.m_bodyB, j, o = 0;
                        (() => {
                            const __callInstance144 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localCenterA.SetV(h.GetLocalCenter());
                                    }
                                }
                            });
                            const __exports = __callInstance144.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance143 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localCenterB.SetV(l.GetLocalCenter());
                                    }
                                }
                            });
                            const __exports = __callInstance143.exports;
                            return __exports.data();
                        })();
                        var q = h.GetTransform();
                        (() => {
                            const __callInstance142 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        l.GetTransform();
                                    }
                                }
                            });
                            const __exports = __callInstance142.exports;
                            return __exports.data();
                        })();
                        j = h.m_xf.R;
                        var n = this.m_localAnchor1.x - this.m_localCenterA.x, a = this.m_localAnchor1.y - this.m_localCenterA.y;
                        o = j.col1.x * n + j.col2.x * a;
                        a = j.col1.y * n + j.col2.y * a;
                        n = o;
                        j = l.m_xf.R;
                        var c = this.m_localAnchor2.x - this.m_localCenterB.x, g = this.m_localAnchor2.y - this.m_localCenterB.y;
                        o = j.col1.x * c + j.col2.x * g;
                        g = j.col1.y * c + j.col2.y * g;
                        c = o;
                        j = l.m_sweep.c.x + c - h.m_sweep.c.x - n;
                        o = l.m_sweep.c.y + g - h.m_sweep.c.y - a;
                        this.m_invMassA = h.m_invMass;
                        this.m_invMassB = l.m_invMass;
                        this.m_invIA = h.m_invI;
                        this.m_invIB = l.m_invI;
                        (() => {
                            const __callInstance141 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_axis.SetV(y.MulMV(q.R, this.m_localXAxis1));
                                    }
                                }
                            });
                            const __exports = __callInstance141.exports;
                            return __exports.data();
                        })();
                        this.m_a1 = (j + n) * this.m_axis.y - (o + a) * this.m_axis.x;
                        this.m_a2 = c * this.m_axis.y - g * this.m_axis.x;
                        this.m_motorMass = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_a1 * this.m_a1 + this.m_invIB * this.m_a2 * this.m_a2;
                        (() => {
                            const __ifInstance452 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_motorMass = 1 / this.m_motorMass;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance452.exports;
                            return __exports.data(this.m_motorMass > Number.MIN_VALUE ? 1 : 0);
                        })();
                        (() => {
                            const __callInstance140 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_perp.SetV(y.MulMV(q.R, this.m_localYAxis1));
                                    }
                                }
                            });
                            const __exports = __callInstance140.exports;
                            return __exports.data();
                        })();
                        this.m_s1 = (j + n) * this.m_perp.y - (o + a) * this.m_perp.x;
                        this.m_s2 = c * this.m_perp.y - g * this.m_perp.x;
                        q = this.m_invMassA;
                        n = this.m_invMassB;
                        a = this.m_invIA;
                        c = this.m_invIB;
                        this.m_K.col1.x = q + n + a * this.m_s1 * this.m_s1 + c * this.m_s2 * this.m_s2;
                        this.m_K.col1.y = a * this.m_s1 + c * this.m_s2;
                        this.m_K.col1.z = a * this.m_s1 * this.m_a1 + c * this.m_s2 * this.m_a2;
                        this.m_K.col2.x = this.m_K.col1.y;
                        this.m_K.col2.y = a + c;
                        this.m_K.col2.z = a * this.m_a1 + c * this.m_a2;
                        this.m_K.col3.x = this.m_K.col1.z;
                        this.m_K.col3.y = this.m_K.col2.z;
                        this.m_K.col3.z = q + n + a * this.m_a1 * this.m_a1 + c * this.m_a2 * this.m_a2;
                        (() => {
                            const __ifInstance453 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            j = this.m_axis.x * j + this.m_axis.y * o;
                                            (() => {
                                                const __ifInstance454 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            this.m_limitState = I.e_equalLimits;
                                                        },
                                                        impFunc2: () => {
                                                            (() => {
                                                                const __ifInstance455 = new WebAssembly.Instance(__ifWasmModule, {
                                                                    env: {
                                                                        impFunc1: () => {
                                                                            {
                                                                                (() => {
                                                                                    const __ifInstance456 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                        env: {
                                                                                            impFunc1: () => {
                                                                                                {
                                                                                                    this.m_limitState = I.e_atLowerLimit;
                                                                                                    this.m_impulse.z = 0;
                                                                                                }
                                                                                            },
                                                                                            impFunc2: () => {
                                                                                            }
                                                                                        }
                                                                                    });
                                                                                    const __exports = __ifInstance456.exports;
                                                                                    return __exports.data(this.m_limitState != I.e_atLowerLimit ? 1 : 0);
                                                                                })();
                                                                            }
                                                                        },
                                                                        impFunc2: () => {
                                                                            (() => {
                                                                                const __ifInstance457 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                    env: {
                                                                                        impFunc1: () => {
                                                                                            {
                                                                                                (() => {
                                                                                                    const __ifInstance458 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                        env: {
                                                                                                            impFunc1: () => {
                                                                                                                {
                                                                                                                    this.m_limitState = I.e_atUpperLimit;
                                                                                                                    this.m_impulse.z = 0;
                                                                                                                }
                                                                                                            },
                                                                                                            impFunc2: () => {
                                                                                                            }
                                                                                                        }
                                                                                                    });
                                                                                                    const __exports = __ifInstance458.exports;
                                                                                                    return __exports.data(this.m_limitState != I.e_atUpperLimit ? 1 : 0);
                                                                                                })();
                                                                                            }
                                                                                        },
                                                                                        impFunc2: () => {
                                                                                            {
                                                                                                this.m_limitState = I.e_inactiveLimit;
                                                                                                this.m_impulse.z = 0;
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                });
                                                                                const __exports = __ifInstance457.exports;
                                                                                return __exports.data(j >= this.m_upperTranslation ? 1 : 0);
                                                                            })();
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __ifInstance455.exports;
                                                                return __exports.data(j <= this.m_lowerTranslation ? 1 : 0);
                                                            })();
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance454.exports;
                                                return __exports.data(y.Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2 * F.b2_linearSlop ? 1 : 0);
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                        this.m_limitState = I.e_inactiveLimit;
                                    }
                                }
                            });
                            const __exports = __ifInstance453.exports;
                            return __exports.data(this.m_enableLimit ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance459 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_motorImpulse = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance459.exports;
                            return __exports.data(this.m_enableMotor == false ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance460 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            this.m_impulse.x *= d.dtRatio;
                                            this.m_impulse.y *= d.dtRatio;
                                            this.m_motorImpulse *= d.dtRatio;
                                            d = this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.x;
                                            j = this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.y;
                                            o = this.m_impulse.x * this.m_s1 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a1;
                                            q = this.m_impulse.x * this.m_s2 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a2;
                                            h.m_linearVelocity.x -= this.m_invMassA * d;
                                            h.m_linearVelocity.y -= this.m_invMassA * j;
                                            h.m_angularVelocity -= this.m_invIA * o;
                                            l.m_linearVelocity.x += this.m_invMassB * d;
                                            l.m_linearVelocity.y += this.m_invMassB * j;
                                            l.m_angularVelocity += this.m_invIB * q;
                                        }
                                    },
                                    impFunc2: () => {
                                        {
                                            (() => {
                                                const __callInstance139 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_impulse.SetZero();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance139.exports;
                                                return __exports.data();
                                            })();
                                            this.m_motorImpulse = 0;
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance460.exports;
                            return __exports.data(d.warmStarting ? 1 : 0);
                        })();
                    };
                    H.prototype.SolveVelocityConstraints = function (d) {
                        var h = this.m_bodyA, l = this.m_bodyB, j = h.m_linearVelocity, o = h.m_angularVelocity, q = l.m_linearVelocity, n = l.m_angularVelocity, a = 0, c = 0, g = 0, b = 0;
                        (() => {
                            const __ifInstance461 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            b = this.m_motorMass * (this.m_motorSpeed - (this.m_axis.x * (q.x - j.x) + this.m_axis.y * (q.y - j.y) + this.m_a2 * n - this.m_a1 * o));
                                            a = this.m_motorImpulse;
                                            d = d.dt * this.m_maxMotorForce;
                                            this.m_motorImpulse = y.Clamp(this.m_motorImpulse + b, -d, d);
                                            b = this.m_motorImpulse - a;
                                            a = b * this.m_axis.x;
                                            c = b * this.m_axis.y;
                                            g = b * this.m_a1;
                                            b = b * this.m_a2;
                                            j.x -= this.m_invMassA * a;
                                            j.y -= this.m_invMassA * c;
                                            o -= this.m_invIA * g;
                                            q.x += this.m_invMassB * a;
                                            q.y += this.m_invMassB * c;
                                            n += this.m_invIB * b;
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance461.exports;
                            return __exports.data(this.m_enableMotor && this.m_limitState != I.e_equalLimits ? 1 : 0);
                        })();
                        g = this.m_perp.x * (q.x - j.x) + this.m_perp.y * (q.y - j.y) + this.m_s2 * n - this.m_s1 * o;
                        c = n - o;
                        (() => {
                            const __ifInstance462 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            d = this.m_axis.x * (q.x - j.x) + this.m_axis.y * (q.y - j.y) + this.m_a2 * n - this.m_a1 * o;
                                            a = this.m_impulse.Copy();
                                            d = this.m_K.Solve33(new A(), -g, -c, -d);
                                            (() => {
                                                const __callInstance138 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_impulse.Add(d);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance138.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __ifInstance463 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            this.m_impulse.z = y.Max(this.m_impulse.z, 0);
                                                        },
                                                        impFunc2: () => {
                                                            (() => {
                                                                const __ifInstance464 = new WebAssembly.Instance(__ifWasmModule, {
                                                                    env: {
                                                                        impFunc1: () => {
                                                                            this.m_impulse.z = y.Min(this.m_impulse.z, 0);
                                                                        },
                                                                        impFunc2: () => {
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __ifInstance464.exports;
                                                                return __exports.data(this.m_limitState == I.e_atUpperLimit ? 1 : 0);
                                                            })();
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance463.exports;
                                                return __exports.data(this.m_limitState == I.e_atLowerLimit ? 1 : 0);
                                            })();
                                            g = -g - (this.m_impulse.z - a.z) * this.m_K.col3.x;
                                            c = -c - (this.m_impulse.z - a.z) * this.m_K.col3.y;
                                            c = this.m_K.Solve22(new w(), g, c);
                                            c.x += a.x;
                                            c.y += a.y;
                                            this.m_impulse.x = c.x;
                                            this.m_impulse.y = c.y;
                                            d.x = this.m_impulse.x - a.x;
                                            d.y = this.m_impulse.y - a.y;
                                            d.z = this.m_impulse.z - a.z;
                                            a = d.x * this.m_perp.x + d.z * this.m_axis.x;
                                            c = d.x * this.m_perp.y + d.z * this.m_axis.y;
                                            g = d.x * this.m_s1 + d.y + d.z * this.m_a1;
                                            b = d.x * this.m_s2 + d.y + d.z * this.m_a2;
                                        }
                                    },
                                    impFunc2: () => {
                                        {
                                            d = this.m_K.Solve22(new w(), -g, -c);
                                            this.m_impulse.x += d.x;
                                            this.m_impulse.y += d.y;
                                            a = d.x * this.m_perp.x;
                                            c = d.x * this.m_perp.y;
                                            g = d.x * this.m_s1 + d.y;
                                            b = d.x * this.m_s2 + d.y;
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance462.exports;
                            return __exports.data(this.m_enableLimit && this.m_limitState != I.e_inactiveLimit ? 1 : 0);
                        })();
                        j.x -= this.m_invMassA * a;
                        j.y -= this.m_invMassA * c;
                        o -= this.m_invIA * g;
                        q.x += this.m_invMassB * a;
                        q.y += this.m_invMassB * c;
                        n += this.m_invIB * b;
                        (() => {
                            const __callInstance137 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        h.m_linearVelocity.SetV(j);
                                    }
                                }
                            });
                            const __exports = __callInstance137.exports;
                            return __exports.data();
                        })();
                        h.m_angularVelocity = o;
                        (() => {
                            const __callInstance136 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        l.m_linearVelocity.SetV(q);
                                    }
                                }
                            });
                            const __exports = __callInstance136.exports;
                            return __exports.data();
                        })();
                        l.m_angularVelocity = n;
                    };
                    H.prototype.SolvePositionConstraints = function () {
                        var d = this.m_bodyA, h = this.m_bodyB, l = d.m_sweep.c, j = d.m_sweep.a, o = h.m_sweep.c, q = h.m_sweep.a, n, a = 0, c = 0, g = 0, b = a = n = 0, e = 0;
                        c = false;
                        var f = 0, m = G.FromAngle(j), r = G.FromAngle(q);
                        n = m;
                        e = this.m_localAnchor1.x - this.m_localCenterA.x;
                        var s = this.m_localAnchor1.y - this.m_localCenterA.y;
                        a = n.col1.x * e + n.col2.x * s;
                        s = n.col1.y * e + n.col2.y * s;
                        e = a;
                        n = r;
                        r = this.m_localAnchor2.x - this.m_localCenterB.x;
                        g = this.m_localAnchor2.y - this.m_localCenterB.y;
                        a = n.col1.x * r + n.col2.x * g;
                        g = n.col1.y * r + n.col2.y * g;
                        r = a;
                        n = o.x + r - l.x - e;
                        a = o.y + g - l.y - s;
                        (() => {
                            const __ifInstance465 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            this.m_axis = y.MulMV(m, this.m_localXAxis1);
                                            this.m_a1 = (n + e) * this.m_axis.y - (a + s) * this.m_axis.x;
                                            this.m_a2 = r * this.m_axis.y - g * this.m_axis.x;
                                            var v = this.m_axis.x * n + this.m_axis.y * a;
                                            (() => {
                                                const __ifInstance466 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                f = y.Clamp(v, -F.b2_maxLinearCorrection, F.b2_maxLinearCorrection);
                                                                b = y.Abs(v);
                                                                c = true;
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                            (() => {
                                                                const __ifInstance467 = new WebAssembly.Instance(__ifWasmModule, {
                                                                    env: {
                                                                        impFunc1: () => {
                                                                            {
                                                                                f = y.Clamp(v - this.m_lowerTranslation + F.b2_linearSlop, -F.b2_maxLinearCorrection, 0);
                                                                                b = this.m_lowerTranslation - v;
                                                                                c = true;
                                                                            }
                                                                        },
                                                                        impFunc2: () => {
                                                                            (() => {
                                                                                const __ifInstance468 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                    env: {
                                                                                        impFunc1: () => {
                                                                                            {
                                                                                                f = y.Clamp(v - this.m_upperTranslation + F.b2_linearSlop, 0, F.b2_maxLinearCorrection);
                                                                                                b = v - this.m_upperTranslation;
                                                                                                c = true;
                                                                                            }
                                                                                        },
                                                                                        impFunc2: () => {
                                                                                        }
                                                                                    }
                                                                                });
                                                                                const __exports = __ifInstance468.exports;
                                                                                return __exports.data(v >= this.m_upperTranslation ? 1 : 0);
                                                                            })();
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __ifInstance467.exports;
                                                                return __exports.data(v <= this.m_lowerTranslation ? 1 : 0);
                                                            })();
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance466.exports;
                                                return __exports.data(y.Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2 * F.b2_linearSlop ? 1 : 0);
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance465.exports;
                            return __exports.data(this.m_enableLimit ? 1 : 0);
                        })();
                        this.m_perp = y.MulMV(m, this.m_localYAxis1);
                        this.m_s1 = (n + e) * this.m_perp.y - (a + s) * this.m_perp.x;
                        this.m_s2 = r * this.m_perp.y - g * this.m_perp.x;
                        m = new A();
                        s = this.m_perp.x * n + this.m_perp.y * a;
                        r = q - j - this.m_refAngle;
                        b = y.Max(b, y.Abs(s));
                        e = y.Abs(r);
                        (() => {
                            const __ifInstance469 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            c = this.m_invMassA;
                                            g = this.m_invMassB;
                                            n = this.m_invIA;
                                            a = this.m_invIB;
                                            this.m_K.col1.x = c + g + n * this.m_s1 * this.m_s1 + a * this.m_s2 * this.m_s2;
                                            this.m_K.col1.y = n * this.m_s1 + a * this.m_s2;
                                            this.m_K.col1.z = n * this.m_s1 * this.m_a1 + a * this.m_s2 * this.m_a2;
                                            this.m_K.col2.x = this.m_K.col1.y;
                                            this.m_K.col2.y = n + a;
                                            this.m_K.col2.z = n * this.m_a1 + a * this.m_a2;
                                            this.m_K.col3.x = this.m_K.col1.z;
                                            this.m_K.col3.y = this.m_K.col2.z;
                                            this.m_K.col3.z = c + g + n * this.m_a1 * this.m_a1 + a * this.m_a2 * this.m_a2;
                                            (() => {
                                                const __callInstance135 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_K.Solve33(m, -s, -r, -f);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance135.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                        {
                                            c = this.m_invMassA;
                                            g = this.m_invMassB;
                                            n = this.m_invIA;
                                            a = this.m_invIB;
                                            f = n * this.m_s1 + a * this.m_s2;
                                            v = n + a;
                                            (() => {
                                                const __callInstance134 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_K.col1.Set(c + g + n * this.m_s1 * this.m_s1 + a * this.m_s2 * this.m_s2, f, 0);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance134.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance133 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_K.col2.Set(f, v, 0);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance133.exports;
                                                return __exports.data();
                                            })();
                                            f = this.m_K.Solve22(new w(), -s, -r);
                                            m.x = f.x;
                                            m.y = f.y;
                                            m.z = 0;
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance469.exports;
                            return __exports.data(c ? 1 : 0);
                        })();
                        f = m.x * this.m_perp.x + m.z * this.m_axis.x;
                        c = m.x * this.m_perp.y + m.z * this.m_axis.y;
                        s = m.x * this.m_s1 + m.y + m.z * this.m_a1;
                        m = m.x * this.m_s2 + m.y + m.z * this.m_a2;
                        l.x -= this.m_invMassA * f;
                        l.y -= this.m_invMassA * c;
                        j -= this.m_invIA * s;
                        o.x += this.m_invMassB * f;
                        o.y += this.m_invMassB * c;
                        q += this.m_invIB * m;
                        d.m_sweep.a = j;
                        h.m_sweep.a = q;
                        (() => {
                            const __callInstance132 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        d.SynchronizeTransform();
                                    }
                                }
                            });
                            const __exports = __callInstance132.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance131 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        h.SynchronizeTransform();
                                    }
                                }
                            });
                            const __exports = __callInstance131.exports;
                            return __exports.data();
                        })();
                        return b <= F.b2_linearSlop && e <= F.b2_angularSlop;
                    };
                    (() => {
                        const __callInstance130 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(O, Box2D.Dynamics.Joints.b2JointDef);
                                }
                            }
                        });
                        const __exports = __callInstance130.exports;
                        return __exports.data();
                    })();
                    O.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;
                    O.b2PrismaticJointDef = function () {
                        (() => {
                            const __callInstance129 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance129.exports;
                            return __exports.data();
                        })();
                        this.localAnchorA = new w();
                        this.localAnchorB = new w();
                        this.localAxisA = new w();
                    };
                    O.prototype.b2PrismaticJointDef = function () {
                        (() => {
                            const __callInstance128 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.b2JointDef.call(this);
                                    }
                                }
                            });
                            const __exports = __callInstance128.exports;
                            return __exports.data();
                        })();
                        this.type = I.e_prismaticJoint;
                        (() => {
                            const __callInstance127 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.localAxisA.Set(1, 0);
                                    }
                                }
                            });
                            const __exports = __callInstance127.exports;
                            return __exports.data();
                        })();
                        this.referenceAngle = 0;
                        this.enableLimit = false;
                        this.upperTranslation = this.lowerTranslation = 0;
                        this.enableMotor = false;
                        this.motorSpeed = this.maxMotorForce = 0;
                    };
                    O.prototype.Initialize = function (d, h, l, j) {
                        this.bodyA = d;
                        this.bodyB = h;
                        this.localAnchorA = this.bodyA.GetLocalPoint(l);
                        this.localAnchorB = this.bodyB.GetLocalPoint(l);
                        this.localAxisA = this.bodyA.GetLocalVector(j);
                        this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();
                    };
                    (() => {
                        const __callInstance126 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(E, Box2D.Dynamics.Joints.b2Joint);
                                }
                            }
                        });
                        const __exports = __callInstance126.exports;
                        return __exports.data();
                    })();
                    E.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;
                    E.b2PulleyJoint = function () {
                        (() => {
                            const __callInstance125 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance125.exports;
                            return __exports.data();
                        })();
                        this.m_groundAnchor1 = new w();
                        this.m_groundAnchor2 = new w();
                        this.m_localAnchor1 = new w();
                        this.m_localAnchor2 = new w();
                        this.m_u1 = new w();
                        this.m_u2 = new w();
                    };
                    E.prototype.GetAnchorA = function () {
                        return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);
                    };
                    E.prototype.GetAnchorB = function () {
                        return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);
                    };
                    E.prototype.GetReactionForce = function (d) {
                        (() => {
                            const __ifInstance470 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance470.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        return new w(d * this.m_impulse * this.m_u2.x, d * this.m_impulse * this.m_u2.y);
                    };
                    E.prototype.GetReactionTorque = function () {
                        return 0;
                    };
                    E.prototype.GetGroundAnchorA = function () {
                        var d = this.m_ground.m_xf.position.Copy();
                        (() => {
                            const __callInstance124 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        d.Add(this.m_groundAnchor1);
                                    }
                                }
                            });
                            const __exports = __callInstance124.exports;
                            return __exports.data();
                        })();
                        return d;
                    };
                    E.prototype.GetGroundAnchorB = function () {
                        var d = this.m_ground.m_xf.position.Copy();
                        (() => {
                            const __callInstance123 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        d.Add(this.m_groundAnchor2);
                                    }
                                }
                            });
                            const __exports = __callInstance123.exports;
                            return __exports.data();
                        })();
                        return d;
                    };
                    E.prototype.GetLength1 = function () {
                        var d = this.m_bodyA.GetWorldPoint(this.m_localAnchor1), h = d.x - (this.m_ground.m_xf.position.x + this.m_groundAnchor1.x);
                        d = d.y - (this.m_ground.m_xf.position.y + this.m_groundAnchor1.y);
                        return Math.sqrt(h * h + d * d);
                    };
                    E.prototype.GetLength2 = function () {
                        var d = this.m_bodyB.GetWorldPoint(this.m_localAnchor2), h = d.x - (this.m_ground.m_xf.position.x + this.m_groundAnchor2.x);
                        d = d.y - (this.m_ground.m_xf.position.y + this.m_groundAnchor2.y);
                        return Math.sqrt(h * h + d * d);
                    };
                    E.prototype.GetRatio = function () {
                        return this.m_ratio;
                    };
                    E.prototype.b2PulleyJoint = function (d) {
                        (() => {
                            const __callInstance122 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.b2Joint.call(this, d);
                                    }
                                }
                            });
                            const __exports = __callInstance122.exports;
                            return __exports.data();
                        })();
                        this.m_ground = this.m_bodyA.m_world.m_groundBody;
                        this.m_groundAnchor1.x = d.groundAnchorA.x - this.m_ground.m_xf.position.x;
                        this.m_groundAnchor1.y = d.groundAnchorA.y - this.m_ground.m_xf.position.y;
                        this.m_groundAnchor2.x = d.groundAnchorB.x - this.m_ground.m_xf.position.x;
                        this.m_groundAnchor2.y = d.groundAnchorB.y - this.m_ground.m_xf.position.y;
                        (() => {
                            const __callInstance121 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localAnchor1.SetV(d.localAnchorA);
                                    }
                                }
                            });
                            const __exports = __callInstance121.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance120 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localAnchor2.SetV(d.localAnchorB);
                                    }
                                }
                            });
                            const __exports = __callInstance120.exports;
                            return __exports.data();
                        })();
                        this.m_ratio = d.ratio;
                        this.m_constant = d.lengthA + this.m_ratio * d.lengthB;
                        this.m_maxLength1 = y.Min(d.maxLengthA, this.m_constant - this.m_ratio * E.b2_minPulleyLength);
                        this.m_maxLength2 = y.Min(d.maxLengthB, (this.m_constant - E.b2_minPulleyLength) / this.m_ratio);
                        this.m_limitImpulse2 = this.m_limitImpulse1 = this.m_impulse = 0;
                    };
                    E.prototype.InitVelocityConstraints = function (d) {
                        var h = this.m_bodyA, l = this.m_bodyB, j;
                        j = h.m_xf.R;
                        var o = this.m_localAnchor1.x - h.m_sweep.localCenter.x, q = this.m_localAnchor1.y - h.m_sweep.localCenter.y, n = j.col1.x * o + j.col2.x * q;
                        q = j.col1.y * o + j.col2.y * q;
                        o = n;
                        j = l.m_xf.R;
                        var a = this.m_localAnchor2.x - l.m_sweep.localCenter.x, c = this.m_localAnchor2.y - l.m_sweep.localCenter.y;
                        n = j.col1.x * a + j.col2.x * c;
                        c = j.col1.y * a + j.col2.y * c;
                        a = n;
                        j = l.m_sweep.c.x + a;
                        n = l.m_sweep.c.y + c;
                        var g = this.m_ground.m_xf.position.x + this.m_groundAnchor2.x, b = this.m_ground.m_xf.position.y + this.m_groundAnchor2.y;
                        (() => {
                            const __callInstance119 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_u1.Set(h.m_sweep.c.x + o - (this.m_ground.m_xf.position.x + this.m_groundAnchor1.x), h.m_sweep.c.y + q - (this.m_ground.m_xf.position.y + this.m_groundAnchor1.y));
                                    }
                                }
                            });
                            const __exports = __callInstance119.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance118 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_u2.Set(j - g, n - b);
                                    }
                                }
                            });
                            const __exports = __callInstance118.exports;
                            return __exports.data();
                        })();
                        j = this.m_u1.Length();
                        n = this.m_u2.Length();
                        j > F.b2_linearSlop ? this.m_u1.Multiply(1 / j) : this.m_u1.SetZero();
                        n > F.b2_linearSlop ? this.m_u2.Multiply(1 / n) : this.m_u2.SetZero();
                        (() => {
                            const __ifInstance471 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            this.m_state = I.e_inactiveLimit;
                                            this.m_impulse = 0;
                                        }
                                    },
                                    impFunc2: () => {
                                        this.m_state = I.e_atUpperLimit;
                                    }
                                }
                            });
                            const __exports = __ifInstance471.exports;
                            return __exports.data(this.m_constant - j - this.m_ratio * n > 0 ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance472 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            this.m_limitState1 = I.e_inactiveLimit;
                                            this.m_limitImpulse1 = 0;
                                        }
                                    },
                                    impFunc2: () => {
                                        this.m_limitState1 = I.e_atUpperLimit;
                                    }
                                }
                            });
                            const __exports = __ifInstance472.exports;
                            return __exports.data(j < this.m_maxLength1 ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance473 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            this.m_limitState2 = I.e_inactiveLimit;
                                            this.m_limitImpulse2 = 0;
                                        }
                                    },
                                    impFunc2: () => {
                                        this.m_limitState2 = I.e_atUpperLimit;
                                    }
                                }
                            });
                            const __exports = __ifInstance473.exports;
                            return __exports.data(n < this.m_maxLength2 ? 1 : 0);
                        })();
                        j = o * this.m_u1.y - q * this.m_u1.x;
                        n = a * this.m_u2.y - c * this.m_u2.x;
                        this.m_limitMass1 = h.m_invMass + h.m_invI * j * j;
                        this.m_limitMass2 = l.m_invMass + l.m_invI * n * n;
                        this.m_pulleyMass = this.m_limitMass1 + this.m_ratio * this.m_ratio * this.m_limitMass2;
                        this.m_limitMass1 = 1 / this.m_limitMass1;
                        this.m_limitMass2 = 1 / this.m_limitMass2;
                        this.m_pulleyMass = 1 / this.m_pulleyMass;
                        (() => {
                            const __ifInstance474 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            this.m_impulse *= d.dtRatio;
                                            this.m_limitImpulse1 *= d.dtRatio;
                                            this.m_limitImpulse2 *= d.dtRatio;
                                            d = (-this.m_impulse - this.m_limitImpulse1) * this.m_u1.x;
                                            j = (-this.m_impulse - this.m_limitImpulse1) * this.m_u1.y;
                                            n = (-this.m_ratio * this.m_impulse - this.m_limitImpulse2) * this.m_u2.x;
                                            g = (-this.m_ratio * this.m_impulse - this.m_limitImpulse2) * this.m_u2.y;
                                            h.m_linearVelocity.x += h.m_invMass * d;
                                            h.m_linearVelocity.y += h.m_invMass * j;
                                            h.m_angularVelocity += h.m_invI * (o * j - q * d);
                                            l.m_linearVelocity.x += l.m_invMass * n;
                                            l.m_linearVelocity.y += l.m_invMass * g;
                                            l.m_angularVelocity += l.m_invI * (a * g - c * n);
                                        }
                                    },
                                    impFunc2: () => {
                                        this.m_limitImpulse2 = this.m_limitImpulse1 = this.m_impulse = 0;
                                    }
                                }
                            });
                            const __exports = __ifInstance474.exports;
                            return __exports.data(d.warmStarting ? 1 : 0);
                        })();
                    };
                    E.prototype.SolveVelocityConstraints = function () {
                        var d = this.m_bodyA, h = this.m_bodyB, l;
                        l = d.m_xf.R;
                        var j = this.m_localAnchor1.x - d.m_sweep.localCenter.x, o = this.m_localAnchor1.y - d.m_sweep.localCenter.y, q = l.col1.x * j + l.col2.x * o;
                        o = l.col1.y * j + l.col2.y * o;
                        j = q;
                        l = h.m_xf.R;
                        var n = this.m_localAnchor2.x - h.m_sweep.localCenter.x, a = this.m_localAnchor2.y - h.m_sweep.localCenter.y;
                        q = l.col1.x * n + l.col2.x * a;
                        a = l.col1.y * n + l.col2.y * a;
                        n = q;
                        var c = q = l = 0, g = 0;
                        l = g = l = g = c = q = l = 0;
                        (() => {
                            const __ifInstance475 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            l = d.m_linearVelocity.x + -d.m_angularVelocity * o;
                                            q = d.m_linearVelocity.y + d.m_angularVelocity * j;
                                            c = h.m_linearVelocity.x + -h.m_angularVelocity * a;
                                            g = h.m_linearVelocity.y + h.m_angularVelocity * n;
                                            l = -(this.m_u1.x * l + this.m_u1.y * q) - this.m_ratio * (this.m_u2.x * c + this.m_u2.y * g);
                                            g = this.m_pulleyMass * -l;
                                            l = this.m_impulse;
                                            this.m_impulse = y.Max(0, this.m_impulse + g);
                                            g = this.m_impulse - l;
                                            l = -g * this.m_u1.x;
                                            q = -g * this.m_u1.y;
                                            c = -this.m_ratio * g * this.m_u2.x;
                                            g = -this.m_ratio * g * this.m_u2.y;
                                            d.m_linearVelocity.x += d.m_invMass * l;
                                            d.m_linearVelocity.y += d.m_invMass * q;
                                            d.m_angularVelocity += d.m_invI * (j * q - o * l);
                                            h.m_linearVelocity.x += h.m_invMass * c;
                                            h.m_linearVelocity.y += h.m_invMass * g;
                                            h.m_angularVelocity += h.m_invI * (n * g - a * c);
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance475.exports;
                            return __exports.data(this.m_state == I.e_atUpperLimit ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance476 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            l = d.m_linearVelocity.x + -d.m_angularVelocity * o;
                                            q = d.m_linearVelocity.y + d.m_angularVelocity * j;
                                            l = -(this.m_u1.x * l + this.m_u1.y * q);
                                            g = -this.m_limitMass1 * l;
                                            l = this.m_limitImpulse1;
                                            this.m_limitImpulse1 = y.Max(0, this.m_limitImpulse1 + g);
                                            g = this.m_limitImpulse1 - l;
                                            l = -g * this.m_u1.x;
                                            q = -g * this.m_u1.y;
                                            d.m_linearVelocity.x += d.m_invMass * l;
                                            d.m_linearVelocity.y += d.m_invMass * q;
                                            d.m_angularVelocity += d.m_invI * (j * q - o * l);
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance476.exports;
                            return __exports.data(this.m_limitState1 == I.e_atUpperLimit ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance477 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            c = h.m_linearVelocity.x + -h.m_angularVelocity * a;
                                            g = h.m_linearVelocity.y + h.m_angularVelocity * n;
                                            l = -(this.m_u2.x * c + this.m_u2.y * g);
                                            g = -this.m_limitMass2 * l;
                                            l = this.m_limitImpulse2;
                                            this.m_limitImpulse2 = y.Max(0, this.m_limitImpulse2 + g);
                                            g = this.m_limitImpulse2 - l;
                                            c = -g * this.m_u2.x;
                                            g = -g * this.m_u2.y;
                                            h.m_linearVelocity.x += h.m_invMass * c;
                                            h.m_linearVelocity.y += h.m_invMass * g;
                                            h.m_angularVelocity += h.m_invI * (n * g - a * c);
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance477.exports;
                            return __exports.data(this.m_limitState2 == I.e_atUpperLimit ? 1 : 0);
                        })();
                    };
                    E.prototype.SolvePositionConstraints = function () {
                        var d = this.m_bodyA, h = this.m_bodyB, l, j = this.m_ground.m_xf.position.x + this.m_groundAnchor1.x, o = this.m_ground.m_xf.position.y + this.m_groundAnchor1.y, q = this.m_ground.m_xf.position.x + this.m_groundAnchor2.x, n = this.m_ground.m_xf.position.y + this.m_groundAnchor2.y, a = 0, c = 0, g = 0, b = 0, e = l = 0, f = 0, m = 0, r = e = m = l = e = l = 0;
                        (() => {
                            const __ifInstance478 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            l = d.m_xf.R;
                                            a = this.m_localAnchor1.x - d.m_sweep.localCenter.x;
                                            c = this.m_localAnchor1.y - d.m_sweep.localCenter.y;
                                            e = l.col1.x * a + l.col2.x * c;
                                            c = l.col1.y * a + l.col2.y * c;
                                            a = e;
                                            l = h.m_xf.R;
                                            g = this.m_localAnchor2.x - h.m_sweep.localCenter.x;
                                            b = this.m_localAnchor2.y - h.m_sweep.localCenter.y;
                                            e = l.col1.x * g + l.col2.x * b;
                                            b = l.col1.y * g + l.col2.y * b;
                                            g = e;
                                            l = d.m_sweep.c.x + a;
                                            e = d.m_sweep.c.y + c;
                                            f = h.m_sweep.c.x + g;
                                            m = h.m_sweep.c.y + b;
                                            (() => {
                                                const __callInstance117 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_u1.Set(l - j, e - o);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance117.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance116 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_u2.Set(f - q, m - n);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance116.exports;
                                                return __exports.data();
                                            })();
                                            l = this.m_u1.Length();
                                            e = this.m_u2.Length();
                                            l > F.b2_linearSlop ? this.m_u1.Multiply(1 / l) : this.m_u1.SetZero();
                                            e > F.b2_linearSlop ? this.m_u2.Multiply(1 / e) : this.m_u2.SetZero();
                                            l = this.m_constant - l - this.m_ratio * e;
                                            r = y.Max(r, -l);
                                            l = y.Clamp(l + F.b2_linearSlop, -F.b2_maxLinearCorrection, 0);
                                            m = -this.m_pulleyMass * l;
                                            l = -m * this.m_u1.x;
                                            e = -m * this.m_u1.y;
                                            f = -this.m_ratio * m * this.m_u2.x;
                                            m = -this.m_ratio * m * this.m_u2.y;
                                            d.m_sweep.c.x += d.m_invMass * l;
                                            d.m_sweep.c.y += d.m_invMass * e;
                                            d.m_sweep.a += d.m_invI * (a * e - c * l);
                                            h.m_sweep.c.x += h.m_invMass * f;
                                            h.m_sweep.c.y += h.m_invMass * m;
                                            h.m_sweep.a += h.m_invI * (g * m - b * f);
                                            (() => {
                                                const __callInstance115 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            d.SynchronizeTransform();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance115.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance114 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            h.SynchronizeTransform();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance114.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance478.exports;
                            return __exports.data(this.m_state == I.e_atUpperLimit ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance479 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            l = d.m_xf.R;
                                            a = this.m_localAnchor1.x - d.m_sweep.localCenter.x;
                                            c = this.m_localAnchor1.y - d.m_sweep.localCenter.y;
                                            e = l.col1.x * a + l.col2.x * c;
                                            c = l.col1.y * a + l.col2.y * c;
                                            a = e;
                                            l = d.m_sweep.c.x + a;
                                            e = d.m_sweep.c.y + c;
                                            (() => {
                                                const __callInstance113 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_u1.Set(l - j, e - o);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance113.exports;
                                                return __exports.data();
                                            })();
                                            l = this.m_u1.Length();
                                            (() => {
                                                const __ifInstance480 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                this.m_u1.x *= 1 / l;
                                                                this.m_u1.y *= 1 / l;
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                            (() => {
                                                                const __callInstance112 = new WebAssembly.Instance(__callWasmModule, {
                                                                    env: {
                                                                        impFunc: () => {
                                                                            this.m_u1.SetZero();
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __callInstance112.exports;
                                                                return __exports.data();
                                                            })();
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance480.exports;
                                                return __exports.data(l > F.b2_linearSlop ? 1 : 0);
                                            })();
                                            l = this.m_maxLength1 - l;
                                            r = y.Max(r, -l);
                                            l = y.Clamp(l + F.b2_linearSlop, -F.b2_maxLinearCorrection, 0);
                                            m = -this.m_limitMass1 * l;
                                            l = -m * this.m_u1.x;
                                            e = -m * this.m_u1.y;
                                            d.m_sweep.c.x += d.m_invMass * l;
                                            d.m_sweep.c.y += d.m_invMass * e;
                                            d.m_sweep.a += d.m_invI * (a * e - c * l);
                                            (() => {
                                                const __callInstance111 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            d.SynchronizeTransform();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance111.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance479.exports;
                            return __exports.data(this.m_limitState1 == I.e_atUpperLimit ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance481 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            l = h.m_xf.R;
                                            g = this.m_localAnchor2.x - h.m_sweep.localCenter.x;
                                            b = this.m_localAnchor2.y - h.m_sweep.localCenter.y;
                                            e = l.col1.x * g + l.col2.x * b;
                                            b = l.col1.y * g + l.col2.y * b;
                                            g = e;
                                            f = h.m_sweep.c.x + g;
                                            m = h.m_sweep.c.y + b;
                                            (() => {
                                                const __callInstance110 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_u2.Set(f - q, m - n);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance110.exports;
                                                return __exports.data();
                                            })();
                                            e = this.m_u2.Length();
                                            (() => {
                                                const __ifInstance482 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                this.m_u2.x *= 1 / e;
                                                                this.m_u2.y *= 1 / e;
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                            (() => {
                                                                const __callInstance109 = new WebAssembly.Instance(__callWasmModule, {
                                                                    env: {
                                                                        impFunc: () => {
                                                                            this.m_u2.SetZero();
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __callInstance109.exports;
                                                                return __exports.data();
                                                            })();
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance482.exports;
                                                return __exports.data(e > F.b2_linearSlop ? 1 : 0);
                                            })();
                                            l = this.m_maxLength2 - e;
                                            r = y.Max(r, -l);
                                            l = y.Clamp(l + F.b2_linearSlop, -F.b2_maxLinearCorrection, 0);
                                            m = -this.m_limitMass2 * l;
                                            f = -m * this.m_u2.x;
                                            m = -m * this.m_u2.y;
                                            h.m_sweep.c.x += h.m_invMass * f;
                                            h.m_sweep.c.y += h.m_invMass * m;
                                            h.m_sweep.a += h.m_invI * (g * m - b * f);
                                            (() => {
                                                const __callInstance108 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            h.SynchronizeTransform();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance108.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance481.exports;
                            return __exports.data(this.m_limitState2 == I.e_atUpperLimit ? 1 : 0);
                        })();
                        return r < F.b2_linearSlop;
                    };
                    (() => {
                        const __callInstance107 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.postDefs.push(function () {
                                        Box2D.Dynamics.Joints.b2PulleyJoint.b2_minPulleyLength = 2;
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance107.exports;
                        return __exports.data();
                    })();
                    (() => {
                        const __callInstance106 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(R, Box2D.Dynamics.Joints.b2JointDef);
                                }
                            }
                        });
                        const __exports = __callInstance106.exports;
                        return __exports.data();
                    })();
                    R.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;
                    R.b2PulleyJointDef = function () {
                        (() => {
                            const __callInstance105 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance105.exports;
                            return __exports.data();
                        })();
                        this.groundAnchorA = new w();
                        this.groundAnchorB = new w();
                        this.localAnchorA = new w();
                        this.localAnchorB = new w();
                    };
                    R.prototype.b2PulleyJointDef = function () {
                        (() => {
                            const __callInstance104 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.b2JointDef.call(this);
                                    }
                                }
                            });
                            const __exports = __callInstance104.exports;
                            return __exports.data();
                        })();
                        this.type = I.e_pulleyJoint;
                        (() => {
                            const __callInstance103 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.groundAnchorA.Set(-1, 1);
                                    }
                                }
                            });
                            const __exports = __callInstance103.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance102 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.groundAnchorB.Set(1, 1);
                                    }
                                }
                            });
                            const __exports = __callInstance102.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance101 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.localAnchorA.Set(-1, 0);
                                    }
                                }
                            });
                            const __exports = __callInstance101.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance100 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.localAnchorB.Set(1, 0);
                                    }
                                }
                            });
                            const __exports = __callInstance100.exports;
                            return __exports.data();
                        })();
                        this.maxLengthB = this.lengthB = this.maxLengthA = this.lengthA = 0;
                        this.ratio = 1;
                        this.collideConnected = true;
                    };
                    R.prototype.Initialize = function (d, h, l, j, o, q, n) {
                        (() => {
                            const __ifInstance483 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        n = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance483.exports;
                            return __exports.data(n === undefined ? 1 : 0);
                        })();
                        this.bodyA = d;
                        this.bodyB = h;
                        (() => {
                            const __callInstance99 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.groundAnchorA.SetV(l);
                                    }
                                }
                            });
                            const __exports = __callInstance99.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance98 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.groundAnchorB.SetV(j);
                                    }
                                }
                            });
                            const __exports = __callInstance98.exports;
                            return __exports.data();
                        })();
                        this.localAnchorA = this.bodyA.GetLocalPoint(o);
                        this.localAnchorB = this.bodyB.GetLocalPoint(q);
                        d = o.x - l.x;
                        l = o.y - l.y;
                        this.lengthA = Math.sqrt(d * d + l * l);
                        l = q.x - j.x;
                        j = q.y - j.y;
                        this.lengthB = Math.sqrt(l * l + j * j);
                        this.ratio = n;
                        n = this.lengthA + this.ratio * this.lengthB;
                        this.maxLengthA = n - this.ratio * E.b2_minPulleyLength;
                        this.maxLengthB = (n - E.b2_minPulleyLength) / this.ratio;
                    };
                    (() => {
                        const __callInstance97 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(N, Box2D.Dynamics.Joints.b2Joint);
                                }
                            }
                        });
                        const __exports = __callInstance97.exports;
                        return __exports.data();
                    })();
                    N.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;
                    N.b2RevoluteJoint = function () {
                        (() => {
                            const __callInstance96 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance96.exports;
                            return __exports.data();
                        })();
                        this.K = new G();
                        this.K1 = new G();
                        this.K2 = new G();
                        this.K3 = new G();
                        this.impulse3 = new A();
                        this.impulse2 = new w();
                        this.reduced = new w();
                        this.m_localAnchor1 = new w();
                        this.m_localAnchor2 = new w();
                        this.m_impulse = new A();
                        this.m_mass = new K();
                    };
                    N.prototype.GetAnchorA = function () {
                        return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);
                    };
                    N.prototype.GetAnchorB = function () {
                        return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);
                    };
                    N.prototype.GetReactionForce = function (d) {
                        (() => {
                            const __ifInstance484 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance484.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        return new w(d * this.m_impulse.x, d * this.m_impulse.y);
                    };
                    N.prototype.GetReactionTorque = function (d) {
                        (() => {
                            const __ifInstance485 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance485.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        return d * this.m_impulse.z;
                    };
                    N.prototype.GetJointAngle = function () {
                        return this.m_bodyB.m_sweep.a - this.m_bodyA.m_sweep.a - this.m_referenceAngle;
                    };
                    N.prototype.GetJointSpeed = function () {
                        return this.m_bodyB.m_angularVelocity - this.m_bodyA.m_angularVelocity;
                    };
                    N.prototype.IsLimitEnabled = function () {
                        return this.m_enableLimit;
                    };
                    N.prototype.EnableLimit = function (d) {
                        this.m_enableLimit = d;
                    };
                    N.prototype.GetLowerLimit = function () {
                        return this.m_lowerAngle;
                    };
                    N.prototype.GetUpperLimit = function () {
                        return this.m_upperAngle;
                    };
                    N.prototype.SetLimits = function (d, h) {
                        (() => {
                            const __ifInstance486 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance486.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance487 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        h = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance487.exports;
                            return __exports.data(h === undefined ? 1 : 0);
                        })();
                        this.m_lowerAngle = d;
                        this.m_upperAngle = h;
                    };
                    N.prototype.IsMotorEnabled = function () {
                        (() => {
                            const __callInstance95 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_bodyA.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance95.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance94 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_bodyB.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance94.exports;
                            return __exports.data();
                        })();
                        return this.m_enableMotor;
                    };
                    N.prototype.EnableMotor = function (d) {
                        this.m_enableMotor = d;
                    };
                    N.prototype.SetMotorSpeed = function (d) {
                        (() => {
                            const __ifInstance488 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance488.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        (() => {
                            const __callInstance93 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_bodyA.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance93.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance92 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_bodyB.SetAwake(true);
                                    }
                                }
                            });
                            const __exports = __callInstance92.exports;
                            return __exports.data();
                        })();
                        this.m_motorSpeed = d;
                    };
                    N.prototype.GetMotorSpeed = function () {
                        return this.m_motorSpeed;
                    };
                    N.prototype.SetMaxMotorTorque = function (d) {
                        (() => {
                            const __ifInstance489 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance489.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        this.m_maxMotorTorque = d;
                    };
                    N.prototype.GetMotorTorque = function () {
                        return this.m_maxMotorTorque;
                    };
                    N.prototype.b2RevoluteJoint = function (d) {
                        (() => {
                            const __callInstance91 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.b2Joint.call(this, d);
                                    }
                                }
                            });
                            const __exports = __callInstance91.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance90 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localAnchor1.SetV(d.localAnchorA);
                                    }
                                }
                            });
                            const __exports = __callInstance90.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance89 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localAnchor2.SetV(d.localAnchorB);
                                    }
                                }
                            });
                            const __exports = __callInstance89.exports;
                            return __exports.data();
                        })();
                        this.m_referenceAngle = d.referenceAngle;
                        (() => {
                            const __callInstance88 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_impulse.SetZero();
                                    }
                                }
                            });
                            const __exports = __callInstance88.exports;
                            return __exports.data();
                        })();
                        this.m_motorImpulse = 0;
                        this.m_lowerAngle = d.lowerAngle;
                        this.m_upperAngle = d.upperAngle;
                        this.m_maxMotorTorque = d.maxMotorTorque;
                        this.m_motorSpeed = d.motorSpeed;
                        this.m_enableLimit = d.enableLimit;
                        this.m_enableMotor = d.enableMotor;
                        this.m_limitState = I.e_inactiveLimit;
                    };
                    N.prototype.InitVelocityConstraints = function (d) {
                        var h = this.m_bodyA, l = this.m_bodyB, j, o = 0;
                        j = h.m_xf.R;
                        var q = this.m_localAnchor1.x - h.m_sweep.localCenter.x, n = this.m_localAnchor1.y - h.m_sweep.localCenter.y;
                        o = j.col1.x * q + j.col2.x * n;
                        n = j.col1.y * q + j.col2.y * n;
                        q = o;
                        j = l.m_xf.R;
                        var a = this.m_localAnchor2.x - l.m_sweep.localCenter.x, c = this.m_localAnchor2.y - l.m_sweep.localCenter.y;
                        o = j.col1.x * a + j.col2.x * c;
                        c = j.col1.y * a + j.col2.y * c;
                        a = o;
                        j = h.m_invMass;
                        o = l.m_invMass;
                        var g = h.m_invI, b = l.m_invI;
                        this.m_mass.col1.x = j + o + n * n * g + c * c * b;
                        this.m_mass.col2.x = -n * q * g - c * a * b;
                        this.m_mass.col3.x = -n * g - c * b;
                        this.m_mass.col1.y = this.m_mass.col2.x;
                        this.m_mass.col2.y = j + o + q * q * g + a * a * b;
                        this.m_mass.col3.y = q * g + a * b;
                        this.m_mass.col1.z = this.m_mass.col3.x;
                        this.m_mass.col2.z = this.m_mass.col3.y;
                        this.m_mass.col3.z = g + b;
                        this.m_motorMass = 1 / (g + b);
                        (() => {
                            const __ifInstance490 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        this.m_motorImpulse = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance490.exports;
                            return __exports.data(this.m_enableMotor == false ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance491 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            var e = l.m_sweep.a - h.m_sweep.a - this.m_referenceAngle;
                                            (() => {
                                                const __ifInstance492 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            this.m_limitState = I.e_equalLimits;
                                                        },
                                                        impFunc2: () => {
                                                            (() => {
                                                                const __ifInstance493 = new WebAssembly.Instance(__ifWasmModule, {
                                                                    env: {
                                                                        impFunc1: () => {
                                                                            {
                                                                                (() => {
                                                                                    const __ifInstance494 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                        env: {
                                                                                            impFunc1: () => {
                                                                                                this.m_impulse.z = 0;
                                                                                            },
                                                                                            impFunc2: () => {
                                                                                            }
                                                                                        }
                                                                                    });
                                                                                    const __exports = __ifInstance494.exports;
                                                                                    return __exports.data(this.m_limitState != I.e_atLowerLimit ? 1 : 0);
                                                                                })();
                                                                                this.m_limitState = I.e_atLowerLimit;
                                                                            }
                                                                        },
                                                                        impFunc2: () => {
                                                                            (() => {
                                                                                const __ifInstance495 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                    env: {
                                                                                        impFunc1: () => {
                                                                                            {
                                                                                                (() => {
                                                                                                    const __ifInstance496 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                        env: {
                                                                                                            impFunc1: () => {
                                                                                                                this.m_impulse.z = 0;
                                                                                                            },
                                                                                                            impFunc2: () => {
                                                                                                            }
                                                                                                        }
                                                                                                    });
                                                                                                    const __exports = __ifInstance496.exports;
                                                                                                    return __exports.data(this.m_limitState != I.e_atUpperLimit ? 1 : 0);
                                                                                                })();
                                                                                                this.m_limitState = I.e_atUpperLimit;
                                                                                            }
                                                                                        },
                                                                                        impFunc2: () => {
                                                                                            {
                                                                                                this.m_limitState = I.e_inactiveLimit;
                                                                                                this.m_impulse.z = 0;
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                });
                                                                                const __exports = __ifInstance495.exports;
                                                                                return __exports.data(e >= this.m_upperAngle ? 1 : 0);
                                                                            })();
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __ifInstance493.exports;
                                                                return __exports.data(e <= this.m_lowerAngle ? 1 : 0);
                                                            })();
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance492.exports;
                                                return __exports.data(y.Abs(this.m_upperAngle - this.m_lowerAngle) < 2 * F.b2_angularSlop ? 1 : 0);
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                        this.m_limitState = I.e_inactiveLimit;
                                    }
                                }
                            });
                            const __exports = __ifInstance491.exports;
                            return __exports.data(this.m_enableLimit ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance497 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            this.m_impulse.x *= d.dtRatio;
                                            this.m_impulse.y *= d.dtRatio;
                                            this.m_motorImpulse *= d.dtRatio;
                                            d = this.m_impulse.x;
                                            e = this.m_impulse.y;
                                            h.m_linearVelocity.x -= j * d;
                                            h.m_linearVelocity.y -= j * e;
                                            h.m_angularVelocity -= g * (q * e - n * d + this.m_motorImpulse + this.m_impulse.z);
                                            l.m_linearVelocity.x += o * d;
                                            l.m_linearVelocity.y += o * e;
                                            l.m_angularVelocity += b * (a * e - c * d + this.m_motorImpulse + this.m_impulse.z);
                                        }
                                    },
                                    impFunc2: () => {
                                        {
                                            (() => {
                                                const __callInstance87 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_impulse.SetZero();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance87.exports;
                                                return __exports.data();
                                            })();
                                            this.m_motorImpulse = 0;
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance497.exports;
                            return __exports.data(d.warmStarting ? 1 : 0);
                        })();
                    };
                    N.prototype.SolveVelocityConstraints = function (d) {
                        var h = this.m_bodyA, l = this.m_bodyB, j = 0, o = j = 0, q = 0, n = 0, a = 0, c = h.m_linearVelocity, g = h.m_angularVelocity, b = l.m_linearVelocity, e = l.m_angularVelocity, f = h.m_invMass, m = l.m_invMass, r = h.m_invI, s = l.m_invI;
                        (() => {
                            const __ifInstance498 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            o = this.m_motorMass * -(e - g - this.m_motorSpeed);
                                            q = this.m_motorImpulse;
                                            n = d.dt * this.m_maxMotorTorque;
                                            this.m_motorImpulse = y.Clamp(this.m_motorImpulse + o, -n, n);
                                            o = this.m_motorImpulse - q;
                                            g -= r * o;
                                            e += s * o;
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance498.exports;
                            return __exports.data(this.m_enableMotor && this.m_limitState != I.e_equalLimits ? 1 : 0);
                        })();
                        (() => {
                            const __ifInstance499 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            d = h.m_xf.R;
                                            o = this.m_localAnchor1.x - h.m_sweep.localCenter.x;
                                            q = this.m_localAnchor1.y - h.m_sweep.localCenter.y;
                                            j = d.col1.x * o + d.col2.x * q;
                                            q = d.col1.y * o + d.col2.y * q;
                                            o = j;
                                            d = l.m_xf.R;
                                            n = this.m_localAnchor2.x - l.m_sweep.localCenter.x;
                                            a = this.m_localAnchor2.y - l.m_sweep.localCenter.y;
                                            j = d.col1.x * n + d.col2.x * a;
                                            a = d.col1.y * n + d.col2.y * a;
                                            n = j;
                                            d = b.x + -e * a - c.x - -g * q;
                                            var v = b.y + e * n - c.y - g * o;
                                            (() => {
                                                const __callInstance86 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_mass.Solve33(this.impulse3, -d, -v, -(e - g));
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance86.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __ifInstance500 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            (() => {
                                                                const __callInstance85 = new WebAssembly.Instance(__callWasmModule, {
                                                                    env: {
                                                                        impFunc: () => {
                                                                            this.m_impulse.Add(this.impulse3);
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __callInstance85.exports;
                                                                return __exports.data();
                                                            })();
                                                        },
                                                        impFunc2: () => {
                                                            (() => {
                                                                const __ifInstance501 = new WebAssembly.Instance(__ifWasmModule, {
                                                                    env: {
                                                                        impFunc1: () => {
                                                                            {
                                                                                j = this.m_impulse.z + this.impulse3.z;
                                                                                (() => {
                                                                                    const __ifInstance502 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                        env: {
                                                                                            impFunc1: () => {
                                                                                                {
                                                                                                    (() => {
                                                                                                        const __callInstance84 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                            env: {
                                                                                                                impFunc: () => {
                                                                                                                    this.m_mass.Solve22(this.reduced, -d, -v);
                                                                                                                }
                                                                                                            }
                                                                                                        });
                                                                                                        const __exports = __callInstance84.exports;
                                                                                                        return __exports.data();
                                                                                                    })();
                                                                                                    this.impulse3.x = this.reduced.x;
                                                                                                    this.impulse3.y = this.reduced.y;
                                                                                                    this.impulse3.z = -this.m_impulse.z;
                                                                                                    this.m_impulse.x += this.reduced.x;
                                                                                                    this.m_impulse.y += this.reduced.y;
                                                                                                    this.m_impulse.z = 0;
                                                                                                }
                                                                                            },
                                                                                            impFunc2: () => {
                                                                                            }
                                                                                        }
                                                                                    });
                                                                                    const __exports = __ifInstance502.exports;
                                                                                    return __exports.data(j < 0 ? 1 : 0);
                                                                                })();
                                                                            }
                                                                        },
                                                                        impFunc2: () => {
                                                                            (() => {
                                                                                const __ifInstance503 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                    env: {
                                                                                        impFunc1: () => {
                                                                                            {
                                                                                                j = this.m_impulse.z + this.impulse3.z;
                                                                                                (() => {
                                                                                                    const __ifInstance504 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                        env: {
                                                                                                            impFunc1: () => {
                                                                                                                {
                                                                                                                    (() => {
                                                                                                                        const __callInstance83 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                            env: {
                                                                                                                                impFunc: () => {
                                                                                                                                    this.m_mass.Solve22(this.reduced, -d, -v);
                                                                                                                                }
                                                                                                                            }
                                                                                                                        });
                                                                                                                        const __exports = __callInstance83.exports;
                                                                                                                        return __exports.data();
                                                                                                                    })();
                                                                                                                    this.impulse3.x = this.reduced.x;
                                                                                                                    this.impulse3.y = this.reduced.y;
                                                                                                                    this.impulse3.z = -this.m_impulse.z;
                                                                                                                    this.m_impulse.x += this.reduced.x;
                                                                                                                    this.m_impulse.y += this.reduced.y;
                                                                                                                    this.m_impulse.z = 0;
                                                                                                                }
                                                                                                            },
                                                                                                            impFunc2: () => {
                                                                                                            }
                                                                                                        }
                                                                                                    });
                                                                                                    const __exports = __ifInstance504.exports;
                                                                                                    return __exports.data(j > 0 ? 1 : 0);
                                                                                                })();
                                                                                            }
                                                                                        },
                                                                                        impFunc2: () => {
                                                                                        }
                                                                                    }
                                                                                });
                                                                                const __exports = __ifInstance503.exports;
                                                                                return __exports.data(this.m_limitState == I.e_atUpperLimit ? 1 : 0);
                                                                            })();
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __ifInstance501.exports;
                                                                return __exports.data(this.m_limitState == I.e_atLowerLimit ? 1 : 0);
                                                            })();
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance500.exports;
                                                return __exports.data(this.m_limitState == I.e_equalLimits ? 1 : 0);
                                            })();
                                            c.x -= f * this.impulse3.x;
                                            c.y -= f * this.impulse3.y;
                                            g -= r * (o * this.impulse3.y - q * this.impulse3.x + this.impulse3.z);
                                            b.x += m * this.impulse3.x;
                                            b.y += m * this.impulse3.y;
                                            e += s * (n * this.impulse3.y - a * this.impulse3.x + this.impulse3.z);
                                        }
                                    },
                                    impFunc2: () => {
                                        {
                                            d = h.m_xf.R;
                                            o = this.m_localAnchor1.x - h.m_sweep.localCenter.x;
                                            q = this.m_localAnchor1.y - h.m_sweep.localCenter.y;
                                            j = d.col1.x * o + d.col2.x * q;
                                            q = d.col1.y * o + d.col2.y * q;
                                            o = j;
                                            d = l.m_xf.R;
                                            n = this.m_localAnchor2.x - l.m_sweep.localCenter.x;
                                            a = this.m_localAnchor2.y - l.m_sweep.localCenter.y;
                                            j = d.col1.x * n + d.col2.x * a;
                                            a = d.col1.y * n + d.col2.y * a;
                                            n = j;
                                            (() => {
                                                const __callInstance82 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            this.m_mass.Solve22(this.impulse2, -(b.x + -e * a - c.x - -g * q), -(b.y + e * n - c.y - g * o));
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance82.exports;
                                                return __exports.data();
                                            })();
                                            this.m_impulse.x += this.impulse2.x;
                                            this.m_impulse.y += this.impulse2.y;
                                            c.x -= f * this.impulse2.x;
                                            c.y -= f * this.impulse2.y;
                                            g -= r * (o * this.impulse2.y - q * this.impulse2.x);
                                            b.x += m * this.impulse2.x;
                                            b.y += m * this.impulse2.y;
                                            e += s * (n * this.impulse2.y - a * this.impulse2.x);
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance499.exports;
                            return __exports.data(this.m_enableLimit && this.m_limitState != I.e_inactiveLimit ? 1 : 0);
                        })();
                        (() => {
                            const __callInstance81 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        h.m_linearVelocity.SetV(c);
                                    }
                                }
                            });
                            const __exports = __callInstance81.exports;
                            return __exports.data();
                        })();
                        h.m_angularVelocity = g;
                        (() => {
                            const __callInstance80 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        l.m_linearVelocity.SetV(b);
                                    }
                                }
                            });
                            const __exports = __callInstance80.exports;
                            return __exports.data();
                        })();
                        l.m_angularVelocity = e;
                    };
                    N.prototype.SolvePositionConstraints = function () {
                        var d = 0, h, l = this.m_bodyA, j = this.m_bodyB, o = 0, q = h = 0, n = 0, a = 0;
                        (() => {
                            const __ifInstance505 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            d = j.m_sweep.a - l.m_sweep.a - this.m_referenceAngle;
                                            var c = 0;
                                            (() => {
                                                const __ifInstance506 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                d = y.Clamp(d - this.m_lowerAngle, -F.b2_maxAngularCorrection, F.b2_maxAngularCorrection);
                                                                c = -this.m_motorMass * d;
                                                                o = y.Abs(d);
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                            (() => {
                                                                const __ifInstance507 = new WebAssembly.Instance(__ifWasmModule, {
                                                                    env: {
                                                                        impFunc1: () => {
                                                                            {
                                                                                d = d - this.m_lowerAngle;
                                                                                o = -d;
                                                                                d = y.Clamp(d + F.b2_angularSlop, -F.b2_maxAngularCorrection, 0);
                                                                                c = -this.m_motorMass * d;
                                                                            }
                                                                        },
                                                                        impFunc2: () => {
                                                                            (() => {
                                                                                const __ifInstance508 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                    env: {
                                                                                        impFunc1: () => {
                                                                                            {
                                                                                                o = d = d - this.m_upperAngle;
                                                                                                d = y.Clamp(d - F.b2_angularSlop, 0, F.b2_maxAngularCorrection);
                                                                                                c = -this.m_motorMass * d;
                                                                                            }
                                                                                        },
                                                                                        impFunc2: () => {
                                                                                        }
                                                                                    }
                                                                                });
                                                                                const __exports = __ifInstance508.exports;
                                                                                return __exports.data(this.m_limitState == I.e_atUpperLimit ? 1 : 0);
                                                                            })();
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __ifInstance507.exports;
                                                                return __exports.data(this.m_limitState == I.e_atLowerLimit ? 1 : 0);
                                                            })();
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance506.exports;
                                                return __exports.data(this.m_limitState == I.e_equalLimits ? 1 : 0);
                                            })();
                                            l.m_sweep.a -= l.m_invI * c;
                                            j.m_sweep.a += j.m_invI * c;
                                            (() => {
                                                const __callInstance79 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            l.SynchronizeTransform();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance79.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance78 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            j.SynchronizeTransform();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance78.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance505.exports;
                            return __exports.data(this.m_enableLimit && this.m_limitState != I.e_inactiveLimit ? 1 : 0);
                        })();
                        h = l.m_xf.R;
                        c = this.m_localAnchor1.x - l.m_sweep.localCenter.x;
                        d = this.m_localAnchor1.y - l.m_sweep.localCenter.y;
                        q = h.col1.x * c + h.col2.x * d;
                        d = h.col1.y * c + h.col2.y * d;
                        c = q;
                        h = j.m_xf.R;
                        var g = this.m_localAnchor2.x - j.m_sweep.localCenter.x, b = this.m_localAnchor2.y - j.m_sweep.localCenter.y;
                        q = h.col1.x * g + h.col2.x * b;
                        b = h.col1.y * g + h.col2.y * b;
                        g = q;
                        n = j.m_sweep.c.x + g - l.m_sweep.c.x - c;
                        a = j.m_sweep.c.y + b - l.m_sweep.c.y - d;
                        var e = n * n + a * a;
                        h = Math.sqrt(e);
                        q = l.m_invMass;
                        var f = j.m_invMass, m = l.m_invI, r = j.m_invI, s = 10 * F.b2_linearSlop;
                        (() => {
                            const __ifInstance509 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            e = 1 / (q + f);
                                            n = e * -n;
                                            a = e * -a;
                                            l.m_sweep.c.x -= 0.5 * q * n;
                                            l.m_sweep.c.y -= 0.5 * q * a;
                                            j.m_sweep.c.x += 0.5 * f * n;
                                            j.m_sweep.c.y += 0.5 * f * a;
                                            n = j.m_sweep.c.x + g - l.m_sweep.c.x - c;
                                            a = j.m_sweep.c.y + b - l.m_sweep.c.y - d;
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance509.exports;
                            return __exports.data(e > s * s ? 1 : 0);
                        })();
                        this.K1.col1.x = q + f;
                        this.K1.col2.x = 0;
                        this.K1.col1.y = 0;
                        this.K1.col2.y = q + f;
                        this.K2.col1.x = m * d * d;
                        this.K2.col2.x = -m * c * d;
                        this.K2.col1.y = -m * c * d;
                        this.K2.col2.y = m * c * c;
                        this.K3.col1.x = r * b * b;
                        this.K3.col2.x = -r * g * b;
                        this.K3.col1.y = -r * g * b;
                        this.K3.col2.y = r * g * g;
                        (() => {
                            const __callInstance77 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.K.SetM(this.K1);
                                    }
                                }
                            });
                            const __exports = __callInstance77.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance76 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.K.AddM(this.K2);
                                    }
                                }
                            });
                            const __exports = __callInstance76.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance75 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.K.AddM(this.K3);
                                    }
                                }
                            });
                            const __exports = __callInstance75.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance74 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.K.Solve(N.tImpulse, -n, -a);
                                    }
                                }
                            });
                            const __exports = __callInstance74.exports;
                            return __exports.data();
                        })();
                        n = N.tImpulse.x;
                        a = N.tImpulse.y;
                        l.m_sweep.c.x -= l.m_invMass * n;
                        l.m_sweep.c.y -= l.m_invMass * a;
                        l.m_sweep.a -= l.m_invI * (c * a - d * n);
                        j.m_sweep.c.x += j.m_invMass * n;
                        j.m_sweep.c.y += j.m_invMass * a;
                        j.m_sweep.a += j.m_invI * (g * a - b * n);
                        (() => {
                            const __callInstance73 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        l.SynchronizeTransform();
                                    }
                                }
                            });
                            const __exports = __callInstance73.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance72 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        j.SynchronizeTransform();
                                    }
                                }
                            });
                            const __exports = __callInstance72.exports;
                            return __exports.data();
                        })();
                        return h <= F.b2_linearSlop && o <= F.b2_angularSlop;
                    };
                    (() => {
                        const __callInstance71 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.postDefs.push(function () {
                                        Box2D.Dynamics.Joints.b2RevoluteJoint.tImpulse = new w();
                                    });
                                }
                            }
                        });
                        const __exports = __callInstance71.exports;
                        return __exports.data();
                    })();
                    (() => {
                        const __callInstance70 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(S, Box2D.Dynamics.Joints.b2JointDef);
                                }
                            }
                        });
                        const __exports = __callInstance70.exports;
                        return __exports.data();
                    })();
                    S.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;
                    S.b2RevoluteJointDef = function () {
                        (() => {
                            const __callInstance69 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance69.exports;
                            return __exports.data();
                        })();
                        this.localAnchorA = new w();
                        this.localAnchorB = new w();
                    };
                    S.prototype.b2RevoluteJointDef = function () {
                        (() => {
                            const __callInstance68 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.b2JointDef.call(this);
                                    }
                                }
                            });
                            const __exports = __callInstance68.exports;
                            return __exports.data();
                        })();
                        this.type = I.e_revoluteJoint;
                        (() => {
                            const __callInstance67 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.localAnchorA.Set(0, 0);
                                    }
                                }
                            });
                            const __exports = __callInstance67.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance66 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.localAnchorB.Set(0, 0);
                                    }
                                }
                            });
                            const __exports = __callInstance66.exports;
                            return __exports.data();
                        })();
                        this.motorSpeed = this.maxMotorTorque = this.upperAngle = this.lowerAngle = this.referenceAngle = 0;
                        this.enableMotor = this.enableLimit = false;
                    };
                    S.prototype.Initialize = function (d, h, l) {
                        this.bodyA = d;
                        this.bodyB = h;
                        this.localAnchorA = this.bodyA.GetLocalPoint(l);
                        this.localAnchorB = this.bodyB.GetLocalPoint(l);
                        this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();
                    };
                    (() => {
                        const __callInstance65 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(aa, Box2D.Dynamics.Joints.b2Joint);
                                }
                            }
                        });
                        const __exports = __callInstance65.exports;
                        return __exports.data();
                    })();
                    aa.prototype.__super = Box2D.Dynamics.Joints.b2Joint.prototype;
                    aa.b2WeldJoint = function () {
                        (() => {
                            const __callInstance64 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance64.exports;
                            return __exports.data();
                        })();
                        this.m_localAnchorA = new w();
                        this.m_localAnchorB = new w();
                        this.m_impulse = new A();
                        this.m_mass = new K();
                    };
                    aa.prototype.GetAnchorA = function () {
                        return this.m_bodyA.GetWorldPoint(this.m_localAnchorA);
                    };
                    aa.prototype.GetAnchorB = function () {
                        return this.m_bodyB.GetWorldPoint(this.m_localAnchorB);
                    };
                    aa.prototype.GetReactionForce = function (d) {
                        (() => {
                            const __ifInstance510 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance510.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        return new w(d * this.m_impulse.x, d * this.m_impulse.y);
                    };
                    aa.prototype.GetReactionTorque = function (d) {
                        (() => {
                            const __ifInstance511 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        d = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance511.exports;
                            return __exports.data(d === undefined ? 1 : 0);
                        })();
                        return d * this.m_impulse.z;
                    };
                    aa.prototype.b2WeldJoint = function (d) {
                        (() => {
                            const __callInstance63 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.b2Joint.call(this, d);
                                    }
                                }
                            });
                            const __exports = __callInstance63.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance62 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localAnchorA.SetV(d.localAnchorA);
                                    }
                                }
                            });
                            const __exports = __callInstance62.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance61 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_localAnchorB.SetV(d.localAnchorB);
                                    }
                                }
                            });
                            const __exports = __callInstance61.exports;
                            return __exports.data();
                        })();
                        this.m_referenceAngle = d.referenceAngle;
                        (() => {
                            const __callInstance60 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_impulse.SetZero();
                                    }
                                }
                            });
                            const __exports = __callInstance60.exports;
                            return __exports.data();
                        })();
                        this.m_mass = new K();
                    };
                    aa.prototype.InitVelocityConstraints = function (d) {
                        var h, l = 0, j = this.m_bodyA, o = this.m_bodyB;
                        h = j.m_xf.R;
                        var q = this.m_localAnchorA.x - j.m_sweep.localCenter.x, n = this.m_localAnchorA.y - j.m_sweep.localCenter.y;
                        l = h.col1.x * q + h.col2.x * n;
                        n = h.col1.y * q + h.col2.y * n;
                        q = l;
                        h = o.m_xf.R;
                        var a = this.m_localAnchorB.x - o.m_sweep.localCenter.x, c = this.m_localAnchorB.y - o.m_sweep.localCenter.y;
                        l = h.col1.x * a + h.col2.x * c;
                        c = h.col1.y * a + h.col2.y * c;
                        a = l;
                        h = j.m_invMass;
                        l = o.m_invMass;
                        var g = j.m_invI, b = o.m_invI;
                        this.m_mass.col1.x = h + l + n * n * g + c * c * b;
                        this.m_mass.col2.x = -n * q * g - c * a * b;
                        this.m_mass.col3.x = -n * g - c * b;
                        this.m_mass.col1.y = this.m_mass.col2.x;
                        this.m_mass.col2.y = h + l + q * q * g + a * a * b;
                        this.m_mass.col3.y = q * g + a * b;
                        this.m_mass.col1.z = this.m_mass.col3.x;
                        this.m_mass.col2.z = this.m_mass.col3.y;
                        this.m_mass.col3.z = g + b;
                        (() => {
                            const __ifInstance512 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            this.m_impulse.x *= d.dtRatio;
                                            this.m_impulse.y *= d.dtRatio;
                                            this.m_impulse.z *= d.dtRatio;
                                            j.m_linearVelocity.x -= h * this.m_impulse.x;
                                            j.m_linearVelocity.y -= h * this.m_impulse.y;
                                            j.m_angularVelocity -= g * (q * this.m_impulse.y - n * this.m_impulse.x + this.m_impulse.z);
                                            o.m_linearVelocity.x += l * this.m_impulse.x;
                                            o.m_linearVelocity.y += l * this.m_impulse.y;
                                            o.m_angularVelocity += b * (a * this.m_impulse.y - c * this.m_impulse.x + this.m_impulse.z);
                                        }
                                    },
                                    impFunc2: () => {
                                        (() => {
                                            const __callInstance59 = new WebAssembly.Instance(__callWasmModule, {
                                                env: {
                                                    impFunc: () => {
                                                        this.m_impulse.SetZero();
                                                    }
                                                }
                                            });
                                            const __exports = __callInstance59.exports;
                                            return __exports.data();
                                        })();
                                    }
                                }
                            });
                            const __exports = __ifInstance512.exports;
                            return __exports.data(d.warmStarting ? 1 : 0);
                        })();
                    };
                    aa.prototype.SolveVelocityConstraints = function () {
                        var d, h = 0, l = this.m_bodyA, j = this.m_bodyB, o = l.m_linearVelocity, q = l.m_angularVelocity, n = j.m_linearVelocity, a = j.m_angularVelocity, c = l.m_invMass, g = j.m_invMass, b = l.m_invI, e = j.m_invI;
                        d = l.m_xf.R;
                        var f = this.m_localAnchorA.x - l.m_sweep.localCenter.x, m = this.m_localAnchorA.y - l.m_sweep.localCenter.y;
                        h = d.col1.x * f + d.col2.x * m;
                        m = d.col1.y * f + d.col2.y * m;
                        f = h;
                        d = j.m_xf.R;
                        var r = this.m_localAnchorB.x - j.m_sweep.localCenter.x, s = this.m_localAnchorB.y - j.m_sweep.localCenter.y;
                        h = d.col1.x * r + d.col2.x * s;
                        s = d.col1.y * r + d.col2.y * s;
                        r = h;
                        d = n.x - a * s - o.x + q * m;
                        h = n.y + a * r - o.y - q * f;
                        var v = a - q, t = new A();
                        (() => {
                            const __callInstance58 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_mass.Solve33(t, -d, -h, -v);
                                    }
                                }
                            });
                            const __exports = __callInstance58.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance57 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_impulse.Add(t);
                                    }
                                }
                            });
                            const __exports = __callInstance57.exports;
                            return __exports.data();
                        })();
                        o.x -= c * t.x;
                        o.y -= c * t.y;
                        q -= b * (f * t.y - m * t.x + t.z);
                        n.x += g * t.x;
                        n.y += g * t.y;
                        a += e * (r * t.y - s * t.x + t.z);
                        l.m_angularVelocity = q;
                        j.m_angularVelocity = a;
                    };
                    aa.prototype.SolvePositionConstraints = function () {
                        var d, h = 0, l = this.m_bodyA, j = this.m_bodyB;
                        d = l.m_xf.R;
                        var o = this.m_localAnchorA.x - l.m_sweep.localCenter.x, q = this.m_localAnchorA.y - l.m_sweep.localCenter.y;
                        h = d.col1.x * o + d.col2.x * q;
                        q = d.col1.y * o + d.col2.y * q;
                        o = h;
                        d = j.m_xf.R;
                        var n = this.m_localAnchorB.x - j.m_sweep.localCenter.x, a = this.m_localAnchorB.y - j.m_sweep.localCenter.y;
                        h = d.col1.x * n + d.col2.x * a;
                        a = d.col1.y * n + d.col2.y * a;
                        n = h;
                        d = l.m_invMass;
                        h = j.m_invMass;
                        var c = l.m_invI, g = j.m_invI, b = j.m_sweep.c.x + n - l.m_sweep.c.x - o, e = j.m_sweep.c.y + a - l.m_sweep.c.y - q, f = j.m_sweep.a - l.m_sweep.a - this.m_referenceAngle, m = 10 * F.b2_linearSlop, r = Math.sqrt(b * b + e * e), s = y.Abs(f);
                        (() => {
                            const __ifInstance513 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            c *= 1;
                                            g *= 1;
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance513.exports;
                            return __exports.data(r > m ? 1 : 0);
                        })();
                        this.m_mass.col1.x = d + h + q * q * c + a * a * g;
                        this.m_mass.col2.x = -q * o * c - a * n * g;
                        this.m_mass.col3.x = -q * c - a * g;
                        this.m_mass.col1.y = this.m_mass.col2.x;
                        this.m_mass.col2.y = d + h + o * o * c + n * n * g;
                        this.m_mass.col3.y = o * c + n * g;
                        this.m_mass.col1.z = this.m_mass.col3.x;
                        this.m_mass.col2.z = this.m_mass.col3.y;
                        this.m_mass.col3.z = c + g;
                        m = new A();
                        (() => {
                            const __callInstance56 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.m_mass.Solve33(m, -b, -e, -f);
                                    }
                                }
                            });
                            const __exports = __callInstance56.exports;
                            return __exports.data();
                        })();
                        l.m_sweep.c.x -= d * m.x;
                        l.m_sweep.c.y -= d * m.y;
                        l.m_sweep.a -= c * (o * m.y - q * m.x + m.z);
                        j.m_sweep.c.x += h * m.x;
                        j.m_sweep.c.y += h * m.y;
                        j.m_sweep.a += g * (n * m.y - a * m.x + m.z);
                        (() => {
                            const __callInstance55 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        l.SynchronizeTransform();
                                    }
                                }
                            });
                            const __exports = __callInstance55.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance54 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        j.SynchronizeTransform();
                                    }
                                }
                            });
                            const __exports = __callInstance54.exports;
                            return __exports.data();
                        })();
                        return r <= F.b2_linearSlop && s <= F.b2_angularSlop;
                    };
                    (() => {
                        const __callInstance53 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    Box2D.inherit(Z, Box2D.Dynamics.Joints.b2JointDef);
                                }
                            }
                        });
                        const __exports = __callInstance53.exports;
                        return __exports.data();
                    })();
                    Z.prototype.__super = Box2D.Dynamics.Joints.b2JointDef.prototype;
                    Z.b2WeldJointDef = function () {
                        (() => {
                            const __callInstance52 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        Box2D.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);
                                    }
                                }
                            });
                            const __exports = __callInstance52.exports;
                            return __exports.data();
                        })();
                        this.localAnchorA = new w();
                        this.localAnchorB = new w();
                    };
                    Z.prototype.b2WeldJointDef = function () {
                        (() => {
                            const __callInstance51 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.__super.b2JointDef.call(this);
                                    }
                                }
                            });
                            const __exports = __callInstance51.exports;
                            return __exports.data();
                        })();
                        this.type = I.e_weldJoint;
                        this.referenceAngle = 0;
                    };
                    Z.prototype.Initialize = function (d, h, l) {
                        this.bodyA = d;
                        this.bodyB = h;
                        (() => {
                            const __callInstance50 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.localAnchorA.SetV(this.bodyA.GetLocalPoint(l));
                                    }
                                }
                            });
                            const __exports = __callInstance50.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance49 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        this.localAnchorB.SetV(this.bodyB.GetLocalPoint(l));
                                    }
                                }
                            });
                            const __exports = __callInstance49.exports;
                            return __exports.data();
                        })();
                        this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();
                    };
                }());
            }
        }
    });
    const __exports = __callInstance265.exports;
    return __exports.data();
})();
(() => {
    const __callInstance48 = new WebAssembly.Instance(__callWasmModule, {
        env: {
            impFunc: () => {
                (function () {
                    var F = Box2D.Dynamics.b2DebugDraw;
                    F.b2DebugDraw = function () {
                        this.m_xformScale = this.m_fillAlpha = this.m_alpha = this.m_lineThickness = this.m_drawScale = 1;
                        var G = this;
                        this.m_sprite = {
                            graphics: {
                                clear: function () {
                                    (() => {
                                        const __callInstance47 = new WebAssembly.Instance(__callWasmModule, {
                                            env: {
                                                impFunc: () => {
                                                    G.m_ctx.clearRect(0, 0, G.m_ctx.canvas.width, G.m_ctx.canvas.height);
                                                }
                                            }
                                        });
                                        const __exports = __callInstance47.exports;
                                        return __exports.data();
                                    })();
                                }
                            }
                        };
                    };
                    F.prototype._color = function (G, K) {
                        return lS(0, 28) + ((G & 16711680) >> 16) + lS(0, 29) + ((G & 65280) >> 8) + lS(0, 30) + (G & 255) + lS(0, 31) + K + lS(0, 32);
                    };
                    F.prototype.b2DebugDraw = function () {
                        this.m_drawFlags = 0;
                    };
                    F.prototype.SetFlags = function (G) {
                        (() => {
                            const __ifInstance514 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        G = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance514.exports;
                            return __exports.data(G === undefined ? 1 : 0);
                        })();
                        this.m_drawFlags = G;
                    };
                    F.prototype.GetFlags = function () {
                        return this.m_drawFlags;
                    };
                    F.prototype.AppendFlags = function (G) {
                        (() => {
                            const __ifInstance515 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        G = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance515.exports;
                            return __exports.data(G === undefined ? 1 : 0);
                        })();
                        this.m_drawFlags |= G;
                    };
                    F.prototype.ClearFlags = function (G) {
                        (() => {
                            const __ifInstance516 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        G = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance516.exports;
                            return __exports.data(G === undefined ? 1 : 0);
                        })();
                        this.m_drawFlags &= ~G;
                    };
                    F.prototype.SetSprite = function (G) {
                        this.m_ctx = G;
                    };
                    F.prototype.GetSprite = function () {
                        return this.m_ctx;
                    };
                    F.prototype.SetDrawScale = function (G) {
                        (() => {
                            const __ifInstance517 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        G = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance517.exports;
                            return __exports.data(G === undefined ? 1 : 0);
                        })();
                        this.m_drawScale = G;
                    };
                    F.prototype.GetDrawScale = function () {
                        return this.m_drawScale;
                    };
                    F.prototype.SetLineThickness = function (G) {
                        (() => {
                            const __ifInstance518 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        G = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance518.exports;
                            return __exports.data(G === undefined ? 1 : 0);
                        })();
                        this.m_lineThickness = G;
                        this.m_ctx.strokeWidth = G;
                    };
                    F.prototype.GetLineThickness = function () {
                        return this.m_lineThickness;
                    };
                    F.prototype.SetAlpha = function (G) {
                        (() => {
                            const __ifInstance519 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        G = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance519.exports;
                            return __exports.data(G === undefined ? 1 : 0);
                        })();
                        this.m_alpha = G;
                    };
                    F.prototype.GetAlpha = function () {
                        return this.m_alpha;
                    };
                    F.prototype.SetFillAlpha = function (G) {
                        (() => {
                            const __ifInstance520 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        G = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance520.exports;
                            return __exports.data(G === undefined ? 1 : 0);
                        })();
                        this.m_fillAlpha = G;
                    };
                    F.prototype.GetFillAlpha = function () {
                        return this.m_fillAlpha;
                    };
                    F.prototype.SetXFormScale = function (G) {
                        (() => {
                            const __ifInstance521 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        G = 0;
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance521.exports;
                            return __exports.data(G === undefined ? 1 : 0);
                        })();
                        this.m_xformScale = G;
                    };
                    F.prototype.GetXFormScale = function () {
                        return this.m_xformScale;
                    };
                    F.prototype.DrawPolygon = function (G, K, y) {
                        (() => {
                            const __ifInstance522 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            var w = this.m_ctx, A = this.m_drawScale;
                                            (() => {
                                                const __callInstance46 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            w.beginPath();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance46.exports;
                                                return __exports.data();
                                            })();
                                            w.strokeStyle = this._color(y.color, this.m_alpha);
                                            (() => {
                                                const __callInstance45 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            w.moveTo(G[0].x * A, G[0].y * A);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance45.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                y = 1;
                                                const __forInstance129 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return y < K ? 1 : 0;
                                                        },
                                                        update: () => {
                                                            y++;
                                                        },
                                                        body: () => {
                                                            (() => {
                                                                const __callInstance44 = new WebAssembly.Instance(__callWasmModule, {
                                                                    env: {
                                                                        impFunc: () => {
                                                                            w.lineTo(G[y].x * A, G[y].y * A);
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __callInstance44.exports;
                                                                return __exports.data();
                                                            })();
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance129.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance43 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            w.lineTo(G[0].x * A, G[0].y * A);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance43.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance42 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            w.closePath();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance42.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance41 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            w.stroke();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance41.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance522.exports;
                            return __exports.data(K ? 1 : 0);
                        })();
                    };
                    F.prototype.DrawSolidPolygon = function (G, K, y) {
                        (() => {
                            const __ifInstance523 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            var w = this.m_ctx, A = this.m_drawScale;
                                            (() => {
                                                const __callInstance40 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            w.beginPath();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance40.exports;
                                                return __exports.data();
                                            })();
                                            w.strokeStyle = this._color(y.color, this.m_alpha);
                                            w.fillStyle = this._color(y.color, this.m_fillAlpha);
                                            (() => {
                                                const __callInstance39 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            w.moveTo(G[0].x * A, G[0].y * A);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance39.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                y = 1;
                                                const __forInstance130 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return y < K ? 1 : 0;
                                                        },
                                                        update: () => {
                                                            y++;
                                                        },
                                                        body: () => {
                                                            (() => {
                                                                const __callInstance38 = new WebAssembly.Instance(__callWasmModule, {
                                                                    env: {
                                                                        impFunc: () => {
                                                                            w.lineTo(G[y].x * A, G[y].y * A);
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __callInstance38.exports;
                                                                return __exports.data();
                                                            })();
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance130.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance37 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            w.lineTo(G[0].x * A, G[0].y * A);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance37.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance36 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            w.closePath();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance36.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance35 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            w.fill();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance35.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance34 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            w.stroke();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance34.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance523.exports;
                            return __exports.data(K ? 1 : 0);
                        })();
                    };
                    F.prototype.DrawCircle = function (G, K, y) {
                        (() => {
                            const __ifInstance524 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            var w = this.m_ctx, A = this.m_drawScale;
                                            (() => {
                                                const __callInstance33 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            w.beginPath();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance33.exports;
                                                return __exports.data();
                                            })();
                                            w.strokeStyle = this._color(y.color, this.m_alpha);
                                            (() => {
                                                const __callInstance32 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            w.arc(G.x * A, G.y * A, K * A, 0, Math.PI * 2, true);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance32.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance31 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            w.closePath();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance31.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance30 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            w.stroke();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance30.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance524.exports;
                            return __exports.data(K ? 1 : 0);
                        })();
                    };
                    F.prototype.DrawSolidCircle = function (G, K, y, w) {
                        (() => {
                            const __ifInstance525 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            var A = this.m_ctx, U = this.m_drawScale, p = G.x * U, B = G.y * U;
                                            (() => {
                                                const __callInstance29 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            A.moveTo(0, 0);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance29.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance28 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            A.beginPath();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance28.exports;
                                                return __exports.data();
                                            })();
                                            A.strokeStyle = this._color(w.color, this.m_alpha);
                                            A.fillStyle = this._color(w.color, this.m_fillAlpha);
                                            (() => {
                                                const __callInstance27 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            A.arc(p, B, K * U, 0, Math.PI * 2, true);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance27.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance26 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            A.moveTo(p, B);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance26.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance25 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            A.lineTo((G.x + y.x * K) * U, (G.y + y.y * K) * U);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance25.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance24 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            A.closePath();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance24.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance23 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            A.fill();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance23.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance22 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            A.stroke();
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance22.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance525.exports;
                            return __exports.data(K ? 1 : 0);
                        })();
                    };
                    F.prototype.DrawSegment = function (G, K, y) {
                        var w = this.m_ctx, A = this.m_drawScale;
                        w.strokeStyle = this._color(y.color, this.m_alpha);
                        (() => {
                            const __callInstance21 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        w.beginPath();
                                    }
                                }
                            });
                            const __exports = __callInstance21.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance20 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        w.moveTo(G.x * A, G.y * A);
                                    }
                                }
                            });
                            const __exports = __callInstance20.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance19 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        w.lineTo(K.x * A, K.y * A);
                                    }
                                }
                            });
                            const __exports = __callInstance19.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance18 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        w.closePath();
                                    }
                                }
                            });
                            const __exports = __callInstance18.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance17 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        w.stroke();
                                    }
                                }
                            });
                            const __exports = __callInstance17.exports;
                            return __exports.data();
                        })();
                    };
                    F.prototype.DrawTransform = function (G) {
                        var K = this.m_ctx, y = this.m_drawScale;
                        (() => {
                            const __callInstance16 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        K.beginPath();
                                    }
                                }
                            });
                            const __exports = __callInstance16.exports;
                            return __exports.data();
                        })();
                        K.strokeStyle = this._color(16711680, this.m_alpha);
                        (() => {
                            const __callInstance15 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        K.moveTo(G.position.x * y, G.position.y * y);
                                    }
                                }
                            });
                            const __exports = __callInstance15.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance14 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        K.lineTo((G.position.x + this.m_xformScale * G.R.col1.x) * y, (G.position.y + this.m_xformScale * G.R.col1.y) * y);
                                    }
                                }
                            });
                            const __exports = __callInstance14.exports;
                            return __exports.data();
                        })();
                        K.strokeStyle = this._color(65280, this.m_alpha);
                        (() => {
                            const __callInstance13 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        K.moveTo(G.position.x * y, G.position.y * y);
                                    }
                                }
                            });
                            const __exports = __callInstance13.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance12 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        K.lineTo((G.position.x + this.m_xformScale * G.R.col2.x) * y, (G.position.y + this.m_xformScale * G.R.col2.y) * y);
                                    }
                                }
                            });
                            const __exports = __callInstance12.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance11 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        K.closePath();
                                    }
                                }
                            });
                            const __exports = __callInstance11.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance10 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        K.stroke();
                                    }
                                }
                            });
                            const __exports = __callInstance10.exports;
                            return __exports.data();
                        })();
                    };
                }());
            }
        }
    });
    const __exports = __callInstance48.exports;
    return __exports.data();
})();
var i;
(() => {
    i = 0;
    const __forInstance131 = new WebAssembly.Instance(__forWasmModule, {
        env: {
            test: () => {
                return i < Box2D.postDefs.length ? 1 : 0;
            },
            update: () => {
                ++i;
            },
            body: () => {
                (() => {
                    const __callInstance9 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                Box2D.postDefs[i]();
                            }
                        }
                    });
                    const __exports = __callInstance9.exports;
                    return __exports.data();
                })();
            }
        }
    });
    const __exports = __forInstance131.exports;
    return __exports.data();
})();
delete Box2D.postDefs;
function MakeNewWorld() {
    var Vec2 = Box2D.Common.Math.b2Vec2, BodyDef = Box2D.Dynamics.b2BodyDef, Body = Box2D.Dynamics.b2Body, FixtureDef = Box2D.Dynamics.b2FixtureDef, Fixture = Box2D.Dynamics.b2Fixture, World = Box2D.Dynamics.b2World, MassData = Box2D.Collision.Shapes.b2MassData, PolygonShape = Box2D.Collision.Shapes.b2PolygonShape, CircleShape = Box2D.Collision.Shapes.b2CircleShape;
    var gravity = new Vec2(0, -10);
    var world = new World(gravity, true);
    var shape = new PolygonShape();
    (() => {
        const __callInstance8 = new WebAssembly.Instance(__callWasmModule, {
            env: {
                impFunc: () => {
                    shape.SetAsEdge(new Vec2(-40, 0), new Vec2(40, 0));
                }
            }
        });
        const __exports = __callInstance8.exports;
        return __exports.data();
    })();
    var fd = new FixtureDef();
    fd.density = 0;
    fd.shape = shape;
    var bd = new BodyDef();
    var ground = world.CreateBody(bd);
    (() => {
        const __callInstance7 = new WebAssembly.Instance(__callWasmModule, {
            env: {
                impFunc: () => {
                    ground.CreateFixture(fd);
                }
            }
        });
        const __exports = __callInstance7.exports;
        return __exports.data();
    })();
    var a = 0.5;
    var shape = new PolygonShape();
    (() => {
        const __callInstance6 = new WebAssembly.Instance(__callWasmModule, {
            env: {
                impFunc: () => {
                    shape.SetAsBox(a, a);
                }
            }
        });
        const __exports = __callInstance6.exports;
        return __exports.data();
    })();
    var x = new Vec2(-7, 0.75);
    var y = new Vec2();
    var deltaX = new Vec2(0.5625, 1);
    var deltaY = new Vec2(1.125, 0);
    (() => {
        var i = 0;
        const __forInstance132 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i < 10 ? 1 : 0;
                },
                update: () => {
                    ++i;
                },
                body: () => {
                    {
                        (() => {
                            const __callInstance5 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        y.Set(x.x, x.y);
                                    }
                                }
                            });
                            const __exports = __callInstance5.exports;
                            return __exports.data();
                        })();
                        (() => {
                            var j = 0;
                            const __forInstance133 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return j < 5 ? 1 : 0;
                                    },
                                    update: () => {
                                        ++j;
                                    },
                                    body: () => {
                                        {
                                            var fd = new FixtureDef();
                                            fd.density = 5;
                                            fd.shape = shape;
                                            var bd = new BodyDef();
                                            bd.type = Body.b2_dynamicBody;
                                            (() => {
                                                const __callInstance4 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            bd.position.Set(y.x, y.y);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance4.exports;
                                                return __exports.data();
                                            })();
                                            var body = world.CreateBody(bd);
                                            (() => {
                                                const __callInstance3 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            body.CreateFixture(fd);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance3.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance2 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            y.Add(deltaY);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance2.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance133.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance1 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        x.Add(deltaX);
                                    }
                                }
                            });
                            const __exports = __callInstance1.exports;
                            return __exports.data();
                        })();
                    }
                }
            }
        });
        const __exports = __forInstance132.exports;
        return __exports.data();
    })();
    return world;
}
var world = null;
var Box2DBenchmark = new BenchmarkSuite(lS(0, 33), __lA(0, 16, 20), [new Benchmark(lS(0, 34), false, false, 60, runBox2D, setupBox2D, tearDownBox2D, null, 8)]);
function runBox2D() {
    var world = MakeNewWorld();
    (() => {
        var i = 0;
        const __forInstance134 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i < 20 ? 1 : 0;
                },
                update: () => {
                    i++;
                },
                body: () => {
                    {
                        (() => {
                            const __callInstance0 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        world.Step(1 / 60, 10, 3);
                                    }
                                }
                            });
                            const __exports = __callInstance0.exports;
                            return __exports.data();
                        })();
                    }
                }
            }
        });
        const __exports = __forInstance134.exports;
        return __exports.data();
    })();
}
function setupBox2D() {
}
function tearDownBox2D() {
    world = null;
    Box2D = null;
}