const __universalAtob = function (b64Encoded) {
    try {
        let binary_string = atob(b64Encoded), len = binary_string.length, bytes = new Uint8Array(len);
        for (let i = 0; i < len; i++) {
            bytes[i] = binary_string.charCodeAt(i);
        }
        return bytes;
    } catch (err) {
        return new Uint8Array(global.Buffer.from(b64Encoded, 'base64'));
    }
};
const __aB = 'AGFzbQEAAAABiYCAgAACYAAAYAJ/fwADg4CAgAACAQAFg4CAgAABAAEGhoCAgAABfwFBAAsHkYCAgAACBm1lbW9yeQIABGFycjAAAQqqgICAAAKPgICAAAAjACAAQQRsaiABNgIAC5CAgIAAAQF/QRAkAEEAQd/WKBAACw==', __wAM = new WebAssembly.Instance(new WebAssembly.Module((() => {
        try {
            let binary_string = atob(__aB), len = binary_string.length, bytes = new Uint8Array(len);
            for (let i = 0; i < len; i++) {
                bytes[i] = binary_string.charCodeAt(i);
            }
            return bytes;
        } catch (err) {
            return new Uint8Array(global.Buffer.from(__aB, 'base64'));
        }
    })()));
const ac = new Map();
const __lA = (pos, stIdx, eIdx) => {
    if (ac.has(pos)) {
        return ac.get(pos);
    } else {
        const sK = `arr${ pos }`;
        __wAM.exports[sK]();
        let mem = new Uint32Array(__wAM.exports.memory.buffer, stIdx, (eIdx - stIdx) / 4 + 1);
        const rA = Array.from(mem);
        ac.set(pos, rA);
        return rA;
    }
};
const __forWasmBuffer = 'AGFzbQEAAAABiICAgAACYAAAYAABfwKkgICAAAMDZW52BHRlc3QAAQNlbnYGdXBkYXRlAAADZW52BGJvZHkAAAOCgICAAAEABISAgIAAAXAAAAWDgICAAAEAAQeRgICAAAIGbWVtb3J5AgAEZGF0YQADCpmAgIAAAZOAgIAAAAJAA0AQAEUNARACEAEMAAsLCw==';
const __forWasmModule = new WebAssembly.Module((() => {
    try {
        let binary_string = atob(__forWasmBuffer), len = binary_string.length, bytes = new Uint8Array(len);
        for (let i = 0; i < len; i++) {
            bytes[i] = binary_string.charCodeAt(i);
        }
        return bytes;
    } catch (err) {
        return new Uint8Array(global.Buffer.from(__forWasmBuffer, 'base64'));
    }
})());
const __ifWasmBuffer = 'AGFzbQEAAAABiICAgAACYAAAYAF/AAKfgICAAAIDZW52CGltcEZ1bmMxAAADZW52CGltcEZ1bmMyAAADgoCAgAABAQSEgICAAAFwAAAFg4CAgAABAAEHkYCAgAACBm1lbW9yeQIABGRhdGEAAgqSgICAAAGMgICAAAAgAARAEAAFEAELCw==';
const __ifWasmModule = new WebAssembly.Module((() => {
    try {
        let binary_string = atob(__ifWasmBuffer), len = binary_string.length, bytes = new Uint8Array(len);
        for (let i = 0; i < len; i++) {
            bytes[i] = binary_string.charCodeAt(i);
        }
        return bytes;
    } catch (err) {
        return new Uint8Array(global.Buffer.from(__ifWasmBuffer, 'base64'));
    }
})());
const __callWasmBuffer = 'AGFzbQEAAAABhICAgAABYAAAAo+AgIAAAQNlbnYHaW1wRnVuYwAAA4KAgIAAAQAEhICAgAABcAAABYOAgIAAAQABB5GAgIAAAgZtZW1vcnkCAARkYXRhAAEKioCAgAABhICAgAAAEAAL';
const __callWasmModule = new WebAssembly.Module((() => {
    try {
        let binary_string = atob(__callWasmBuffer), len = binary_string.length, bytes = new Uint8Array(len);
        for (let i = 0; i < len; i++) {
            bytes[i] = binary_string.charCodeAt(i);
        }
        return bytes;
    } catch (err) {
        return new Uint8Array(global.Buffer.from(__callWasmBuffer, 'base64'));
    }
})());
const __wasmStringModules = [
    '',
    '',
    '',
    '',
    'AGFzbQEAAAAFg4CAgAABAAEGp4aAgACHAX8AQQELfwBBDgt/AEEaC38AQSgLfwBBPAt/AEHIAAt/AEHUAAt/AEHqAAt/AEH2AAt/AEGCAQt/AEGYAQt/AEGkAQt/AEGwAQt/AEHAAQt/AEHOAQt/AEHgAQt/AEHsAQt/AEH6AQt/AEGKAgt/AEGWAgt/AEGkAgt/AEG2Agt/AEHCAgt/AEHSAgt/AEHiAgt/AEH0Agt/AEGCAwt/AEGUAwt/AEGgAwt/AEGuAwt/AEG+Awt/AEHKAwt/AEHYAwt/AEHqAwt/AEH2Awt/AEGGBAt/AEGWBAt/AEGkBAt/AEG0BAt/AEHIBAt/AEHYBAt/AEHkBAt/AEHwBAt/AEH8BAt/AEGKBQt/AEGaBQt/AEGmBQt/AEG2BQt/AEHEBQt/AEHQBQt/AEHgBQt/AEHuBQt/AEH6BQt/AEGIBgt/AEGUBgt/AEGiBgt/AEGwBgt/AEG+Bgt/AEHMBgt/AEHYBgt/AEHkBgt/AEHyBgt/AEGABwt/AEGMBwt/AEGaBwt/AEGmBwt/AEGyBwt/AEHCBwt/AEHSBwt/AEHeBwt/AEHqBwt/AEH6Bwt/AEGGCAt/AEGWCAt/AEGiCAt/AEGuCAt/AEG+CAt/AEHOCAt/AEHaCAt/AEHmCAt/AEH2CAt/AEGCCQt/AEGOCQt/AEGaCQt/AEGmCQt/AEG4CQt/AEHKCQt/AEHcCQt/AEHoCQt/AEH0CQt/AEGCCgt/AEGOCgt/AEGeCgt/AEGuCgt/AEG6Cgt/AEHGCgt/AEHcCgt/AEHoCgt/AEH0Cgt/AEGACwt/AEGQCwt/AEGkCwt/AEGwCwt/AEG8Cwt/AEHOCwt/AEHaCwt/AEHsCwt/AEH4Cwt/AEGADAt/AEGMDAt/AEGYDAt/AEGkDAt/AEGwDAt/AEHCDAt/AEHQDAt/AEHiDAt/AEH0DAt/AEGCDQt/AEGUDQt/AEGiDQt/AEGuDQt/AEG6DQt/AEHKDQt/AEH4DQt/AEGGDgt/AEGSDgt/AEGgDgt/AEGsDgt/AEG4Dgt/AEHEDgt/AEHQDgt/AEHcDgt/AEHoDgt/AEHwDgt/AEGwDwsH6omAgACIAQZtZW1vcnkCAAVkYXRhMAMABWRhdGExAwEFZGF0YTIDAgVkYXRhMwMDBWRhdGE0AwQFZGF0YTUDBQVkYXRhNgMGBWRhdGE3AwcFZGF0YTgDCAVkYXRhOQMJBmRhdGExMAMKBmRhdGExMQMLBmRhdGExMgMMBmRhdGExMwMNBmRhdGExNAMOBmRhdGExNQMPBmRhdGExNgMQBmRhdGExNwMRBmRhdGExOAMSBmRhdGExOQMTBmRhdGEyMAMUBmRhdGEyMQMVBmRhdGEyMgMWBmRhdGEyMwMXBmRhdGEyNAMYBmRhdGEyNQMZBmRhdGEyNgMaBmRhdGEyNwMbBmRhdGEyOAMcBmRhdGEyOQMdBmRhdGEzMAMeBmRhdGEzMQMfBmRhdGEzMgMgBmRhdGEzMwMhBmRhdGEzNAMiBmRhdGEzNQMjBmRhdGEzNgMkBmRhdGEzNwMlBmRhdGEzOAMmBmRhdGEzOQMnBmRhdGE0MAMoBmRhdGE0MQMpBmRhdGE0MgMqBmRhdGE0MwMrBmRhdGE0NAMsBmRhdGE0NQMtBmRhdGE0NgMuBmRhdGE0NwMvBmRhdGE0OAMwBmRhdGE0OQMxBmRhdGE1MAMyBmRhdGE1MQMzBmRhdGE1MgM0BmRhdGE1MwM1BmRhdGE1NAM2BmRhdGE1NQM3BmRhdGE1NgM4BmRhdGE1NwM5BmRhdGE1OAM6BmRhdGE1OQM7BmRhdGE2MAM8BmRhdGE2MQM9BmRhdGE2MgM+BmRhdGE2MwM/BmRhdGE2NANABmRhdGE2NQNBBmRhdGE2NgNCBmRhdGE2NwNDBmRhdGE2OANEBmRhdGE2OQNFBmRhdGE3MANGBmRhdGE3MQNHBmRhdGE3MgNIBmRhdGE3MwNJBmRhdGE3NANKBmRhdGE3NQNLBmRhdGE3NgNMBmRhdGE3NwNNBmRhdGE3OANOBmRhdGE3OQNPBmRhdGE4MANQBmRhdGE4MQNRBmRhdGE4MgNSBmRhdGE4MwNTBmRhdGE4NANUBmRhdGE4NQNVBmRhdGE4NgNWBmRhdGE4NwNXBmRhdGE4OANYBmRhdGE4OQNZBmRhdGE5MANaBmRhdGE5MQNbBmRhdGE5MgNcBmRhdGE5MwNdBmRhdGE5NANeBmRhdGE5NQNfBmRhdGE5NgNgBmRhdGE5NwNhBmRhdGE5OANiBmRhdGE5OQNjB2RhdGExMDADZAdkYXRhMTAxA2UHZGF0YTEwMgNmB2RhdGExMDMDZwdkYXRhMTA0A2gHZGF0YTEwNQNpB2RhdGExMDYDagdkYXRhMTA3A2sHZGF0YTEwOANsB2RhdGExMDkDbQdkYXRhMTEwA24HZGF0YTExMQNvB2RhdGExMTIDcAdkYXRhMTEzA3EHZGF0YTExNANyB2RhdGExMTUDcwdkYXRhMTE2A3QHZGF0YTExNwN1B2RhdGExMTgDdgdkYXRhMTE5A3cHZGF0YTEyMAN4B2RhdGExMjEDeQdkYXRhMTIyA3oHZGF0YTEyMwN7B2RhdGExMjQDfAdkYXRhMTI1A30HZGF0YTEyNgN+B2RhdGExMjcDfwdkYXRhMTI4A4ABB2RhdGExMjkDgQEHZGF0YTEzMAOCAQdkYXRhMTMxA4MBB2RhdGExMzIDhAEHZGF0YTEzMwOFAQdkYXRhMTM0A4YBC7iUgIAAhwEAQQELCyVFMSVCQSU5Q2EAAEEOCwslRTElQkElOUNiAABBGgsMJUUxJUJBJTlDaWYAAEEoCxMlRTElQkElOUNhc3NpZ25lZHAAAEE8CwslRTElQkElOUN4AABByAALCyVFMSVCQSU5Q2EAAEHUAAsUJUUxJUJBJTlDYXNzaWdubWVudAAAQeoACwslRTElQkElOUN4AABB9gALCyVFMSVCQSU5Q2EAAEGCAQsUJUUxJUJBJTlDYXNzaWdubWVudAAAQZgBCwslRTElQkElOUN4AABBpAELCyVFMSVCQSU5Q2IAAEGwAQsPJUUxJUJBJTlDZXF1YWwAAEHAAQsNJUUxJUJBJTlDY2FyAABBzgELECVFMSVCQSU5Q2dvcGhlcgAAQeABCwslRTElQkElOUN4AABB7AELDCVFMSVCQSU5Q2lmAABB+gELDyVFMSVCQSU5Q2xpc3RwAABBigILCyVFMSVCQSU5Q3gAAEGWAgsNJUUxJUJBJTlDY2FyAABBpAILESVFMSVCQSU5Q2ZsYXR0ZW4AAEG2AgsLJUUxJUJBJTlDeAAAQcICCw4lRTElQkElOUN6ZXJvAABB0gILDyVFMSVCQSU5Q2VxdWFsAABB4gILESVFMSVCQSU5Q2ZsYXR0ZW4AAEH0AgsNJUUxJUJBJTlDY2RyAABBggMLECVFMSVCQSU5Q2dvcGhlcgAAQZQDCwslRTElQkElOUN4AABBoAMLDCVFMSVCQSU5Q2lmAABBrgMLDyVFMSVCQSU5Q2xpc3RwAABBvgMLCyVFMSVCQSU5Q3gAAEHKAwsNJUUxJUJBJTlDY2RyAABB2AMLESVFMSVCQSU5Q2ZsYXR0ZW4AAEHqAwsLJUUxJUJBJTlDeAAAQfYDCw4lRTElQkElOUNjb25zAABBhgQLDiVFMSVCQSU5Q3plcm8AAEGWBAsNJUUxJUJBJTlDbmlsAABBpAQLDyVFMSVCQSU5Q2VxdWFsAABBtAQLEiVFMSVCQSU5Q3F1b3RpZW50AABByAQLDyVFMSVCQSU5Q3RpbWVzAABB2AQLCyVFMSVCQSU5Q3kAAEHkBAsLJUUxJUJBJTlDeAAAQfAECwslRTElQkElOUN5AABB/AQLDCVFMSVCQSU5Q2lmAABBigULDyVFMSVCQSU5Q3plcm9wAABBmgULCyVFMSVCQSU5Q3kAAEGmBQsOJUUxJUJBJTlDemVybwAAQbYFCw0lRTElQkElOUNmaXgAAEHEBQsLJUUxJUJBJTlDeAAAQdAFCw8lRTElQkElOUNlcXVhbAAAQeAFCw0lRTElQkElOUNnZXQAAEHuBQsLJUUxJUJBJTlDagAAQfoFCw0lRTElQkElOUNzZXQAAEGIBgsLJUUxJUJBJTlDaQAAQZQGCw0lRTElQkElOUN2YWwAAEGiBgsNJUUxJUJBJTlDbWVtAABBsAYLDCVFMSVCQSU5Q2lmAABBvgYLDSVFMSVCQSU5Q2VxcAAAQcwGCwslRTElQkElOUNqAABB2AYLCyVFMSVCQSU5Q2kAAEHkBgsNJUUxJUJBJTlDdmFsAABB8gYLDSVFMSVCQSU5Q2dldAAAQYAHCwslRTElQkElOUNqAABBjAcLDSVFMSVCQSU5Q21lbQAAQZoHCwslRTElQkElOUN4AABBpgcLCyVFMSVCQSU5Q2YAAEGyBwsOJUUxJUJBJTlDcGx1cwAAQcIHCw4lRTElQkElOUNwbHVzAABB0gcLCyVFMSVCQSU5Q2EAAEHeBwsLJUUxJUJBJTlDYgAAQeoHCw4lRTElQkElOUNwbHVzAABB+gcLCyVFMSVCQSU5Q2MAAEGGCAsOJUUxJUJBJTlDemVybwAAQZYICwslRTElQkElOUN5AABBoggLCyVFMSVCQSU5Q2YAAEGuCAsPJUUxJUJBJTlDdGltZXMAAEG+CAsPJUUxJUJBJTlDdGltZXMAAEHOCAsLJUUxJUJBJTlDYQAAQdoICwslRTElQkElOUNiAABB5ggLDiVFMSVCQSU5Q3BsdXMAAEH2CAsLJUUxJUJBJTlDYwAAQYIJCwslRTElQkElOUNkAABBjgkLCyVFMSVCQSU5Q3oAAEGaCQsLJUUxJUJBJTlDZgAAQaYJCxElRTElQkElOUNyZXZlcnNlAABBuAkLECVFMSVCQSU5Q2FwcGVuZAAAQcoJCxAlRTElQkElOUNhcHBlbmQAAEHcCQsLJUUxJUJBJTlDYQAAQegJCwslRTElQkElOUNiAABB9AkLDSVFMSVCQSU5Q25pbAAAQYIKCwslRTElQkElOUN1AABBjgoLDyVFMSVCQSU5Q2VxdWFsAABBngoLDiVFMSVCQSU5Q3BsdXMAAEGuCgsLJUUxJUJBJTlDYQAAQboKCwslRTElQkElOUNiAABBxgoLFCVFMSVCQSU5Q2RpZmZlcmVuY2UAAEHcCgsLJUUxJUJBJTlDeAAAQegKCwslRTElQkElOUN5AABB9AoLCyVFMSVCQSU5Q3cAAEGACwsPJUUxJUJBJTlDbGVzc3AAAEGQCwsTJUUxJUJBJTlDcmVtYWluZGVyAABBpAsLCyVFMSVCQSU5Q2EAAEGwCwsLJUUxJUJBJTlDYgAAQbwLCxAlRTElQkElOUNtZW1iZXIAAEHOCwsLJUUxJUJBJTlDYQAAQdoLCxAlRTElQkElOUNsZW5ndGgAAEHsCwsLJUUxJUJBJTlDYgAAQfgLCwduYm95ZXIAAEGADAsLJUUxJUJBJTlDKgAAQYwMCwslRTElQkElOUMqAABBmAwLCyVFMSVCQSU5QyoAAEGkDAsLJUUxJUJBJTlDKgAAQbAMCxElRTElQkElOUNpbXBsaWVzAABBwgwLDSVFMSVCQSU5Q2FuZAAAQdAMCxElRTElQkElOUNpbXBsaWVzAABB4gwLESVFMSVCQSU5Q2ltcGxpZXMAAEH0DAsNJUUxJUJBJTlDYW5kAABBgg0LESVFMSVCQSU5Q2ltcGxpZXMAAEGUDQsMJUUxJUJBJTlDaWYAAEGiDQsLJUUxJUJBJTlDZgAAQa4NCwslRTElQkElOUN0AABBug0LDyVFMSVCQSU5Q2VxdWFsAABByg0LLUFERC1MRU1NQSUyMGRpZCUyMG5vdCUyMGxpa2UlMjB0ZXJtJTNBJTIwJTIwAABB+A0LDCVFMSVCQSU5Q29yAABBhg4LCyVFMSVCQSU5Q2YAAEGSDgsMJTIwcmV3cml0ZXMAAEGgDgsLJUUxJUJBJTlDcwAAQawOCwslRTElQkElOUNhAABBuA4LCyVFMSVCQSU5Q3MAAEHEDgsLJUUxJUJBJTlDcwAAQdAOCwslRTElQkElOUNhAABB3A4LCyVFMSVCQSU5Q3MAAEHoDgsHZWFybGV5AABB8A4LP0VhcmxleSUyMG9yJTIwQm95ZXIlMjBkaWQlMjBpbmNvcnJlY3QlMjBudW1iZXIlMjBvZiUyMHJld3JpdGVzAABBsA8LBWV2YWwA'
].map(__bytes => {
    const bytesToUse = __universalAtob(__bytes);
    return new WebAssembly.Instance(new WebAssembly.Module(bytesToUse));
});
const lS = (wI, pos, iWC) => {
    let __str = '';
    if (!Array.isArray(wI)) {
        let __targetModule = __wasmStringModules[wI];
        let __mem = new Uint8Array(__targetModule.exports.memory.buffer);
        const __stringKey = `data${ pos }`;
        let __start = __targetModule.exports[__stringKey] - 1;
        let __str = '';
        let i = __start;
        let __c = __mem[i++];
        while (!(parseInt(__c) & 128) && __mem[i]) {
            __str += __c;
            __c = String.fromCharCode(__mem[i++]);
        }
        __str += __c;
        __str = decodeURIComponent(__str.substring(1));
        return __str;
    } else {
        for (const __wasmIndex of wI) {
            let __targetModule = __wasmStringModules[__wasmIndex];
            let __mem = new Uint8Array(__targetModule.exports.memory.buffer);
            const __stringKey = `data${ pos }`;
            let __start = __targetModule.exports[__stringKey] - 1;
            let i = __start;
            let __c = __mem[i++];
            while (!(parseInt(__c) & 128) && __mem[i]) {
                __str += __c;
                __c = String.fromCharCode(__mem[i++]);
            }
            __str += __c;
        }
        __str = decodeURIComponent(__str.substring(1));
        return __str;
    }
};
var EarleyBoyer = new BenchmarkSuite(lS(0, 0), __lA(0, 16, 20), [
    new Benchmark(lS(0, 1), true, false, 2500, function () {
        (() => {
            const __callInstance75 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        BgL_earleyzd2benchmarkzd2();
                    }
                }
            });
            const __exports = __callInstance75.exports;
            return __exports.data();
        })();
    }),
    new Benchmark(lS(0, 2), true, false, 200, function () {
        (() => {
            const __callInstance74 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        BgL_nboyerzd2benchmarkzd2();
                    }
                }
            });
            const __exports = __callInstance74.exports;
            return __exports.data();
        })();
    })
]);
function sc_print_debug() {
    (() => {
        const __callInstance73 = new WebAssembly.Instance(__callWasmModule, {
            env: {
                impFunc: () => {
                    sc_print.apply(null, arguments);
                }
            }
        });
        const __exports = __callInstance73.exports;
        return __exports.data();
    })();
}
var sc_JS_GLOBALS = this;
var __sc_LINE = -1;
var __sc_FILE = lS(0, 3);
function sc_alert() {
    var len = arguments.length;
    var s = lS(0, 4);
    var i;
    (() => {
        i = 0;
        const __forInstance0 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i < len ? 1 : 0;
                },
                update: () => {
                    i++;
                },
                body: () => {
                    {
                        s += sc_toDisplayString(arguments[i]);
                    }
                }
            }
        });
        const __exports = __forInstance0.exports;
        return __exports.data();
    })();
    return alert(s);
}
function sc_typeof(x) {
    return typeof x;
}
function sc_error() {
    var a = [sc_jsstring2symbol(lS(0, 5))];
    (() => {
        var i = 0;
        const __forInstance1 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i < arguments.length ? 1 : 0;
                },
                update: () => {
                    i++;
                },
                body: () => {
                    {
                        a[i + 1] = arguments[i];
                    }
                }
            }
        });
        const __exports = __forInstance1.exports;
        return __exports.data();
    })();
    throw a;
}
function sc_raise(obj) {
    throw obj;
}
function sc_withHandlerLambda(handler, body) {
    try {
        return body();
    } catch (e) {
        if (!e._internalException)
            return handler(e);
        else
            throw e;
    }
}
var sc_properties = new Object();
function sc_putpropBang(sym, key, val) {
    var ht = sc_properties[sym];
    (() => {
        const __ifInstance0 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    {
                        ht = new Object();
                        sc_properties[sym] = ht;
                    }
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance0.exports;
        return __exports.data(!ht ? 1 : 0);
    })();
    ht[key] = val;
}
function sc_getprop(sym, key) {
    var ht = sc_properties[sym];
    if (ht) {
        if (key in ht)
            return ht[key];
        else
            return false;
    } else
        return false;
}
function sc_rempropBang(sym, key) {
    var ht = sc_properties[sym];
    (() => {
        const __ifInstance1 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    delete ht[key];
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance1.exports;
        return __exports.data(ht ? 1 : 0);
    })();
}
function sc_any2String(o) {
    return jsstring2string(sc_toDisplayString(o));
}
function sc_isEqv(o1, o2) {
    return o1 === o2;
}
function sc_isEq(o1, o2) {
    return o1 === o2;
}
function sc_isNumber(n) {
    return typeof n === lS(0, 6);
}
function sc_isComplex(n) {
    return sc_isNumber(n);
}
function sc_isReal(n) {
    return sc_isNumber(n);
}
function sc_isRational(n) {
    return sc_isReal(n);
}
function sc_isInteger(n) {
    return parseInt(n) === n;
}
function sc_isExact(n) {
    return false;
}
function sc_isInexact(n) {
    return true;
}
function sc_equal(x) {
    for (var i = 1; i < arguments.length; i++)
        if (x !== arguments[i])
            return false;
    return true;
}
function sc_less(x) {
    for (var i = 1; i < arguments.length; i++) {
        if (x >= arguments[i])
            return false;
        x = arguments[i];
    }
    return true;
}
function sc_greater(x, y) {
    for (var i = 1; i < arguments.length; i++) {
        if (x <= arguments[i])
            return false;
        x = arguments[i];
    }
    return true;
}
function sc_lessEqual(x, y) {
    for (var i = 1; i < arguments.length; i++) {
        if (x > arguments[i])
            return false;
        x = arguments[i];
    }
    return true;
}
function sc_greaterEqual(x, y) {
    for (var i = 1; i < arguments.length; i++) {
        if (x < arguments[i])
            return false;
        x = arguments[i];
    }
    return true;
}
function sc_isZero(x) {
    return x === 0;
}
function sc_isPositive(x) {
    return x > 0;
}
function sc_isNegative(x) {
    return x < 0;
}
function sc_isOdd(x) {
    return x % 2 === 1;
}
function sc_isEven(x) {
    return x % 2 === 0;
}
var sc_max = Math.max;
var sc_min = Math.min;
function sc_plus() {
    var sum = 0;
    (() => {
        var i = 0;
        const __forInstance2 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i < arguments.length ? 1 : 0;
                },
                update: () => {
                    i++;
                },
                body: () => {
                    sum += arguments[i];
                }
            }
        });
        const __exports = __forInstance2.exports;
        return __exports.data();
    })();
    return sum;
}
function sc_multi() {
    var product = 1;
    (() => {
        var i = 0;
        const __forInstance3 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i < arguments.length ? 1 : 0;
                },
                update: () => {
                    i++;
                },
                body: () => {
                    product *= arguments[i];
                }
            }
        });
        const __exports = __forInstance3.exports;
        return __exports.data();
    })();
    return product;
}
function sc_minus(x) {
    if (arguments.length === 1)
        return -x;
    else {
        var res = x;
        (() => {
            var i = 1;
            const __forInstance4 = new WebAssembly.Instance(__forWasmModule, {
                env: {
                    test: () => {
                        return i < arguments.length ? 1 : 0;
                    },
                    update: () => {
                        i++;
                    },
                    body: () => {
                        res -= arguments[i];
                    }
                }
            });
            const __exports = __forInstance4.exports;
            return __exports.data();
        })();
        return res;
    }
}
function sc_div(x) {
    if (arguments.length === 1)
        return 1 / x;
    else {
        var res = x;
        (() => {
            var i = 1;
            const __forInstance5 = new WebAssembly.Instance(__forWasmModule, {
                env: {
                    test: () => {
                        return i < arguments.length ? 1 : 0;
                    },
                    update: () => {
                        i++;
                    },
                    body: () => {
                        res /= arguments[i];
                    }
                }
            });
            const __exports = __forInstance5.exports;
            return __exports.data();
        })();
        return res;
    }
}
var sc_abs = Math.abs;
function sc_quotient(x, y) {
    return parseInt(x / y);
}
function sc_remainder(x, y) {
    return x % y;
}
function sc_modulo(x, y) {
    var remainder = x % y;
    if (remainder * y < 0)
        return remainder + y;
    else
        return remainder;
}
function sc_euclid_gcd(a, b) {
    var temp;
    if (a === 0)
        return b;
    if (b === 0)
        return a;
    (() => {
        const __ifInstance2 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    {
                        a = -a;
                    }
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance2.exports;
        return __exports.data(a < 0 ? 1 : 0);
    })();
    ;
    (() => {
        const __ifInstance3 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    {
                        b = -b;
                    }
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance3.exports;
        return __exports.data(b < 0 ? 1 : 0);
    })();
    ;
    (() => {
        const __ifInstance4 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    {
                        temp = a;
                        a = b;
                        b = temp;
                    }
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance4.exports;
        return __exports.data(b > a ? 1 : 0);
    })();
    ;
    while (true) {
        a %= b;
        if (a === 0) {
            return b;
        }
        ;
        b %= a;
        if (b === 0) {
            return a;
        }
        ;
    }
    ;
    return b;
}
function sc_gcd() {
    var gcd = 0;
    (() => {
        var i = 0;
        const __forInstance6 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i < arguments.length ? 1 : 0;
                },
                update: () => {
                    i++;
                },
                body: () => {
                    gcd = sc_euclid_gcd(gcd, arguments[i]);
                }
            }
        });
        const __exports = __forInstance6.exports;
        return __exports.data();
    })();
    return gcd;
}
function sc_lcm() {
    var lcm = 1;
    (() => {
        var i = 0;
        const __forInstance7 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i < arguments.length ? 1 : 0;
                },
                update: () => {
                    i++;
                },
                body: () => {
                    {
                        var f = Math.round(arguments[i] / sc_euclid_gcd(arguments[i], lcm));
                        lcm *= Math.abs(f);
                    }
                }
            }
        });
        const __exports = __forInstance7.exports;
        return __exports.data();
    })();
    return lcm;
}
var sc_floor = Math.floor;
var sc_ceiling = Math.ceil;
var sc_truncate = parseInt;
var sc_round = Math.round;
var sc_exp = Math.exp;
var sc_log = Math.log;
var sc_sin = Math.sin;
var sc_cos = Math.cos;
var sc_tan = Math.tan;
var sc_asin = Math.asin;
var sc_acos = Math.acos;
var sc_atan = Math.atan;
var sc_sqrt = Math.sqrt;
var sc_expt = Math.pow;
function sc_exact2inexact(x) {
    return x;
}
function sc_inexact2exact(x) {
    return x;
}
function sc_number2jsstring(x, radix) {
    if (radix)
        return x.toString(radix);
    else
        return x.toString();
}
function sc_jsstring2number(s, radix) {
    if (s === lS(0, 7))
        return false;
    if (radix) {
        var t = parseInt(s, radix);
        if (!t && t !== 0)
            return false;
        var allowedChars = lS(0, 8).substring(0, radix + 1);
        if (new RegExp(lS(0, 9) + allowedChars + lS(0, 10), lS(0, 11)).test(s))
            return t;
        else
            return false;
    } else {
        var t = +s;
        if (!t && t !== 0)
            return false;
        var c = s.charAt(0);
        if (+c === 0 && c !== lS(0, 12))
            return false;
        return t;
    }
}
function sc_not(b) {
    return b === false;
}
function sc_isBoolean(b) {
    return b === true || b === false;
}
function sc_Pair(car, cdr) {
    this.car = car;
    this.cdr = cdr;
}
sc_Pair.prototype.toString = function () {
    return sc_toDisplayString(this);
};
sc_Pair.prototype.sc_toWriteOrDisplayString = function (writeOrDisplay) {
    var current = this;
    var res = lS(0, 13);
    while (true) {
        res += writeOrDisplay(current.car);
        if (sc_isPair(current.cdr)) {
            res += lS(0, 14);
            current = current.cdr;
        } else if (current.cdr !== null) {
            res += lS(0, 15) + writeOrDisplay(current.cdr);
            break;
        } else
            break;
    }
    res += lS(0, 16);
    return res;
};
sc_Pair.prototype.sc_toDisplayString = function () {
    return this.sc_toWriteOrDisplayString(sc_toDisplayString);
};
sc_Pair.prototype.sc_toWriteString = function () {
    return this.sc_toWriteOrDisplayString(sc_toWriteString);
};
function sc_isPair(p) {
    return p instanceof sc_Pair;
}
function sc_isPairEqual(p1, p2, comp) {
    return comp(p1.car, p2.car) && comp(p1.cdr, p2.cdr);
}
function sc_cons(car, cdr) {
    return new sc_Pair(car, cdr);
}
function sc_consStar() {
    var res = arguments[arguments.length - 1];
    (() => {
        var i = arguments.length - 2;
        const __forInstance8 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i >= 0 ? 1 : 0;
                },
                update: () => {
                    i--;
                },
                body: () => {
                    res = new sc_Pair(arguments[i], res);
                }
            }
        });
        const __exports = __forInstance8.exports;
        return __exports.data();
    })();
    return res;
}
function sc_car(p) {
    return p.car;
}
function sc_cdr(p) {
    return p.cdr;
}
function sc_setCarBang(p, val) {
    p.car = val;
}
function sc_setCdrBang(p, val) {
    p.cdr = val;
}
function sc_caar(p) {
    return p.car.car;
}
function sc_cadr(p) {
    return p.cdr.car;
}
function sc_cdar(p) {
    return p.car.cdr;
}
function sc_cddr(p) {
    return p.cdr.cdr;
}
function sc_caaar(p) {
    return p.car.car.car;
}
function sc_cadar(p) {
    return p.car.cdr.car;
}
function sc_caadr(p) {
    return p.cdr.car.car;
}
function sc_caddr(p) {
    return p.cdr.cdr.car;
}
function sc_cdaar(p) {
    return p.car.car.cdr;
}
function sc_cdadr(p) {
    return p.cdr.car.cdr;
}
function sc_cddar(p) {
    return p.car.cdr.cdr;
}
function sc_cdddr(p) {
    return p.cdr.cdr.cdr;
}
function sc_caaaar(p) {
    return p.car.car.car.car;
}
function sc_caadar(p) {
    return p.car.cdr.car.car;
}
function sc_caaadr(p) {
    return p.cdr.car.car.car;
}
function sc_caaddr(p) {
    return p.cdr.cdr.car.car;
}
function sc_cdaaar(p) {
    return p.car.car.car.cdr;
}
function sc_cdadar(p) {
    return p.car.cdr.car.cdr;
}
function sc_cdaadr(p) {
    return p.cdr.car.car.cdr;
}
function sc_cdaddr(p) {
    return p.cdr.cdr.car.cdr;
}
function sc_cadaar(p) {
    return p.car.car.cdr.car;
}
function sc_caddar(p) {
    return p.car.cdr.cdr.car;
}
function sc_cadadr(p) {
    return p.cdr.car.cdr.car;
}
function sc_cadddr(p) {
    return p.cdr.cdr.cdr.car;
}
function sc_cddaar(p) {
    return p.car.car.cdr.cdr;
}
function sc_cdddar(p) {
    return p.car.cdr.cdr.cdr;
}
function sc_cddadr(p) {
    return p.cdr.car.cdr.cdr;
}
function sc_cddddr(p) {
    return p.cdr.cdr.cdr.cdr;
}
function sc_lastPair(l) {
    (() => {
        const __ifInstance5 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    (() => {
                        const __callInstance72 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    sc_error(lS(0, 17));
                                }
                            }
                        });
                        const __exports = __callInstance72.exports;
                        return __exports.data();
                    })();
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance5.exports;
        return __exports.data(!sc_isPair(l) ? 1 : 0);
    })();
    var res = l;
    var cdr = l.cdr;
    (() => {
        const __forInstance38 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return sc_isPair(cdr) ? 1 : 0;
                },
                update: () => {
                },
                body: () => {
                    {
                        res = cdr;
                        cdr = res.cdr;
                    }
                }
            }
        });
        const __exports = __forInstance38.exports;
        return __exports.data();
    })();
    return res;
}
function sc_isNull(o) {
    return o === null;
}
function sc_isList(o) {
    var rabbit;
    var turtle;
    var rabbit = o;
    var turtle = o;
    while (true) {
        if (rabbit === null || rabbit instanceof sc_Pair && rabbit.cdr === null)
            return true;
        else if (rabbit instanceof sc_Pair && rabbit.cdr instanceof sc_Pair) {
            rabbit = rabbit.cdr.cdr;
            turtle = turtle.cdr;
            if (rabbit === turtle)
                return false;
        } else
            return false;
    }
}
function sc_list() {
    var res = null;
    var a = arguments;
    (() => {
        var i = a.length - 1;
        const __forInstance9 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i >= 0 ? 1 : 0;
                },
                update: () => {
                    i--;
                },
                body: () => {
                    res = new sc_Pair(a[i], res);
                }
            }
        });
        const __exports = __forInstance9.exports;
        return __exports.data();
    })();
    return res;
}
function sc_iota(num, init) {
    var res = null;
    (() => {
        const __ifInstance6 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    init = 0;
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance6.exports;
        return __exports.data(!init ? 1 : 0);
    })();
    (() => {
        var i = num - 1;
        const __forInstance10 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i >= 0 ? 1 : 0;
                },
                update: () => {
                    i--;
                },
                body: () => {
                    res = new sc_Pair(i + init, res);
                }
            }
        });
        const __exports = __forInstance10.exports;
        return __exports.data();
    })();
    return res;
}
function sc_makeList(nbEls, fill) {
    var res = null;
    (() => {
        var i = 0;
        const __forInstance11 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i < nbEls ? 1 : 0;
                },
                update: () => {
                    i++;
                },
                body: () => {
                    res = new sc_Pair(fill, res);
                }
            }
        });
        const __exports = __forInstance11.exports;
        return __exports.data();
    })();
    return res;
}
function sc_length(l) {
    var res = 0;
    (() => {
        const __forInstance39 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return l !== null ? 1 : 0;
                },
                update: () => {
                },
                body: () => {
                    {
                        res++;
                        l = l.cdr;
                    }
                }
            }
        });
        const __exports = __forInstance39.exports;
        return __exports.data();
    })();
    return res;
}
function sc_remq(o, l) {
    var dummy = { cdr: null };
    var tail = dummy;
    (() => {
        const __forInstance40 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return l !== null ? 1 : 0;
                },
                update: () => {
                },
                body: () => {
                    {
                        (() => {
                            const __ifInstance7 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            tail.cdr = sc_cons(l.car, null);
                                            tail = tail.cdr;
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance7.exports;
                            return __exports.data(l.car !== o ? 1 : 0);
                        })();
                        l = l.cdr;
                    }
                }
            }
        });
        const __exports = __forInstance40.exports;
        return __exports.data();
    })();
    return dummy.cdr;
}
function sc_remqBang(o, l) {
    var dummy = { cdr: null };
    var tail = dummy;
    var needsAssig = true;
    (() => {
        const __forInstance41 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return l !== null ? 1 : 0;
                },
                update: () => {
                },
                body: () => {
                    {
                        (() => {
                            const __ifInstance8 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            needsAssig = true;
                                        }
                                    },
                                    impFunc2: () => {
                                        {
                                            (() => {
                                                const __ifInstance9 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                tail.cdr = l;
                                                                needsAssig = false;
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance9.exports;
                                                return __exports.data(needsAssig ? 1 : 0);
                                            })();
                                            tail = l;
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance8.exports;
                            return __exports.data(l.car === o ? 1 : 0);
                        })();
                        l = l.cdr;
                    }
                }
            }
        });
        const __exports = __forInstance41.exports;
        return __exports.data();
    })();
    tail.cdr = null;
    return dummy.cdr;
}
function sc_delete(o, l) {
    var dummy = { cdr: null };
    var tail = dummy;
    (() => {
        const __forInstance42 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return l !== null ? 1 : 0;
                },
                update: () => {
                },
                body: () => {
                    {
                        (() => {
                            const __ifInstance10 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            tail.cdr = sc_cons(l.car, null);
                                            tail = tail.cdr;
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance10.exports;
                            return __exports.data(!sc_isEqual(l.car, o) ? 1 : 0);
                        })();
                        l = l.cdr;
                    }
                }
            }
        });
        const __exports = __forInstance42.exports;
        return __exports.data();
    })();
    return dummy.cdr;
}
function sc_deleteBang(o, l) {
    var dummy = { cdr: null };
    var tail = dummy;
    var needsAssig = true;
    (() => {
        const __forInstance43 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return l !== null ? 1 : 0;
                },
                update: () => {
                },
                body: () => {
                    {
                        (() => {
                            const __ifInstance11 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            needsAssig = true;
                                        }
                                    },
                                    impFunc2: () => {
                                        {
                                            (() => {
                                                const __ifInstance12 = new WebAssembly.Instance(__ifWasmModule, {
                                                    env: {
                                                        impFunc1: () => {
                                                            {
                                                                tail.cdr = l;
                                                                needsAssig = false;
                                                            }
                                                        },
                                                        impFunc2: () => {
                                                        }
                                                    }
                                                });
                                                const __exports = __ifInstance12.exports;
                                                return __exports.data(needsAssig ? 1 : 0);
                                            })();
                                            tail = l;
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance11.exports;
                            return __exports.data(sc_isEqual(l.car, o) ? 1 : 0);
                        })();
                        l = l.cdr;
                    }
                }
            }
        });
        const __exports = __forInstance43.exports;
        return __exports.data();
    })();
    tail.cdr = null;
    return dummy.cdr;
}
function sc_reverseAppendBang(l1, l2) {
    var res = l2;
    (() => {
        const __forInstance44 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return l1 !== null ? 1 : 0;
                },
                update: () => {
                },
                body: () => {
                    {
                        var tmp = res;
                        res = l1;
                        l1 = l1.cdr;
                        res.cdr = tmp;
                    }
                }
            }
        });
        const __exports = __forInstance44.exports;
        return __exports.data();
    })();
    return res;
}
function sc_dualAppend(l1, l2) {
    if (l1 === null)
        return l2;
    if (l2 === null)
        return l1;
    var rev = sc_reverse(l1);
    return sc_reverseAppendBang(rev, l2);
}
function sc_append() {
    if (arguments.length === 0)
        return null;
    var res = arguments[arguments.length - 1];
    (() => {
        var i = arguments.length - 2;
        const __forInstance12 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i >= 0 ? 1 : 0;
                },
                update: () => {
                    i--;
                },
                body: () => {
                    res = sc_dualAppend(arguments[i], res);
                }
            }
        });
        const __exports = __forInstance12.exports;
        return __exports.data();
    })();
    return res;
}
function sc_dualAppendBang(l1, l2) {
    if (l1 === null)
        return l2;
    if (l2 === null)
        return l1;
    var tmp = l1;
    (() => {
        const __forInstance45 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return tmp.cdr !== null ? 1 : 0;
                },
                update: () => {
                },
                body: () => {
                    tmp = tmp.cdr;
                }
            }
        });
        const __exports = __forInstance45.exports;
        return __exports.data();
    })();
    tmp.cdr = l2;
    return l1;
}
function sc_appendBang() {
    var res = null;
    (() => {
        var i = 0;
        const __forInstance13 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i < arguments.length ? 1 : 0;
                },
                update: () => {
                    i++;
                },
                body: () => {
                    res = sc_dualAppendBang(res, arguments[i]);
                }
            }
        });
        const __exports = __forInstance13.exports;
        return __exports.data();
    })();
    return res;
}
function sc_reverse(l1) {
    var res = null;
    (() => {
        const __forInstance46 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return l1 !== null ? 1 : 0;
                },
                update: () => {
                },
                body: () => {
                    {
                        res = sc_cons(l1.car, res);
                        l1 = l1.cdr;
                    }
                }
            }
        });
        const __exports = __forInstance46.exports;
        return __exports.data();
    })();
    return res;
}
function sc_reverseBang(l) {
    return sc_reverseAppendBang(l, null);
}
function sc_listTail(l, k) {
    var res = l;
    (() => {
        var i = 0;
        const __forInstance14 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i < k ? 1 : 0;
                },
                update: () => {
                    i++;
                },
                body: () => {
                    {
                        res = res.cdr;
                    }
                }
            }
        });
        const __exports = __forInstance14.exports;
        return __exports.data();
    })();
    return res;
}
function sc_listRef(l, k) {
    return sc_listTail(l, k).car;
}
function sc_memq(o, l) {
    while (l !== null) {
        if (l.car === o)
            return l;
        l = l.cdr;
    }
    return false;
}
function sc_memv(o, l) {
    while (l !== null) {
        if (l.car === o)
            return l;
        l = l.cdr;
    }
    return false;
}
function sc_member(o, l) {
    while (l !== null) {
        if (sc_isEqual(l.car, o))
            return l;
        l = l.cdr;
    }
    return false;
}
function sc_assq(o, al) {
    while (al !== null) {
        if (al.car.car === o)
            return al.car;
        al = al.cdr;
    }
    return false;
}
function sc_assv(o, al) {
    while (al !== null) {
        if (al.car.car === o)
            return al.car;
        al = al.cdr;
    }
    return false;
}
function sc_assoc(o, al) {
    while (al !== null) {
        if (sc_isEqual(al.car.car, o))
            return al.car;
        al = al.cdr;
    }
    return false;
}
function sc_isCharStringEqual(cs1, cs2) {
    return cs1.val === cs2.val;
}
function sc_isCharStringLess(cs1, cs2) {
    return cs1.val < cs2.val;
}
function sc_isCharStringGreater(cs1, cs2) {
    return cs1.val > cs2.val;
}
function sc_isCharStringLessEqual(cs1, cs2) {
    return cs1.val <= cs2.val;
}
function sc_isCharStringGreaterEqual(cs1, cs2) {
    return cs1.val >= cs2.val;
}
function sc_isCharStringCIEqual(cs1, cs2) {
    return cs1.val.toLowerCase() === cs2.val.toLowerCase();
}
function sc_isCharStringCILess(cs1, cs2) {
    return cs1.val.toLowerCase() < cs2.val.toLowerCase();
}
function sc_isCharStringCIGreater(cs1, cs2) {
    return cs1.val.toLowerCase() > cs2.val.toLowerCase();
}
function sc_isCharStringCILessEqual(cs1, cs2) {
    return cs1.val.toLowerCase() <= cs2.val.toLowerCase();
}
function sc_isCharStringCIGreaterEqual(cs1, cs2) {
    return cs1.val.toLowerCase() >= cs2.val.toLowerCase();
}
function sc_Char(c) {
    var cached = sc_Char.lazy[c];
    if (cached)
        return cached;
    this.val = c;
    sc_Char.lazy[c] = this;
    return undefined;
}
sc_Char.lazy = new Object();
sc_Char.char2readable = {
    '\0': '#\\null',
    '\x07': '#\\bell',
    '\b': '#\\backspace',
    '\t': '#\\tab',
    '\n': '#\\newline',
    '\f': '#\\page',
    '\r': '#\\return',
    '\x1B': '#\\escape',
    ' ': '#\\space',
    '\x7F': '#\\delete',
    '\x01': '#\\soh',
    '\x02': '#\\stx',
    '\x03': '#\\etx',
    '\x04': '#\\eot',
    '\x05': '#\\enq',
    '\x06': '#\\ack',
    '\x0B': '#\\vt',
    '\x0E': '#\\so',
    '\x0F': '#\\si',
    '\x10': '#\\dle',
    '\x11': '#\\dc1',
    '\x12': '#\\dc2',
    '\x13': '#\\dc3',
    '\x14': '#\\dc4',
    '\x15': '#\\nak',
    '\x16': '#\\syn',
    '\x17': '#\\etb',
    '\x18': '#\\can',
    '\x19': '#\\em',
    '\x1A': '#\\sub',
    '\x1B': '#\\esc',
    '\x1C': '#\\fs',
    '\x1D': '#\\gs',
    '\x1E': '#\\rs',
    '\x1F': '#\\us'
};
sc_Char.readable2char = {
    'null': '\0',
    'bell': '\x07',
    'backspace': '\b',
    'tab': '\t',
    'newline': '\n',
    'page': '\f',
    'return': '\r',
    'escape': '\x1B',
    'space': ' ',
    'delete': '\0',
    'soh': '\x01',
    'stx': '\x02',
    'etx': '\x03',
    'eot': '\x04',
    'enq': '\x05',
    'ack': '\x06',
    'bel': '\x07',
    'bs': '\b',
    'ht': '\t',
    'nl': '\n',
    'vt': '\x0B',
    'np': '\f',
    'cr': '\r',
    'so': '\x0E',
    'si': '\x0F',
    'dle': '\x10',
    'dc1': '\x11',
    'dc2': '\x12',
    'dc3': '\x13',
    'dc4': '\x14',
    'nak': '\x15',
    'syn': '\x16',
    'etb': '\x17',
    'can': '\x18',
    'em': '\x19',
    'sub': '\x1A',
    'esc': '\x1B',
    'fs': '\x1C',
    'gs': '\x1D',
    'rs': '\x1E',
    'us': '\x1F',
    'sp': ' ',
    'del': '\x7F'
};
sc_Char.prototype.toString = function () {
    return this.val;
};
sc_Char.prototype.sc_toWriteString = function () {
    var entry = sc_Char.char2readable[this.val];
    if (entry)
        return entry;
    else
        return lS(0, 18) + this.val;
};
function sc_isChar(c) {
    return c instanceof sc_Char;
}
var sc_isCharEqual = sc_isCharStringEqual;
var sc_isCharLess = sc_isCharStringLess;
var sc_isCharGreater = sc_isCharStringGreater;
var sc_isCharLessEqual = sc_isCharStringLessEqual;
var sc_isCharGreaterEqual = sc_isCharStringGreaterEqual;
var sc_isCharCIEqual = sc_isCharStringCIEqual;
var sc_isCharCILess = sc_isCharStringCILess;
var sc_isCharCIGreater = sc_isCharStringCIGreater;
var sc_isCharCILessEqual = sc_isCharStringCILessEqual;
var sc_isCharCIGreaterEqual = sc_isCharStringCIGreaterEqual;
var SC_NUMBER_CLASS = lS(0, 19);
var SC_WHITESPACE_CLASS = lS(0, 20);
var SC_LOWER_CLASS = lS(0, 21);
var SC_UPPER_CLASS = lS(0, 22);
function sc_isCharOfClass(c, cl) {
    return cl.indexOf(c) != -1;
}
function sc_isCharAlphabetic(c) {
    return sc_isCharOfClass(c.val, SC_LOWER_CLASS) || sc_isCharOfClass(c.val, SC_UPPER_CLASS);
}
function sc_isCharNumeric(c) {
    return sc_isCharOfClass(c.val, SC_NUMBER_CLASS);
}
function sc_isCharWhitespace(c) {
    var tmp = c.val;
    return tmp === lS(0, 23) || tmp === lS(0, 24) || tmp === lS(0, 25) || tmp === lS(0, 26) || tmp === lS(0, 27);
}
function sc_isCharUpperCase(c) {
    return sc_isCharOfClass(c.val, SC_UPPER_CLASS);
}
function sc_isCharLowerCase(c) {
    return sc_isCharOfClass(c.val, SC_LOWER_CLASS);
}
function sc_char2integer(c) {
    return c.val.charCodeAt(0);
}
function sc_integer2char(n) {
    return new sc_Char(String.fromCharCode(n));
}
function sc_charUpcase(c) {
    return new sc_Char(c.val.toUpperCase());
}
function sc_charDowncase(c) {
    return new sc_Char(c.val.toLowerCase());
}
function sc_makeJSStringOfLength(k, c) {
    var fill;
    (() => {
        const __ifInstance13 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    fill = lS(0, 28);
                },
                impFunc2: () => {
                    fill = c;
                }
            }
        });
        const __exports = __ifInstance13.exports;
        return __exports.data(c === undefined ? 1 : 0);
    })();
    var res = lS(0, 29);
    var len = 1;
    (() => {
        const __forInstance47 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return k >= len ? 1 : 0;
                },
                update: () => {
                },
                body: () => {
                    {
                        (() => {
                            const __ifInstance14 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        res = res.concat(fill);
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance14.exports;
                            return __exports.data(k & len ? 1 : 0);
                        })();
                        fill = fill.concat(fill);
                        len *= 2;
                    }
                }
            }
        });
        const __exports = __forInstance47.exports;
        return __exports.data();
    })();
    return res;
}
function sc_makejsString(k, c) {
    var fill;
    (() => {
        const __ifInstance15 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    fill = c.val;
                },
                impFunc2: () => {
                    fill = lS(0, 30);
                }
            }
        });
        const __exports = __ifInstance15.exports;
        return __exports.data(c ? 1 : 0);
    })();
    return sc_makeJSStringOfLength(k, fill);
}
function sc_jsstring2list(s) {
    var res = null;
    (() => {
        var i = s.length - 1;
        const __forInstance15 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i >= 0 ? 1 : 0;
                },
                update: () => {
                    i--;
                },
                body: () => {
                    res = sc_cons(new sc_Char(s.charAt(i)), res);
                }
            }
        });
        const __exports = __forInstance15.exports;
        return __exports.data();
    })();
    return res;
}
function sc_list2jsstring(l) {
    var a = new Array();
    (() => {
        const __forInstance48 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return l !== null ? 1 : 0;
                },
                update: () => {
                },
                body: () => {
                    {
                        (() => {
                            const __callInstance71 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        a.push(l.car.val);
                                    }
                                }
                            });
                            const __exports = __callInstance71.exports;
                            return __exports.data();
                        })();
                        l = l.cdr;
                    }
                }
            }
        });
        const __exports = __forInstance48.exports;
        return __exports.data();
    })();
    return lS(0, 31).concat.apply(lS(0, 32), a);
}
var sc_Vector = Array;
sc_Vector.prototype.sc_toWriteOrDisplayString = function (writeOrDisplay) {
    if (this.length === 0)
        return lS(0, 33);
    var res = lS(0, 34) + writeOrDisplay(this[0]);
    (() => {
        var i = 1;
        const __forInstance16 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i < this.length ? 1 : 0;
                },
                update: () => {
                    i++;
                },
                body: () => {
                    res += lS(0, 35) + writeOrDisplay(this[i]);
                }
            }
        });
        const __exports = __forInstance16.exports;
        return __exports.data();
    })();
    res += lS(0, 36);
    return res;
};
sc_Vector.prototype.sc_toDisplayString = function () {
    return this.sc_toWriteOrDisplayString(sc_toDisplayString);
};
sc_Vector.prototype.sc_toWriteString = function () {
    return this.sc_toWriteOrDisplayString(sc_toWriteString);
};
function sc_isVector(v) {
    return v instanceof sc_Vector;
}
function sc_isVectorEqual(v1, v2, comp) {
    if (v1.length !== v2.length)
        return false;
    for (var i = 0; i < v1.length; i++)
        if (!comp(v1[i], v2[i]))
            return false;
    return true;
}
function sc_makeVector(size, fill) {
    var a = new sc_Vector(size);
    (() => {
        const __ifInstance16 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    (() => {
                        const __callInstance70 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    sc_vectorFillBang(a, fill);
                                }
                            }
                        });
                        const __exports = __callInstance70.exports;
                        return __exports.data();
                    })();
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance16.exports;
        return __exports.data(fill !== undefined ? 1 : 0);
    })();
    return a;
}
function sc_vector() {
    var a = new sc_Vector();
    (() => {
        var i = 0;
        const __forInstance17 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i < arguments.length ? 1 : 0;
                },
                update: () => {
                    i++;
                },
                body: () => {
                    (() => {
                        const __callInstance69 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    a.push(arguments[i]);
                                }
                            }
                        });
                        const __exports = __callInstance69.exports;
                        return __exports.data();
                    })();
                }
            }
        });
        const __exports = __forInstance17.exports;
        return __exports.data();
    })();
    return a;
}
function sc_vectorLength(v) {
    return v.length;
}
function sc_vectorRef(v, pos) {
    return v[pos];
}
function sc_vectorSetBang(v, pos, val) {
    v[pos] = val;
}
function sc_vector2list(a) {
    var res = null;
    (() => {
        var i = a.length - 1;
        const __forInstance18 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i >= 0 ? 1 : 0;
                },
                update: () => {
                    i--;
                },
                body: () => {
                    res = sc_cons(a[i], res);
                }
            }
        });
        const __exports = __forInstance18.exports;
        return __exports.data();
    })();
    return res;
}
function sc_list2vector(l) {
    var a = new sc_Vector();
    (() => {
        const __forInstance49 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return l !== null ? 1 : 0;
                },
                update: () => {
                },
                body: () => {
                    {
                        (() => {
                            const __callInstance68 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        a.push(l.car);
                                    }
                                }
                            });
                            const __exports = __callInstance68.exports;
                            return __exports.data();
                        })();
                        l = l.cdr;
                    }
                }
            }
        });
        const __exports = __forInstance49.exports;
        return __exports.data();
    })();
    return a;
}
function sc_vectorFillBang(a, fill) {
    (() => {
        var i = 0;
        const __forInstance19 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i < a.length ? 1 : 0;
                },
                update: () => {
                    i++;
                },
                body: () => {
                    a[i] = fill;
                }
            }
        });
        const __exports = __forInstance19.exports;
        return __exports.data();
    })();
}
function sc_copyVector(a, len) {
    if (len <= a.length)
        return a.slice(0, len);
    else {
        var tmp = a.concat();
        tmp.length = len;
        return tmp;
    }
}
function sc_vectorCopy(a, start, end) {
    return a.slice(start, end);
}
function sc_vectorCopyBang(target, tstart, source, sstart, send) {
    (() => {
        const __ifInstance17 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    sstart = 0;
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance17.exports;
        return __exports.data(!sstart ? 1 : 0);
    })();
    (() => {
        const __ifInstance18 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    send = source.length;
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance18.exports;
        return __exports.data(!send ? 1 : 0);
    })();
    (() => {
        const __ifInstance19 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    {
                        (() => {
                            var i = tstart, j = sstart;
                            const __forInstance20 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return j < send ? 1 : 0;
                                    },
                                    update: () => {
                                        i++, j++;
                                    },
                                    body: () => {
                                        {
                                            target[i] = source[j];
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance20.exports;
                            return __exports.data();
                        })();
                    }
                },
                impFunc2: () => {
                    {
                        var diff = send - sstart;
                        (() => {
                            var i = tstart + diff - 1, j = send - 1;
                            const __forInstance21 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return j >= sstart ? 1 : 0;
                                    },
                                    update: () => {
                                        i--, j--;
                                    },
                                    body: () => {
                                        {
                                            target[i] = source[j];
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance21.exports;
                            return __exports.data();
                        })();
                    }
                }
            }
        });
        const __exports = __ifInstance19.exports;
        return __exports.data(tstart <= sstart ? 1 : 0);
    })();
    return target;
}
function sc_isProcedure(o) {
    return typeof o === lS(0, 37);
}
function sc_apply(proc) {
    var args = new Array();
    (() => {
        var i = 1;
        const __forInstance22 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i < arguments.length - 1 ? 1 : 0;
                },
                update: () => {
                    i++;
                },
                body: () => {
                    (() => {
                        const __callInstance67 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    args.push(arguments[i]);
                                }
                            }
                        });
                        const __exports = __callInstance67.exports;
                        return __exports.data();
                    })();
                }
            }
        });
        const __exports = __forInstance22.exports;
        return __exports.data();
    })();
    var l = arguments[arguments.length - 1];
    (() => {
        const __forInstance50 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return l !== null ? 1 : 0;
                },
                update: () => {
                },
                body: () => {
                    {
                        (() => {
                            const __callInstance66 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        args.push(l.car);
                                    }
                                }
                            });
                            const __exports = __callInstance66.exports;
                            return __exports.data();
                        })();
                        l = l.cdr;
                    }
                }
            }
        });
        const __exports = __forInstance50.exports;
        return __exports.data();
    })();
    return proc.apply(null, args);
}
function sc_map(proc, l1) {
    if (l1 === undefined)
        return null;
    var nbApplyArgs = arguments.length - 1;
    var applyArgs = new Array(nbApplyArgs);
    var revres = null;
    (() => {
        const __forInstance51 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return l1 !== null ? 1 : 0;
                },
                update: () => {
                },
                body: () => {
                    {
                        (() => {
                            var i = 0;
                            const __forInstance23 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return i < nbApplyArgs ? 1 : 0;
                                    },
                                    update: () => {
                                        i++;
                                    },
                                    body: () => {
                                        {
                                            applyArgs[i] = arguments[i + 1].car;
                                            arguments[i + 1] = arguments[i + 1].cdr;
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance23.exports;
                            return __exports.data();
                        })();
                        revres = sc_cons(proc.apply(null, applyArgs), revres);
                    }
                }
            }
        });
        const __exports = __forInstance51.exports;
        return __exports.data();
    })();
    return sc_reverseAppendBang(revres, null);
}
function sc_mapBang(proc, l1) {
    if (l1 === undefined)
        return null;
    var l1_orig = l1;
    var nbApplyArgs = arguments.length - 1;
    var applyArgs = new Array(nbApplyArgs);
    (() => {
        const __forInstance52 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return l1 !== null ? 1 : 0;
                },
                update: () => {
                },
                body: () => {
                    {
                        var tmp = l1;
                        (() => {
                            var i = 0;
                            const __forInstance24 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return i < nbApplyArgs ? 1 : 0;
                                    },
                                    update: () => {
                                        i++;
                                    },
                                    body: () => {
                                        {
                                            applyArgs[i] = arguments[i + 1].car;
                                            arguments[i + 1] = arguments[i + 1].cdr;
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance24.exports;
                            return __exports.data();
                        })();
                        tmp.car = proc.apply(null, applyArgs);
                    }
                }
            }
        });
        const __exports = __forInstance52.exports;
        return __exports.data();
    })();
    return l1_orig;
}
function sc_forEach(proc, l1) {
    if (l1 === undefined)
        return undefined;
    var nbApplyArgs = arguments.length - 1;
    var applyArgs = new Array(nbApplyArgs);
    (() => {
        const __forInstance53 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return l1 !== null ? 1 : 0;
                },
                update: () => {
                },
                body: () => {
                    {
                        (() => {
                            var i = 0;
                            const __forInstance25 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return i < nbApplyArgs ? 1 : 0;
                                    },
                                    update: () => {
                                        i++;
                                    },
                                    body: () => {
                                        {
                                            applyArgs[i] = arguments[i + 1].car;
                                            arguments[i + 1] = arguments[i + 1].cdr;
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance25.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance65 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        proc.apply(null, applyArgs);
                                    }
                                }
                            });
                            const __exports = __callInstance65.exports;
                            return __exports.data();
                        })();
                    }
                }
            }
        });
        const __exports = __forInstance53.exports;
        return __exports.data();
    })();
    return undefined;
}
function sc_filter(proc, l1) {
    var dummy = { cdr: null };
    var tail = dummy;
    (() => {
        const __forInstance54 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return l1 !== null ? 1 : 0;
                },
                update: () => {
                },
                body: () => {
                    {
                        (() => {
                            const __ifInstance20 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            tail.cdr = sc_cons(l1.car, null);
                                            tail = tail.cdr;
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance20.exports;
                            return __exports.data(proc(l1.car) !== false ? 1 : 0);
                        })();
                        l1 = l1.cdr;
                    }
                }
            }
        });
        const __exports = __forInstance54.exports;
        return __exports.data();
    })();
    return dummy.cdr;
}
function sc_filterBang(proc, l1) {
    var head = sc_cons(lS(0, 38), l1);
    var it = head;
    var next = l1;
    (() => {
        const __forInstance55 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return next !== null ? 1 : 0;
                },
                update: () => {
                },
                body: () => {
                    {
                        (() => {
                            const __ifInstance21 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            it.cdr = next;
                                            it = next;
                                        }
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance21.exports;
                            return __exports.data(proc(next.car) !== false ? 1 : 0);
                        })();
                        next = next.cdr;
                    }
                }
            }
        });
        const __exports = __forInstance55.exports;
        return __exports.data();
    })();
    it.cdr = null;
    return head.cdr;
}
function sc_filterMap1(proc, l1) {
    var revres = null;
    (() => {
        const __forInstance56 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return l1 !== null ? 1 : 0;
                },
                update: () => {
                },
                body: () => {
                    {
                        var tmp = proc(l1.car);
                        (() => {
                            const __ifInstance22 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        revres = sc_cons(tmp, revres);
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance22.exports;
                            return __exports.data(tmp !== false ? 1 : 0);
                        })();
                        l1 = l1.cdr;
                    }
                }
            }
        });
        const __exports = __forInstance56.exports;
        return __exports.data();
    })();
    return sc_reverseAppendBang(revres, null);
}
function sc_filterMap2(proc, l1, l2) {
    var revres = null;
    (() => {
        const __forInstance57 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return l1 !== null ? 1 : 0;
                },
                update: () => {
                },
                body: () => {
                    {
                        var tmp = proc(l1.car, l2.car);
                        (() => {
                            const __ifInstance23 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        revres = sc_cons(tmp, revres);
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance23.exports;
                            return __exports.data(tmp !== false ? 1 : 0);
                        })();
                        l1 = l1.cdr;
                        l2 = l2.cdr;
                    }
                }
            }
        });
        const __exports = __forInstance57.exports;
        return __exports.data();
    })();
    return sc_reverseAppendBang(revres, null);
}
function sc_filterMap(proc, l1, l2, l3) {
    if (l2 === undefined)
        return sc_filterMap1(proc, l1);
    else if (l3 === undefined)
        return sc_filterMap2(proc, l1, l2);
    var nbApplyArgs = arguments.length - 1;
    var applyArgs = new Array(nbApplyArgs);
    var revres = null;
    (() => {
        const __forInstance58 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return l1 !== null ? 1 : 0;
                },
                update: () => {
                },
                body: () => {
                    {
                        (() => {
                            var i = 0;
                            const __forInstance26 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return i < nbApplyArgs ? 1 : 0;
                                    },
                                    update: () => {
                                        i++;
                                    },
                                    body: () => {
                                        {
                                            applyArgs[i] = arguments[i + 1].car;
                                            arguments[i + 1] = arguments[i + 1].cdr;
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance26.exports;
                            return __exports.data();
                        })();
                        var tmp = proc.apply(null, applyArgs);
                        (() => {
                            const __ifInstance24 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        revres = sc_cons(tmp, revres);
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance24.exports;
                            return __exports.data(tmp !== false ? 1 : 0);
                        })();
                    }
                }
            }
        });
        const __exports = __forInstance58.exports;
        return __exports.data();
    })();
    return sc_reverseAppendBang(revres, null);
}
function sc_any(proc, l) {
    var revres = null;
    while (l !== null) {
        var tmp = proc(l.car);
        if (tmp !== false)
            return tmp;
        l = l.cdr;
    }
    return false;
}
function sc_anyPred(proc, l) {
    return sc_any(proc, l) !== false;
}
function sc_every(proc, l) {
    var revres = null;
    var tmp = true;
    while (l !== null) {
        tmp = proc(l.car);
        if (tmp === false)
            return false;
        l = l.cdr;
    }
    return tmp;
}
function sc_everyPred(proc, l) {
    var tmp = sc_every(proc, l);
    if (tmp !== false)
        return true;
    return false;
}
function sc_force(o) {
    return o();
}
function sc_makePromise(proc) {
    var isResultReady = false;
    var result = undefined;
    return function () {
        (() => {
            const __ifInstance25 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            var tmp = proc();
                            (() => {
                                const __ifInstance26 = new WebAssembly.Instance(__ifWasmModule, {
                                    env: {
                                        impFunc1: () => {
                                            {
                                                isResultReady = true;
                                                result = tmp;
                                            }
                                        },
                                        impFunc2: () => {
                                        }
                                    }
                                });
                                const __exports = __ifInstance26.exports;
                                return __exports.data(!isResultReady ? 1 : 0);
                            })();
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance25.exports;
            return __exports.data(!isResultReady ? 1 : 0);
        })();
        return result;
    };
}
function sc_Values(values) {
    this.values = values;
}
function sc_values() {
    if (arguments.length === 1)
        return arguments[0];
    else
        return new sc_Values(arguments);
}
function sc_callWithValues(producer, consumer) {
    var produced = producer();
    if (produced instanceof sc_Values)
        return consumer.apply(null, produced.values);
    else
        return consumer(produced);
}
function sc_dynamicWind(before, thunk, after) {
    (() => {
        const __callInstance64 = new WebAssembly.Instance(__callWasmModule, {
            env: {
                impFunc: () => {
                    before();
                }
            }
        });
        const __exports = __callInstance64.exports;
        return __exports.data();
    })();
    try {
        var res = thunk();
        return res;
    } finally {
        (() => {
            const __callInstance63 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        after();
                    }
                }
            });
            const __exports = __callInstance63.exports;
            return __exports.data();
        })();
    }
}
function sc_Struct(name) {
    this.name = name;
}
sc_Struct.prototype.sc_toDisplayString = function () {
    return lS(0, 39) + sc_hash(this) + lS(0, 40);
};
sc_Struct.prototype.sc_toWriteString = sc_Struct.prototype.sc_toDisplayString;
function sc_makeStruct(name) {
    return new sc_Struct(name);
}
function sc_isStruct(o) {
    return o instanceof sc_Struct;
}
function sc_isStructNamed(name, s) {
    return s instanceof sc_Struct && s.name === name;
}
function sc_getStructField(s, name, field) {
    return s[field];
}
function sc_setStructFieldBang(s, name, field, val) {
    s[field] = val;
}
function sc_bitNot(x) {
    return ~x;
}
function sc_bitAnd(x, y) {
    return x & y;
}
function sc_bitOr(x, y) {
    return x | y;
}
function sc_bitXor(x, y) {
    return x ^ y;
}
function sc_bitLsh(x, y) {
    return x << y;
}
function sc_bitRsh(x, y) {
    return x >> y;
}
function sc_bitUrsh(x, y) {
    return x >>> y;
}
function sc_jsField(o, field) {
    return o[field];
}
function sc_setJsFieldBang(o, field, val) {
    return o[field] = val;
}
function sc_deleteJsFieldBang(o, field) {
    delete o[field];
}
function sc_jsCall(o, fun) {
    var args = new Array();
    (() => {
        var i = 2;
        const __forInstance27 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i < arguments.length ? 1 : 0;
                },
                update: () => {
                    i++;
                },
                body: () => {
                    args[i - 2] = arguments[i];
                }
            }
        });
        const __exports = __forInstance27.exports;
        return __exports.data();
    })();
    return fun.apply(o, args);
}
function sc_jsMethodCall(o, field) {
    var args = new Array();
    (() => {
        var i = 2;
        const __forInstance28 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i < arguments.length ? 1 : 0;
                },
                update: () => {
                    i++;
                },
                body: () => {
                    args[i - 2] = arguments[i];
                }
            }
        });
        const __exports = __forInstance28.exports;
        return __exports.data();
    })();
    return o[field].apply(o, args);
}
function sc_jsNew(c) {
    var evalStr = lS(0, 41);
    evalStr += arguments.length > 1 ? lS(0, 42) : lS(0, 43);
    (() => {
        var i = 2;
        const __forInstance29 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i < arguments.length ? 1 : 0;
                },
                update: () => {
                    i++;
                },
                body: () => {
                    evalStr += lS(0, 44) + i + lS(0, 45);
                }
            }
        });
        const __exports = __forInstance29.exports;
        return __exports.data();
    })();
    evalStr += lS(0, 46);
    return window[lS(4, 134, true)](evalStr);
}
function sc_pregexp(re) {
    return new RegExp(sc_string2jsstring(re));
}
function sc_pregexpMatch(re, s) {
    var reg = re instanceof RegExp ? re : sc_pregexp(re);
    var tmp = reg.exec(sc_string2jsstring(s));
    if (tmp == null)
        return false;
    var res = null;
    (() => {
        var i = tmp.length - 1;
        const __forInstance30 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i >= 0 ? 1 : 0;
                },
                update: () => {
                    i--;
                },
                body: () => {
                    {
                        (() => {
                            const __ifInstance27 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        {
                                            res = sc_cons(sc_jsstring2string(tmp[i]), res);
                                        }
                                    },
                                    impFunc2: () => {
                                        {
                                            res = sc_cons(false, res);
                                        }
                                    }
                                }
                            });
                            const __exports = __ifInstance27.exports;
                            return __exports.data(tmp[i] !== null ? 1 : 0);
                        })();
                    }
                }
            }
        });
        const __exports = __forInstance30.exports;
        return __exports.data();
    })();
    return res;
}
function sc_pregexpReplace(re, s1, s2) {
    var reg;
    var jss1 = sc_string2jsstring(s1);
    var jss2 = sc_string2jsstring(s2);
    (() => {
        const __ifInstance28 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    {
                        (() => {
                            const __ifInstance29 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        reg = re;
                                    },
                                    impFunc2: () => {
                                        reg = new RegExp(re.source);
                                    }
                                }
                            });
                            const __exports = __ifInstance29.exports;
                            return __exports.data(re.global ? 1 : 0);
                        })();
                    }
                },
                impFunc2: () => {
                    {
                        reg = new RegExp(sc_string2jsstring(re));
                    }
                }
            }
        });
        const __exports = __ifInstance28.exports;
        return __exports.data(re instanceof RegExp ? 1 : 0);
    })();
    return jss1.replace(reg, jss2);
}
function sc_pregexpReplaceAll(re, s1, s2) {
    var reg;
    var jss1 = sc_string2jsstring(s1);
    var jss2 = sc_string2jsstring(s2);
    (() => {
        const __ifInstance30 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    {
                        (() => {
                            const __ifInstance31 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        reg = re;
                                    },
                                    impFunc2: () => {
                                        reg = new RegExp(re.source, lS(0, 47));
                                    }
                                }
                            });
                            const __exports = __ifInstance31.exports;
                            return __exports.data(re.global ? 1 : 0);
                        })();
                    }
                },
                impFunc2: () => {
                    {
                        reg = new RegExp(sc_string2jsstring(re), lS(0, 48));
                    }
                }
            }
        });
        const __exports = __ifInstance30.exports;
        return __exports.data(re instanceof RegExp ? 1 : 0);
    })();
    return jss1.replace(reg, jss2);
}
function sc_pregexpSplit(re, s) {
    var reg = re instanceof RegExp ? re : new RegExp(sc_string2jsstring(re));
    var jss = sc_string2jsstring(s);
    var tmp = jss.split(reg);
    if (tmp == null)
        return false;
    return sc_vector2list(tmp);
}
function sc_random(n) {
    return Math.floor(Math.random() * n);
}
function sc_currentDate() {
    return new Date();
}
function sc_Hashtable() {
}
sc_Hashtable.prototype.toString = function () {
    return lS(0, 49);
};
function sc_HashtableElement(key, val) {
    this.key = key;
    this.val = val;
}
function sc_makeHashtable() {
    return new sc_Hashtable();
}
function sc_hashtablePutBang(ht, key, val) {
    var hash = sc_hash(key);
    ht[hash] = new sc_HashtableElement(key, val);
}
function sc_hashtableGet(ht, key) {
    var hash = sc_hash(key);
    if (hash in ht)
        return ht[hash].val;
    else
        return false;
}
function sc_hashtableForEach(ht, f) {
    for (var v in ht) {
        (() => {
            const __ifInstance32 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        (() => {
                            const __callInstance62 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        f(ht[v].key, ht[v].val);
                                    }
                                }
                            });
                            const __exports = __callInstance62.exports;
                            return __exports.data();
                        })();
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance32.exports;
            return __exports.data(ht[v] instanceof sc_HashtableElement ? 1 : 0);
        })();
    }
}
function sc_hashtableContains(ht, key) {
    var hash = sc_hash(key);
    if (hash in ht)
        return true;
    else
        return false;
}
var SC_HASH_COUNTER = 0;
function sc_hash(o) {
    if (o === null)
        return lS(0, 50);
    else if (o === undefined)
        return lS(0, 51);
    else if (o === true)
        return lS(0, 52);
    else if (o === false)
        return lS(0, 53);
    else if (typeof o === lS(0, 54))
        return lS(0, 55) + o;
    else if (typeof o === lS(0, 56))
        return lS(0, 57) + o;
    else if (o.sc_getHash)
        return o.sc_getHash();
    else
        return sc_counterHash.call(o);
}
function sc_counterHash() {
    (() => {
        const __ifInstance33 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    {
                        this.sc_hash = lS(0, 58) + SC_HASH_COUNTER;
                        SC_HASH_COUNTER++;
                    }
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance33.exports;
        return __exports.data(!this.sc_hash ? 1 : 0);
    })();
    return this.sc_hash;
}
function sc_Trampoline(args, maxTailCalls) {
    this[lS(0, 59)] = true;
    this.args = args;
    this.MAX_TAIL_CALLs = maxTailCalls;
}
sc_Trampoline.prototype.restart = function () {
    var o = this;
    while (true) {
        SC_TAIL_OBJECT.calls = o.MAX_TAIL_CALLs - 1;
        var fun = o.args.callee;
        var res = fun.apply(SC_TAIL_OBJECT, o.args);
        if (res instanceof sc_Trampoline)
            o = res;
        else
            return res;
    }
};
function sc_bindExitLambda(proc) {
    var escape_obj = new sc_BindExitException();
    var escape = function (res) {
        escape_obj.res = res;
        throw escape_obj;
    };
    try {
        return proc(escape);
    } catch (e) {
        if (e === escape_obj) {
            return e.res;
        }
        throw e;
    }
}
function sc_BindExitException() {
    this._internalException = true;
}
var SC_SCM2JS_GLOBALS = new Object();
var SC_TAIL_OBJECT = new Object();
SC_SCM2JS_GLOBALS.TAIL_OBJECT = SC_TAIL_OBJECT;
function sc_EOF() {
}
var SC_EOF_OBJECT = new sc_EOF();
function sc_Port() {
}
function sc_InputPort() {
}
sc_InputPort.prototype = new sc_Port();
sc_InputPort.prototype.peekChar = function () {
    (() => {
        const __ifInstance34 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    this.peeked = this.getNextChar();
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance34.exports;
        return __exports.data(!(lS(0, 60) in this) ? 1 : 0);
    })();
    return this.peeked;
};
sc_InputPort.prototype.readChar = function () {
    var tmp = this.peekChar();
    delete this.peeked;
    return tmp;
};
sc_InputPort.prototype.isCharReady = function () {
    return true;
};
sc_InputPort.prototype.close = function () {
};
function sc_ErrorInputPort() {
}
;
sc_ErrorInputPort.prototype = new sc_InputPort();
sc_ErrorInputPort.prototype.getNextChar = function () {
    throw lS(0, 61);
};
sc_ErrorInputPort.prototype.isCharReady = function () {
    return false;
};
function sc_StringInputPort(jsStr) {
    this.str = new String(jsStr);
    this.pos = 0;
}
sc_StringInputPort.prototype = new sc_InputPort();
sc_StringInputPort.prototype.getNextChar = function () {
    if (this.pos >= this.str.length)
        return SC_EOF_OBJECT;
    return this.str.charAt(this.pos++);
};
function sc_Token(type, val, pos) {
    this.type = type;
    this.val = val;
    this.pos = pos;
}
sc_Token.EOF = 0;
sc_Token.OPEN_PAR = 1;
sc_Token.CLOSE_PAR = 2;
sc_Token.OPEN_BRACE = 3;
sc_Token.CLOSE_BRACE = 4;
sc_Token.OPEN_BRACKET = 5;
sc_Token.CLOSE_BRACKET = 6;
sc_Token.WHITESPACE = 7;
sc_Token.QUOTE = 8;
sc_Token.ID = 9;
sc_Token.DOT = 10;
sc_Token.STRING = 11;
sc_Token.NUMBER = 12;
sc_Token.ERROR = 13;
sc_Token.VECTOR_BEGIN = 14;
sc_Token.TRUE = 15;
sc_Token.FALSE = 16;
sc_Token.UNSPECIFIED = 17;
sc_Token.REFERENCE = 18;
sc_Token.STORE = 19;
sc_Token.CHAR = 20;
var SC_ID_CLASS = SC_LOWER_CLASS + SC_UPPER_CLASS + lS(0, 62);
function sc_Tokenizer(port) {
    this.port = port;
}
sc_Tokenizer.prototype.peekToken = function () {
    if (this.peeked)
        return this.peeked;
    var newToken = this.nextToken();
    this.peeked = newToken;
    return newToken;
};
sc_Tokenizer.prototype.readToken = function () {
    var tmp = this.peekToken();
    delete this.peeked;
    return tmp;
};
sc_Tokenizer.prototype.nextToken = function () {
    var port = this.port;
    function isNumberChar(c) {
        return c >= lS(0, 63) && c <= lS(0, 64);
    }
    ;
    function isIdOrNumberChar(c) {
        return SC_ID_CLASS.indexOf(c) != -1 || c >= lS(0, 65) && c <= lS(0, 66);
    }
    function isWhitespace(c) {
        return c === lS(0, 67) || c === lS(0, 68) || c === lS(0, 69) || c === lS(0, 70) || c === lS(0, 71);
    }
    ;
    function isWhitespaceOrEOF(c) {
        return isWhitespace(c) || c === SC_EOF_OBJECT;
    }
    ;
    function readString() {
        res = lS(0, 72);
        while (true) {
            var c = port.readChar();
            switch (c) {
            case lS(0, 73):
                return new sc_Token(11, res);
            case lS(0, 74):
                var tmp = port.readChar();
                switch (tmp) {
                case lS(0, 75):
                    res += lS(0, 76);
                    break;
                case lS(0, 77):
                    res += lS(0, 78);
                    break;
                case lS(0, 79):
                    res += lS(0, 80);
                    break;
                case lS(0, 81):
                    res += lS(0, 82);
                    break;
                case lS(0, 83):
                    res += lS(0, 84);
                    break;
                case lS(0, 85):
                    res += lS(0, 86);
                    break;
                case lS(0, 87):
                    res += lS(0, 88);
                    break;
                case lS(0, 89):
                    res += lS(0, 90);
                    break;
                case lS(0, 91):
                    res += lS(0, 92);
                    break;
                case lS(0, 93):
                    res += lS(0, 94);
                    break;
                case lS(0, 95):
                    var nb = 0;
                    while (true) {
                        var hexC = port.peekChar();
                        if (hexC >= lS(0, 96) && hexC <= lS(0, 97)) {
                            (() => {
                                const __callInstance61 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            port.readChar();
                                        }
                                    }
                                });
                                const __exports = __callInstance61.exports;
                                return __exports.data();
                            })();
                            nb = nb * 16 + hexC.charCodeAt(0) - lS(0, 98).charCodeAt(0);
                        } else if (hexC >= lS(0, 99) && hexC <= lS(0, 100)) {
                            (() => {
                                const __callInstance60 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            port.readChar();
                                        }
                                    }
                                });
                                const __exports = __callInstance60.exports;
                                return __exports.data();
                            })();
                            nb = nb * 16 + hexC.charCodeAt(0) - lS(0, 101).charCodeAt(0);
                        } else if (hexC >= lS(0, 102) && hexC <= lS(0, 103)) {
                            (() => {
                                const __callInstance59 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            port.readChar();
                                        }
                                    }
                                });
                                const __exports = __callInstance59.exports;
                                return __exports.data();
                            })();
                            nb = nb * 16 + hexC.charCodeAt(0) - lS(0, 104).charCodeAt(0);
                        } else {
                            res += String.fromCharCode(nb);
                            break;
                        }
                    }
                    break;
                default:
                    if (tmp === SC_EOF_OBJECT) {
                        return new sc_Token(13, lS(0, 105) + res);
                    }
                    res += tmp;
                }
                break;
            default:
                if (c === SC_EOF_OBJECT) {
                    return new sc_Token(13, lS(0, 106) + res);
                }
                res += c;
            }
        }
    }
    ;
    function readIdOrNumber(firstChar) {
        var res = firstChar;
        (() => {
            const __forInstance59 = new WebAssembly.Instance(__forWasmModule, {
                env: {
                    test: () => {
                        return isIdOrNumberChar(port.peekChar()) ? 1 : 0;
                    },
                    update: () => {
                    },
                    body: () => {
                        res += port.readChar();
                    }
                }
            });
            const __exports = __forInstance59.exports;
            return __exports.data();
        })();
        if (isNaN(res))
            return new sc_Token(9, res);
        else
            return new sc_Token(12, res - 0);
    }
    ;
    function skipWhitespaceAndComments() {
        var done = false;
        while (!done) {
            done = true;
            (() => {
                const __forInstance60 = new WebAssembly.Instance(__forWasmModule, {
                    env: {
                        test: () => {
                            return isWhitespace(port.peekChar()) ? 1 : 0;
                        },
                        update: () => {
                        },
                        body: () => {
                            (() => {
                                const __callInstance58 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            port.readChar();
                                        }
                                    }
                                });
                                const __exports = __callInstance58.exports;
                                return __exports.data();
                            })();
                        }
                    }
                });
                const __exports = __forInstance60.exports;
                return __exports.data();
            })();
            if (port.peekChar() === lS(0, 107)) {
                (() => {
                    const __callInstance57 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                port.readChar();
                            }
                        }
                    });
                    const __exports = __callInstance57.exports;
                    return __exports.data();
                })();
                done = false;
                while (true) {
                    curChar = port.readChar();
                    if (curChar === SC_EOF_OBJECT || curChar === lS(0, 108))
                        break;
                }
            }
        }
    }
    ;
    function readDot() {
        if (isWhitespace(port.peekChar()))
            return new sc_Token(10);
        else
            return readIdOrNumber(lS(0, 109));
    }
    ;
    function readSharp() {
        var c = port.readChar();
        if (isWhitespace(c))
            return new sc_Token(13, lS(0, 110));
        if (isNumberChar(c)) {
            var nb = c - 0;
            (() => {
                const __forInstance61 = new WebAssembly.Instance(__forWasmModule, {
                    env: {
                        test: () => {
                            return isNumberChar(port.peekChar()) ? 1 : 0;
                        },
                        update: () => {
                        },
                        body: () => {
                            nb = nb * 10 + (port.readChar() - 0);
                        }
                    }
                });
                const __exports = __forInstance61.exports;
                return __exports.data();
            })();
            switch (port.readChar()) {
            case lS(0, 111):
                return new sc_Token(18, nb);
            case lS(0, 112):
                return new sc_Token(19, nb);
            default:
                return new sc_Token(13, lS(0, 113) + nb);
            }
        }
        if (c === lS(0, 114))
            return new sc_Token(14);
        if (c === lS(0, 115)) {
            var tmp = lS(0, 116);
            (() => {
                const __forInstance62 = new WebAssembly.Instance(__forWasmModule, {
                    env: {
                        test: () => {
                            return !isWhitespaceOrEOF(port.peekChar()) ? 1 : 0;
                        },
                        update: () => {
                        },
                        body: () => {
                            tmp += port.readChar();
                        }
                    }
                });
                const __exports = __forInstance62.exports;
                return __exports.data();
            })();
            switch (tmp.length) {
            case 0:
                if (sc_isEOFObject(port.peekChar))
                    return new sc_Token(13, lS(0, 117));
                else
                    return new sc_Token(20, port.readChar());
            case 1:
                return new sc_Token(20, tmp);
            default:
                var entry = sc_Char.readable2char[tmp.toLowerCase()];
                if (entry)
                    return new sc_Token(20, entry);
                else
                    return new sc_Token(13, lS(0, 118) + tmp);
            }
        }
        var res;
        var needing;
        switch (c) {
        case lS(0, 119):
            res = new sc_Token(15, true);
            needing = lS(0, 120);
            break;
        case lS(0, 121):
            res = new sc_Token(16, false);
            needing = lS(0, 122);
            break;
        case lS(0, 123):
            res = new sc_Token(17, undefined);
            needing = lS(0, 124);
            break;
        default:
            return new sc_Token(13, lS(0, 125) + c);
        }
        while (true) {
            c = port.peekChar();
            if ((isWhitespaceOrEOF(c) || c === lS(0, 126)) && needing == lS(0, 127))
                return res;
            else if (isWhitespace(c) || needing == lS(0, 128))
                return new sc_Token(13, lS(0, 129) + c + lS(0, 130) + needing);
            else if (needing.charAt(0) == c) {
                (() => {
                    const __callInstance56 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                port.readChar();
                            }
                        }
                    });
                    const __exports = __callInstance56.exports;
                    return __exports.data();
                })();
                needing = needing.slice(1);
            } else
                return new sc_Token(13, lS(0, 131));
        }
    }
    ;
    (() => {
        const __callInstance55 = new WebAssembly.Instance(__callWasmModule, {
            env: {
                impFunc: () => {
                    skipWhitespaceAndComments();
                }
            }
        });
        const __exports = __callInstance55.exports;
        return __exports.data();
    })();
    var curChar = port.readChar();
    if (curChar === SC_EOF_OBJECT)
        return new sc_Token(0, curChar);
    switch (curChar) {
    case lS(0, 132):
    case lS(0, 133):
    case lS(0, 134):
        return readWhitespace();
    case lS(0, 135):
        return new sc_Token(1);
    case lS(0, 136):
        return new sc_Token(2);
    case lS(0, 137):
        return new sc_Token(3);
    case lS(0, 138):
        return new sc_Token(4);
    case lS(0, 139):
        return new sc_Token(5);
    case lS(0, 140):
        return new sc_Token(6);
    case lS(0, 141):
        return new sc_Token(8);
    case lS(0, 142):
        return readSharp();
    case lS(0, 143):
        return readDot();
    case lS(0, 144):
        return readString();
    default:
        if (isIdOrNumberChar(curChar))
            return readIdOrNumber(curChar);
        throw lS(0, 145) + curChar;
    }
};
function sc_Reader(tokenizer) {
    this.tokenizer = tokenizer;
    this.backref = new Array();
}
sc_Reader.prototype.read = function () {
    function readList(listBeginType) {
        function matchesPeer(open, close) {
            return open === 1 && close === 2 || open === 3 && close === 4 || open === 5 && close === 6;
        }
        ;
        var res = null;
        while (true) {
            var token = tokenizer.peekToken();
            switch (token.type) {
            case 2:
            case 4:
            case 6:
                if (matchesPeer(listBeginType, token.type)) {
                    (() => {
                        const __callInstance54 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    tokenizer.readToken();
                                }
                            }
                        });
                        const __exports = __callInstance54.exports;
                        return __exports.data();
                    })();
                    return sc_reverseBang(res);
                } else
                    throw lS(0, 146) + listBeginType + lS(0, 147) + listEndType;
            case 0:
                throw lS(0, 148);
            case 10:
                (() => {
                    const __callInstance53 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                tokenizer.readToken();
                            }
                        }
                    });
                    const __exports = __callInstance53.exports;
                    return __exports.data();
                })();
                var cdr = this.read();
                var par = tokenizer.readToken();
                if (!matchesPeer(listBeginType, par.type))
                    throw lS(0, 149) + listBeginType + lS(0, 150) + par.type;
                else
                    return sc_reverseAppendBang(res, cdr);
            default:
                res = sc_cons(this.read(), res);
            }
        }
    }
    ;
    function readQuote() {
        return sc_cons(lS(0, 151), sc_cons(this.read(), null));
    }
    ;
    function readVector() {
        var a = new Array();
        while (true) {
            var token = tokenizer.peekToken();
            switch (token.type) {
            case 2:
                (() => {
                    const __callInstance52 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                tokenizer.readToken();
                            }
                        }
                    });
                    const __exports = __callInstance52.exports;
                    return __exports.data();
                })();
                return a;
            default:
                (() => {
                    const __callInstance51 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                a.push(this.read());
                            }
                        }
                    });
                    const __exports = __callInstance51.exports;
                    return __exports.data();
                })();
            }
        }
    }
    ;
    function storeRefence(nb) {
        var tmp = this.read();
        this.backref[nb] = tmp;
        return tmp;
    }
    ;
    function readReference(nb) {
        if (nb in this.backref)
            return this.backref[nb];
        else
            throw lS(0, 152) + nb;
    }
    ;
    var tokenizer = this.tokenizer;
    var token = tokenizer.readToken();
    if (token.type === 13)
        throw token.val;
    switch (token.type) {
    case 1:
    case 3:
    case 5:
        return readList.call(this, token.type);
    case 8:
        return readQuote.call(this);
    case 11:
        return sc_jsstring2string(token.val);
    case 20:
        return new sc_Char(token.val);
    case 14:
        return readVector.call(this);
    case 18:
        return readReference.call(this, token.val);
    case 19:
        return storeRefence.call(this, token.val);
    case 9:
        return sc_jsstring2symbol(token.val);
    case 0:
    case 12:
    case 15:
    case 16:
    case 17:
        return token.val;
    default:
        throw lS(0, 153) + token.type + lS(0, 154) + token.val;
    }
};
function sc_read(port) {
    (() => {
        const __ifInstance35 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    port = SC_DEFAULT_IN;
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance35.exports;
        return __exports.data(port === undefined ? 1 : 0);
    })();
    var reader = new sc_Reader(new sc_Tokenizer(port));
    return reader.read();
}
function sc_readChar(port) {
    (() => {
        const __ifInstance36 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    port = SC_DEFAULT_IN;
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance36.exports;
        return __exports.data(port === undefined ? 1 : 0);
    })();
    var t = port.readChar();
    return t === SC_EOF_OBJECT ? t : new sc_Char(t);
}
function sc_peekChar(port) {
    (() => {
        const __ifInstance37 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    port = SC_DEFAULT_IN;
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance37.exports;
        return __exports.data(port === undefined ? 1 : 0);
    })();
    var t = port.peekChar();
    return t === SC_EOF_OBJECT ? t : new sc_Char(t);
}
function sc_isCharReady(port) {
    (() => {
        const __ifInstance38 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    port = SC_DEFAULT_IN;
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance38.exports;
        return __exports.data(port === undefined ? 1 : 0);
    })();
    return port.isCharReady();
}
function sc_closeInputPort(p) {
    return p.close();
}
function sc_isInputPort(o) {
    return o instanceof sc_InputPort;
}
function sc_isEOFObject(o) {
    return o === SC_EOF_OBJECT;
}
function sc_currentInputPort() {
    return SC_DEFAULT_IN;
}
function sc_callWithInputFile(s, proc) {
    throw lS(0, 155) + s;
}
function sc_callWithOutputFile(s, proc) {
    throw lS(0, 156) + s;
}
function sc_withInputFromFile(s, thunk) {
    throw lS(0, 157) + s;
}
function sc_withOutputToFile(s, thunk) {
    throw lS(0, 158) + s;
}
function sc_openInputFile(s) {
    throw lS(0, 159) + s;
}
function sc_openOutputFile(s) {
    throw lS(0, 160) + s;
}
function sc_basename(p) {
    var i = p.lastIndexOf(lS(0, 161));
    if (i >= 0)
        return p.substring(i + 1, p.length);
    else
        return lS(0, 162);
}
function sc_dirname(p) {
    var i = p.lastIndexOf(lS(0, 163));
    if (i >= 0)
        return p.substring(0, i);
    else
        return lS(0, 164);
}
function sc_withInputFromPort(p, thunk) {
    try {
        var tmp = SC_DEFAULT_IN;
        SC_DEFAULT_IN = p;
        return thunk();
    } finally {
        SC_DEFAULT_IN = tmp;
    }
}
function sc_withInputFromString(s, thunk) {
    return sc_withInputFromPort(new sc_StringInputPort(sc_string2jsstring(s)), thunk);
}
function sc_withOutputToPort(p, thunk) {
    try {
        var tmp = SC_DEFAULT_OUT;
        SC_DEFAULT_OUT = p;
        return thunk();
    } finally {
        SC_DEFAULT_OUT = tmp;
    }
}
function sc_withOutputToString(thunk) {
    var p = new sc_StringOutputPort();
    (() => {
        const __callInstance50 = new WebAssembly.Instance(__callWasmModule, {
            env: {
                impFunc: () => {
                    sc_withOutputToPort(p, thunk);
                }
            }
        });
        const __exports = __callInstance50.exports;
        return __exports.data();
    })();
    return p.close();
}
function sc_withOutputToProcedure(proc, thunk) {
    var t = function (s) {
        (() => {
            const __callInstance49 = new WebAssembly.Instance(__callWasmModule, {
                env: {
                    impFunc: () => {
                        proc(sc_jsstring2string(s));
                    }
                }
            });
            const __exports = __callInstance49.exports;
            return __exports.data();
        })();
    };
    return sc_withOutputToPort(new sc_GenericOutputPort(t), thunk);
}
function sc_openOutputString() {
    return new sc_StringOutputPort();
}
function sc_openInputString(str) {
    return new sc_StringInputPort(sc_string2jsstring(str));
}
function sc_OutputPort() {
}
sc_OutputPort.prototype = new sc_Port();
sc_OutputPort.prototype.appendJSString = function (obj) {
};
sc_OutputPort.prototype.close = function () {
};
function sc_StringOutputPort() {
    this.res = lS(0, 165);
}
sc_StringOutputPort.prototype = new sc_OutputPort();
sc_StringOutputPort.prototype.appendJSString = function (s) {
    this.res += s;
};
sc_StringOutputPort.prototype.close = function () {
    return sc_jsstring2string(this.res);
};
function sc_getOutputString(sp) {
    return sc_jsstring2string(sp.res);
}
function sc_ErrorOutputPort() {
}
sc_ErrorOutputPort.prototype = new sc_OutputPort();
sc_ErrorOutputPort.prototype.appendJSString = function (s) {
    throw lS(0, 166);
};
sc_ErrorOutputPort.prototype.close = function () {
};
function sc_GenericOutputPort(appendJSString, close) {
    this.appendJSString = appendJSString;
    (() => {
        const __ifInstance39 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    this.close = close;
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance39.exports;
        return __exports.data(close ? 1 : 0);
    })();
}
sc_GenericOutputPort.prototype = new sc_OutputPort();
function sc_isOutputPort(o) {
    return o instanceof sc_OutputPort;
}
function sc_closeOutputPort(p) {
    return p.close();
}
function sc_write(o, p) {
    (() => {
        const __ifInstance40 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    p = SC_DEFAULT_OUT;
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance40.exports;
        return __exports.data(p === undefined ? 1 : 0);
    })();
    (() => {
        const __callInstance48 = new WebAssembly.Instance(__callWasmModule, {
            env: {
                impFunc: () => {
                    p.appendJSString(sc_toWriteString(o));
                }
            }
        });
        const __exports = __callInstance48.exports;
        return __exports.data();
    })();
}
function sc_toWriteString(o) {
    if (o === null)
        return lS(0, 167);
    else if (o === true)
        return lS(0, 168);
    else if (o === false)
        return lS(0, 169);
    else if (o === undefined)
        return lS(0, 170);
    else if (typeof o === lS(0, 171))
        return lS(0, 172) + sc_hash(o) + lS(0, 173);
    else if (o.sc_toWriteString)
        return o.sc_toWriteString();
    else
        return o.toString();
}
function sc_escapeWriteString(s) {
    var res = lS(0, 174);
    var j = 0;
    for (i = 0; i < s.length; i++) {
        switch (s.charAt(i)) {
        case lS(0, 175):
            res += s.substring(j, i) + lS(0, 176);
            j = i + 1;
            break;
        case lS(0, 177):
            res += s.substring(j, i) + lS(0, 178);
            j = i + 1;
            break;
        case lS(0, 179):
            res += s.substring(j, i) + lS(0, 180);
            j = i + 1;
            break;
        case lS(0, 181):
            res += s.substring(j, i) + lS(0, 182);
            j = i + 1;
            break;
        case lS(0, 183):
            res += s.substring(j, i) + lS(0, 184);
            j = i + 1;
            break;
        case lS(0, 185):
            res += s.substring(j, i) + lS(0, 186);
            j = i + 1;
            break;
        case lS(0, 187):
            res += s.substring(j, i) + lS(0, 188);
            j = i + 1;
            break;
        case lS(0, 189):
            res += s.substring(j, i) + lS(0, 190);
            j = i + 1;
            break;
        case lS(0, 191):
            res += s.substring(j, i) + lS(0, 192);
            j = i + 1;
            break;
        default:
            var c = s.charAt(i);
            if (lS(0, 193) !== lS(0, 194) && c == lS(0, 195)) {
                res += s.substring(j, i) + lS(0, 196);
                j = i + 1;
                continue;
            }
            if (lS(0, 197) !== lS(0, 198) && c == lS(0, 199)) {
                res += s.substring(j, i) + lS(0, 200);
                j = i + 1;
                continue;
            }
            (() => {
                const __ifInstance41 = new WebAssembly.Instance(__ifWasmModule, {
                    env: {
                        impFunc1: () => {
                            {
                                res += s.substring(j, i) + lS(0, 202) + s.charCodeAt(i).toString(16);
                                j = i + 1;
                            }
                        },
                        impFunc2: () => {
                        }
                    }
                });
                const __exports = __ifInstance41.exports;
                return __exports.data(s.charAt(i) < lS(0, 201) ? 1 : 0);
            })();
        }
    }
    res += s.substring(j, i);
    return res;
}
function sc_display(o, p) {
    (() => {
        const __ifInstance42 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    p = SC_DEFAULT_OUT;
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance42.exports;
        return __exports.data(p === undefined ? 1 : 0);
    })();
    (() => {
        const __callInstance47 = new WebAssembly.Instance(__callWasmModule, {
            env: {
                impFunc: () => {
                    p.appendJSString(sc_toDisplayString(o));
                }
            }
        });
        const __exports = __callInstance47.exports;
        return __exports.data();
    })();
}
function sc_toDisplayString(o) {
    if (o === null)
        return lS(0, 203);
    else if (o === true)
        return lS(0, 204);
    else if (o === false)
        return lS(0, 205);
    else if (o === undefined)
        return lS(0, 206);
    else if (typeof o === lS(0, 207))
        return lS(0, 208) + sc_hash(o) + lS(0, 209);
    else if (o.sc_toDisplayString)
        return o.sc_toDisplayString();
    else
        return o.toString();
}
function sc_newline(p) {
    (() => {
        const __ifInstance43 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    p = SC_DEFAULT_OUT;
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance43.exports;
        return __exports.data(p === undefined ? 1 : 0);
    })();
    (() => {
        const __callInstance46 = new WebAssembly.Instance(__callWasmModule, {
            env: {
                impFunc: () => {
                    p.appendJSString(lS(0, 210));
                }
            }
        });
        const __exports = __callInstance46.exports;
        return __exports.data();
    })();
}
function sc_writeChar(c, p) {
    (() => {
        const __ifInstance44 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    p = SC_DEFAULT_OUT;
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance44.exports;
        return __exports.data(p === undefined ? 1 : 0);
    })();
    (() => {
        const __callInstance45 = new WebAssembly.Instance(__callWasmModule, {
            env: {
                impFunc: () => {
                    p.appendJSString(c.val);
                }
            }
        });
        const __exports = __callInstance45.exports;
        return __exports.data();
    })();
}
function sc_writeCircle(o, p) {
    (() => {
        const __ifInstance45 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    p = SC_DEFAULT_OUT;
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance45.exports;
        return __exports.data(p === undefined ? 1 : 0);
    })();
    (() => {
        const __callInstance44 = new WebAssembly.Instance(__callWasmModule, {
            env: {
                impFunc: () => {
                    p.appendJSString(sc_toWriteCircleString(o));
                }
            }
        });
        const __exports = __callInstance44.exports;
        return __exports.data();
    })();
}
function sc_toWriteCircleString(o) {
    var symb = sc_gensym(lS(0, 211));
    var nbPointer = new Object();
    nbPointer.nb = 0;
    (() => {
        const __callInstance43 = new WebAssembly.Instance(__callWasmModule, {
            env: {
                impFunc: () => {
                    sc_prepWriteCircle(o, symb, nbPointer);
                }
            }
        });
        const __exports = __callInstance43.exports;
        return __exports.data();
    })();
    return sc_genToWriteCircleString(o, symb);
}
function sc_prepWriteCircle(o, symb, nbPointer) {
    if (o instanceof sc_Pair || o instanceof sc_Vector) {
        if (o[symb] !== undefined) {
            o[symb]++;
            (() => {
                const __ifInstance46 = new WebAssembly.Instance(__ifWasmModule, {
                    env: {
                        impFunc1: () => {
                            o[symb + lS(0, 213)] = nbPointer.nb++;
                        },
                        impFunc2: () => {
                        }
                    }
                });
                const __exports = __ifInstance46.exports;
                return __exports.data(!o[symb + lS(0, 212)] ? 1 : 0);
            })();
            return;
        }
        o[symb] = 0;
        (() => {
            const __ifInstance47 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            (() => {
                                const __callInstance42 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            sc_prepWriteCircle(o.car, symb, nbPointer);
                                        }
                                    }
                                });
                                const __exports = __callInstance42.exports;
                                return __exports.data();
                            })();
                            (() => {
                                const __callInstance41 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            sc_prepWriteCircle(o.cdr, symb, nbPointer);
                                        }
                                    }
                                });
                                const __exports = __callInstance41.exports;
                                return __exports.data();
                            })();
                        }
                    },
                    impFunc2: () => {
                        {
                            (() => {
                                var i = 0;
                                const __forInstance31 = new WebAssembly.Instance(__forWasmModule, {
                                    env: {
                                        test: () => {
                                            return i < o.length ? 1 : 0;
                                        },
                                        update: () => {
                                            i++;
                                        },
                                        body: () => {
                                            (() => {
                                                const __callInstance40 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            sc_prepWriteCircle(o[i], symb, nbPointer);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance40.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    }
                                });
                                const __exports = __forInstance31.exports;
                                return __exports.data();
                            })();
                        }
                    }
                }
            });
            const __exports = __ifInstance47.exports;
            return __exports.data(o instanceof sc_Pair ? 1 : 0);
        })();
    }
}
function sc_genToWriteCircleString(o, symb) {
    if (!(o instanceof sc_Pair || o instanceof sc_Vector))
        return sc_toWriteString(o);
    return o.sc_toWriteCircleString(symb);
}
sc_Pair.prototype.sc_toWriteCircleString = function (symb, inList) {
    if (this[symb + lS(0, 214)]) {
        var nb = this[symb + lS(0, 215)];
        (() => {
            const __ifInstance48 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            delete this[symb];
                            delete this[symb + lS(0, 216)];
                            delete this[symb + lS(0, 217)];
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance48.exports;
            return __exports.data(this[symb]-- === 0 ? 1 : 0);
        })();
        if (inList)
            return lS(0, 218) + nb + lS(0, 219);
        else
            return lS(0, 220) + nb + lS(0, 221);
    }
    (() => {
        const __ifInstance49 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    {
                        delete this[symb];
                        delete this[symb + lS(0, 222)];
                        delete this[symb + lS(0, 223)];
                    }
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance49.exports;
        return __exports.data(this[symb]-- === 0 ? 1 : 0);
    })();
    var res = lS(0, 224);
    (() => {
        const __ifInstance50 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    {
                        this[symb + lS(0, 225)] = true;
                        (() => {
                            const __ifInstance51 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        res += lS(0, 226) + this[symb + lS(0, 227)] + lS(0, 228);
                                    },
                                    impFunc2: () => {
                                        res += lS(0, 229) + this[symb + lS(0, 230)] + lS(0, 231);
                                    }
                                }
                            });
                            const __exports = __ifInstance51.exports;
                            return __exports.data(inList ? 1 : 0);
                        })();
                        inList = false;
                    }
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance50.exports;
        return __exports.data(this[symb] !== undefined ? 1 : 0);
    })();
    (() => {
        const __ifInstance52 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    res += lS(0, 232);
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance52.exports;
        return __exports.data(!inList ? 1 : 0);
    })();
    res += sc_genToWriteCircleString(this.car, symb);
    (() => {
        const __ifInstance53 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    {
                        res += lS(0, 233) + this.cdr.sc_toWriteCircleString(symb, true);
                    }
                },
                impFunc2: () => {
                    (() => {
                        const __ifInstance54 = new WebAssembly.Instance(__ifWasmModule, {
                            env: {
                                impFunc1: () => {
                                    {
                                        res += lS(0, 234) + sc_genToWriteCircleString(this.cdr, symb);
                                    }
                                },
                                impFunc2: () => {
                                }
                            }
                        });
                        const __exports = __ifInstance54.exports;
                        return __exports.data(this.cdr !== null ? 1 : 0);
                    })();
                }
            }
        });
        const __exports = __ifInstance53.exports;
        return __exports.data(sc_isPair(this.cdr) ? 1 : 0);
    })();
    (() => {
        const __ifInstance55 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    res += lS(0, 235);
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance55.exports;
        return __exports.data(!inList ? 1 : 0);
    })();
    return res;
};
sc_Vector.prototype.sc_toWriteCircleString = function (symb) {
    if (this[symb + lS(0, 236)]) {
        var nb = this[symb + lS(0, 237)];
        (() => {
            const __ifInstance56 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        {
                            delete this[symb];
                            delete this[symb + lS(0, 238)];
                            delete this[symb + lS(0, 239)];
                        }
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance56.exports;
            return __exports.data(this[symb]-- === 0 ? 1 : 0);
        })();
        return lS(0, 240) + nb + lS(0, 241);
    }
    (() => {
        const __ifInstance57 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    {
                        delete this[symb];
                        delete this[symb + lS(0, 242)];
                        delete this[symb + lS(0, 243)];
                    }
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance57.exports;
        return __exports.data(this[symb]-- === 0 ? 1 : 0);
    })();
    var res = lS(0, 244);
    (() => {
        const __ifInstance58 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    {
                        this[symb + lS(0, 245)] = true;
                        res += lS(0, 246) + this[symb + lS(0, 247)] + lS(0, 248);
                    }
                },
                impFunc2: () => {
                }
            }
        });
        const __exports = __ifInstance58.exports;
        return __exports.data(this[symb] !== undefined ? 1 : 0);
    })();
    res += lS(0, 249);
    (() => {
        var i = 0;
        const __forInstance32 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i < this.length ? 1 : 0;
                },
                update: () => {
                    i++;
                },
                body: () => {
                    {
                        res += sc_genToWriteCircleString(this[i], symb);
                        (() => {
                            const __ifInstance59 = new WebAssembly.Instance(__ifWasmModule, {
                                env: {
                                    impFunc1: () => {
                                        res += lS(0, 250);
                                    },
                                    impFunc2: () => {
                                    }
                                }
                            });
                            const __exports = __ifInstance59.exports;
                            return __exports.data(i < this.length - 1 ? 1 : 0);
                        })();
                    }
                }
            }
        });
        const __exports = __forInstance32.exports;
        return __exports.data();
    })();
    res += lS(0, 251);
    return res;
};
function sc_print(s) {
    (() => {
        const __ifInstance60 = new WebAssembly.Instance(__ifWasmModule, {
            env: {
                impFunc1: () => {
                    {
                        (() => {
                            const __callInstance39 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        sc_display(s);
                                    }
                                }
                            });
                            const __exports = __callInstance39.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance38 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        sc_newline();
                                    }
                                }
                            });
                            const __exports = __callInstance38.exports;
                            return __exports.data();
                        })();
                    }
                },
                impFunc2: () => {
                    {
                        (() => {
                            var i = 0;
                            const __forInstance33 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return i < arguments.length ? 1 : 0;
                                    },
                                    update: () => {
                                        i++;
                                    },
                                    body: () => {
                                        (() => {
                                            const __callInstance37 = new WebAssembly.Instance(__callWasmModule, {
                                                env: {
                                                    impFunc: () => {
                                                        sc_display(arguments[i]);
                                                    }
                                                }
                                            });
                                            const __exports = __callInstance37.exports;
                                            return __exports.data();
                                        })();
                                    }
                                }
                            });
                            const __exports = __forInstance33.exports;
                            return __exports.data();
                        })();
                        (() => {
                            const __callInstance36 = new WebAssembly.Instance(__callWasmModule, {
                                env: {
                                    impFunc: () => {
                                        sc_newline();
                                    }
                                }
                            });
                            const __exports = __callInstance36.exports;
                            return __exports.data();
                        })();
                    }
                }
            }
        });
        const __exports = __ifInstance60.exports;
        return __exports.data(arguments.length === 1 ? 1 : 0);
    })();
}
function sc_format(s, args) {
    var len = s.length;
    var p = new sc_StringOutputPort();
    var i = 0, j = 1;
    while (i < len) {
        var i2 = s.indexOf(lS(0, 252), i);
        if (i2 == -1) {
            (() => {
                const __callInstance35 = new WebAssembly.Instance(__callWasmModule, {
                    env: {
                        impFunc: () => {
                            p.appendJSString(s.substring(i, len));
                        }
                    }
                });
                const __exports = __callInstance35.exports;
                return __exports.data();
            })();
            return p.close();
        } else {
            if (i2 > i) {
                if (i2 == len - 1) {
                    (() => {
                        const __callInstance34 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    p.appendJSString(s.substring(i, len));
                                }
                            }
                        });
                        const __exports = __callInstance34.exports;
                        return __exports.data();
                    })();
                    return p.close();
                } else {
                    (() => {
                        const __callInstance33 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    p.appendJSString(s.substring(i, i2));
                                }
                            }
                        });
                        const __exports = __callInstance33.exports;
                        return __exports.data();
                    })();
                    i = i2;
                }
            }
            switch (s.charCodeAt(i2 + 1)) {
            case 65:
            case 97:
                (() => {
                    const __callInstance32 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                sc_display(arguments[j], p);
                            }
                        }
                    });
                    const __exports = __callInstance32.exports;
                    return __exports.data();
                })();
                i += 2;
                j++;
                break;
            case 83:
            case 115:
                (() => {
                    const __callInstance31 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                sc_write(arguments[j], p);
                            }
                        }
                    });
                    const __exports = __callInstance31.exports;
                    return __exports.data();
                })();
                i += 2;
                j++;
                break;
            case 86:
            case 118:
                (() => {
                    const __callInstance30 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                sc_display(arguments[j], p);
                            }
                        }
                    });
                    const __exports = __callInstance30.exports;
                    return __exports.data();
                })();
                (() => {
                    const __callInstance29 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                p.appendJSString(lS(0, 253));
                            }
                        }
                    });
                    const __exports = __callInstance29.exports;
                    return __exports.data();
                })();
                i += 2;
                j++;
                break;
            case 67:
            case 99:
                (() => {
                    const __callInstance28 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                p.appendJSString(String.fromCharCode(arguments[j]));
                            }
                        }
                    });
                    const __exports = __callInstance28.exports;
                    return __exports.data();
                })();
                i += 2;
                j++;
                break;
            case 88:
            case 120:
                (() => {
                    const __callInstance27 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                p.appendJSString(arguments[j].toString(6));
                            }
                        }
                    });
                    const __exports = __callInstance27.exports;
                    return __exports.data();
                })();
                i += 2;
                j++;
                break;
            case 79:
            case 111:
                (() => {
                    const __callInstance26 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                p.appendJSString(arguments[j].toString(8));
                            }
                        }
                    });
                    const __exports = __callInstance26.exports;
                    return __exports.data();
                })();
                i += 2;
                j++;
                break;
            case 66:
            case 98:
                (() => {
                    const __callInstance25 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                p.appendJSString(arguments[j].toString(2));
                            }
                        }
                    });
                    const __exports = __callInstance25.exports;
                    return __exports.data();
                })();
                i += 2;
                j++;
                break;
            case 37:
            case 110:
                (() => {
                    const __callInstance24 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                p.appendJSString(lS(0, 254));
                            }
                        }
                    });
                    const __exports = __callInstance24.exports;
                    return __exports.data();
                })();
                i += 2;
                break;
            case 114:
                (() => {
                    const __callInstance23 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                p.appendJSString(lS(0, 255));
                            }
                        }
                    });
                    const __exports = __callInstance23.exports;
                    return __exports.data();
                })();
                i += 2;
                break;
            case 126:
                (() => {
                    const __callInstance22 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                p.appendJSString(lS(0, 256));
                            }
                        }
                    });
                    const __exports = __callInstance22.exports;
                    return __exports.data();
                })();
                i += 2;
                break;
            default:
                (() => {
                    const __callInstance21 = new WebAssembly.Instance(__callWasmModule, {
                        env: {
                            impFunc: () => {
                                sc_error(lS(0, 257) + String.fromCharCode(s.charCodeAt(i2 + 1)) + lS(0, 258));
                            }
                        }
                    });
                    const __exports = __callInstance21.exports;
                    return __exports.data();
                })();
                return lS(0, 259);
            }
        }
    }
    return p.close();
}
var SC_DEFAULT_IN = new sc_ErrorInputPort();
var SC_DEFAULT_OUT = new sc_ErrorOutputPort();
var SC_ERROR_OUT = new sc_ErrorOutputPort();
var sc_SYMBOL_PREFIX = lS(0, 260);
var sc_KEYWORD_PREFIX = lS(0, 261);
function sc_jsstring2string(s) {
    return s;
}
function sc_jsstring2symbol(s) {
    return sc_SYMBOL_PREFIX + s;
}
function sc_string2jsstring(s) {
    return s;
}
function sc_symbol2jsstring(s) {
    return s.slice(1);
}
function sc_keyword2jsstring(k) {
    return k.slice(1);
}
function sc_jsstring2keyword(s) {
    return sc_KEYWORD_PREFIX + s;
}
function sc_isKeyword(s) {
    return typeof s === lS(0, 262) && s.charAt(0) === sc_KEYWORD_PREFIX;
}
var sc_gensym = function () {
    var counter = 1000;
    return function (sym) {
        counter++;
        (() => {
            const __ifInstance61 = new WebAssembly.Instance(__ifWasmModule, {
                env: {
                    impFunc1: () => {
                        sym = sc_SYMBOL_PREFIX;
                    },
                    impFunc2: () => {
                    }
                }
            });
            const __exports = __ifInstance61.exports;
            return __exports.data(!sym ? 1 : 0);
        })();
        return sym + lS(0, 263) + counter + lS(0, 264) + lS(0, 265);
    };
}();
function sc_isEqual(o1, o2) {
    return o1 === o2 || sc_isPair(o1) && sc_isPair(o2) && sc_isPairEqual(o1, o2, sc_isEqual) || sc_isVector(o1) && sc_isVector(o2) && sc_isVectorEqual(o1, o2, sc_isEqual);
}
function sc_number2symbol(x, radix) {
    return sc_SYMBOL_PREFIX + sc_number2jsstring(x, radix);
}
var sc_number2string = sc_number2jsstring;
function sc_symbol2number(s, radix) {
    return sc_jsstring2number(s.slice(1), radix);
}
var sc_string2number = sc_jsstring2number;
function sc_string2integer(s, radix) {
    if (!radix)
        return +s;
    return parseInt(s, radix);
}
function sc_string2real(s) {
    return +s;
}
function sc_isSymbol(s) {
    return typeof s === lS(0, 266) && s.charAt(0) === sc_SYMBOL_PREFIX;
}
function sc_symbol2string(s) {
    return s.slice(1);
}
function sc_string2symbol(s) {
    return sc_SYMBOL_PREFIX + s;
}
function sc_symbolAppend() {
    var res = sc_SYMBOL_PREFIX;
    (() => {
        var i = 0;
        const __forInstance34 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i < arguments.length ? 1 : 0;
                },
                update: () => {
                    i++;
                },
                body: () => {
                    res += arguments[i].slice(1);
                }
            }
        });
        const __exports = __forInstance34.exports;
        return __exports.data();
    })();
    return res;
}
function sc_char2string(c) {
    return c.val;
}
function sc_char2symbol(c) {
    return sc_SYMBOL_PREFIX + c.val;
}
function sc_isString(s) {
    return typeof s === lS(0, 267) && s.charAt(0) !== sc_SYMBOL_PREFIX;
}
var sc_makeString = sc_makejsString;
function sc_string() {
    (() => {
        var i = 0;
        const __forInstance35 = new WebAssembly.Instance(__forWasmModule, {
            env: {
                test: () => {
                    return i < arguments.length ? 1 : 0;
                },
                update: () => {
                    i++;
                },
                body: () => {
                    arguments[i] = arguments[i].val;
                }
            }
        });
        const __exports = __forInstance35.exports;
        return __exports.data();
    })();
    return lS(0, 268).concat.apply(lS(0, 269), arguments);
}
function sc_stringLength(s) {
    return s.length;
}
function sc_stringRef(s, k) {
    return new sc_Char(s.charAt(k));
}
function sc_isStringEqual(s1, s2) {
    return s1 === s2;
}
function sc_isStringLess(s1, s2) {
    return s1 < s2;
}
function sc_isStringGreater(s1, s2) {
    return s1 > s2;
}
function sc_isStringLessEqual(s1, s2) {
    return s1 <= s2;
}
function sc_isStringGreaterEqual(s1, s2) {
    return s1 >= s2;
}
function sc_isStringCIEqual(s1, s2) {
    return s1.toLowerCase() === s2.toLowerCase();
}
function sc_isStringCILess(s1, s2) {
    return s1.toLowerCase() < s2.toLowerCase();
}
function sc_isStringCIGreater(s1, s2) {
    return s1.toLowerCase() > s2.toLowerCase();
}
function sc_isStringCILessEqual(s1, s2) {
    return s1.toLowerCase() <= s2.toLowerCase();
}
function sc_isStringCIGreaterEqual(s1, s2) {
    return s1.toLowerCase() >= s2.toLowerCase();
}
function sc_substring(s, start, end) {
    return s.substring(start, end);
}
function sc_isSubstring_at(s1, s2, i) {
    return s2 == s1.substring(i, i + s2.length);
}
function sc_stringAppend() {
    return lS(0, 270).concat.apply(lS(0, 271), arguments);
}
var sc_string2list = sc_jsstring2list;
var sc_list2string = sc_list2jsstring;
function sc_stringCopy(s) {
    return s;
}
function sc_keyword2string(o) {
    return o.slice(1);
}
function sc_string2keyword(o) {
    return sc_KEYWORD_PREFIX + o;
}
String.prototype.sc_toDisplayString = function () {
    if (this.charAt(0) === sc_SYMBOL_PREFIX)
        return this.slice(1);
    else if (this.charAt(0) === sc_KEYWORD_PREFIX)
        return lS(0, 272) + this.slice(1);
    else
        return this.toString();
};
String.prototype.sc_toWriteString = function () {
    if (this.charAt(0) === sc_SYMBOL_PREFIX)
        return this.slice(1);
    else if (this.charAt(0) === sc_KEYWORD_PREFIX)
        return lS(0, 273) + this.slice(1);
    else
        return lS(0, 274) + sc_escapeWriteString(this) + lS(0, 275);
};
var BgL_testzd2boyerzd2;
var BgL_nboyerzd2benchmarkzd2;
var BgL_setupzd2boyerzd2;
var translate_term_nboyer;
var translate_args_nboyer;
var untranslate_term_nboyer;
var BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer;
var BgL_sc_za2symbolzd2recordszd2alistza2_2z00_nboyer;
var translate_alist_nboyer;
var apply_subst_nboyer;
var apply_subst_lst_nboyer;
var tautologyp_nboyer;
var if_constructor_nboyer;
var rewrite_count_nboyer;
var rewrite_nboyer;
var rewrite_args_nboyer;
var unify_subst_nboyer;
var one_way_unify1_nboyer;
var false_term_nboyer;
var true_term_nboyer;
var trans_of_implies1_nboyer;
var is_term_equal_nboyer;
var is_term_member_nboyer;
var const_nboyer;
var sc_const_3_nboyer;
var sc_const_4_nboyer;
{
    sc_const_4_nboyer = new sc_Pair(lS(0, 276), new sc_Pair(new sc_Pair(lS(0, 277), new sc_Pair(new sc_Pair(lS(0, 278), new sc_Pair(lS(0, 279), new sc_Pair(lS(0, 280), null))), new sc_Pair(new sc_Pair(lS(0, 281), new sc_Pair(new sc_Pair(lS(0, 282), new sc_Pair(lS(0, 283), new sc_Pair(lS(0, 284), null))), new sc_Pair(new sc_Pair(lS(0, 285), new sc_Pair(new sc_Pair(lS(0, 286), new sc_Pair(lS(0, 287), new sc_Pair(lS(0, 288), null))), new sc_Pair(new sc_Pair(lS(0, 289), new sc_Pair(lS(0, 290), new sc_Pair(lS(0, 291), null))), null))), null))), null))), new sc_Pair(new sc_Pair(lS(0, 292), new sc_Pair(lS(0, 293), new sc_Pair(lS(0, 294), null))), null)));
    sc_const_3_nboyer = sc_list(new sc_Pair(lS(0, 295), new sc_Pair(new sc_Pair(lS(0, 296), new sc_Pair(lS(0, 297), null)), new sc_Pair(new sc_Pair(lS(0, 298), new sc_Pair(new sc_Pair(lS(0, 299), new sc_Pair(new sc_Pair(lS(0, 300), new sc_Pair(lS(0, 301), null)), new sc_Pair(new sc_Pair(lS(0, 302), null), null))), null)), null))), new sc_Pair(lS(0, 303), new sc_Pair(new sc_Pair(lS(0, 304), new sc_Pair(lS(0, 305), new sc_Pair(lS(0, 306), null))), new sc_Pair(new sc_Pair(lS(0, 307), new sc_Pair(new sc_Pair(lS(0, 308), new sc_Pair(lS(0, 309), null)), new sc_Pair(new sc_Pair(lS(0, 310), new sc_Pair(lS(0, 311), null)), null))), null))), new sc_Pair(lS(0, 312), new sc_Pair(new sc_Pair(lS(0, 313), new sc_Pair(lS(0, 314), new sc_Pair(lS(0, 315), null))), new sc_Pair(new sc_Pair(lS(0, 316), new sc_Pair(lS(0, 317), new sc_Pair(lS(0, 318), null))), null))), new sc_Pair(lS(0, 319), new sc_Pair(new sc_Pair(lS(0, 320), new sc_Pair(lS(0, 321), new sc_Pair(lS(0, 322), null))), new sc_Pair(new sc_Pair(lS(0, 323), new sc_Pair(new sc_Pair(lS(0, 324), new sc_Pair(lS(0, 325), new sc_Pair(lS(0, 326), null))), null)), null))), new sc_Pair(lS(0, 327), new sc_Pair(new sc_Pair(lS(0, 328), new sc_Pair(lS(0, 329), new sc_Pair(lS(0, 330), null))), new sc_Pair(new sc_Pair(lS(0, 331), new sc_Pair(new sc_Pair(lS(0, 332), new sc_Pair(lS(0, 333), new sc_Pair(lS(0, 334), null))), null)), null))), new sc_Pair(lS(0, 335), new sc_Pair(new sc_Pair(lS(0, 336), new sc_Pair(lS(0, 337), null)), new sc_Pair(new sc_Pair(lS(0, 338), new sc_Pair(new sc_Pair(lS(0, 339), new sc_Pair(lS(0, 340), new sc_Pair(new sc_Pair(lS(0, 341), null), null))), new sc_Pair(new sc_Pair(lS(0, 342), new sc_Pair(lS(0, 343), new sc_Pair(new sc_Pair(lS(0, 344), null), null))), null))), null))), new sc_Pair(lS(0, 345), new sc_Pair(new sc_Pair(lS(0, 346), new sc_Pair(lS(0, 347), new sc_Pair(lS(0, 348), null))), new sc_Pair(new sc_Pair(lS(0, 349), new sc_Pair(new sc_Pair(lS(0, 350), new sc_Pair(lS(0, 351), new sc_Pair(lS(0, 352), null))), new sc_Pair(new sc_Pair(lS(0, 353), new sc_Pair(lS(0, 354), new sc_Pair(lS(0, 355), null))), null))), null))), new sc_Pair(lS(0, 356), new sc_Pair(new sc_Pair(lS(0, 357), new sc_Pair(lS(0, 358), null)), new sc_Pair(new sc_Pair(lS(0, 359), new sc_Pair(new sc_Pair(lS(0, 360), new sc_Pair(lS(0, 361), null)), new sc_Pair(new sc_Pair(lS(0, 362), null), new sc_Pair(new sc_Pair(lS(0, 363), new sc_Pair(new sc_Pair(lS(0, 364), new sc_Pair(lS(0, 365), null)), null)), null)))), null))), new sc_Pair(lS(0, 366), new sc_Pair(new sc_Pair(lS(0, 367), new sc_Pair(lS(0, 368), new sc_Pair(lS(0, 369), null))), new sc_Pair(new sc_Pair(lS(0, 370), new sc_Pair(lS(0, 371), new sc_Pair(lS(0, 372), new sc_Pair(new sc_Pair(lS(0, 373), null), null)))), null))), new sc_Pair(lS(0, 374), new sc_Pair(new sc_Pair(lS(0, 375), new sc_Pair(lS(0, 376), null)), new sc_Pair(new sc_Pair(lS(0, 377), new sc_Pair(lS(0, 378), new sc_Pair(1, null))), null))), new sc_Pair(lS(0, 379), new sc_Pair(new sc_Pair(lS(0, 380), new sc_Pair(lS(0, 381), null)), new sc_Pair(new sc_Pair(lS(0, 382), new sc_Pair(lS(0, 383), new sc_Pair(new sc_Pair(lS(0, 384), null), null))), null))), new sc_Pair(lS(0, 385), new sc_Pair(new sc_Pair(lS(0, 386), new sc_Pair(lS(0, 387), new sc_Pair(lS(0, 388), null))), new sc_Pair(new sc_Pair(lS(0, 389), new sc_Pair(new sc_Pair(lS(0, 390), new sc_Pair(lS(0, 391), new sc_Pair(lS(0, 392), null))), null)), null))), new sc_Pair(lS(0, 393), new sc_Pair(new sc_Pair(lS(0, 394), new sc_Pair(lS(0, 395), new sc_Pair(lS(0, 396), null))), new sc_Pair(new sc_Pair(lS(0, 397), new sc_Pair(new sc_Pair(lS(0, 398), new sc_Pair(lS(0, 399), new sc_Pair(new sc_Pair(lS(0, 400), null), null))), new sc_Pair(lS(0, 401), null))), null))), new sc_Pair(lS(0, 402), new sc_Pair(new sc_Pair(lS(0, 403), new sc_Pair(lS(0, 404), new sc_Pair(lS(0, 405), null))), new sc_Pair(new sc_Pair(lS(0, 406), new sc_Pair(new sc_Pair(lS(0, 407), new sc_Pair(lS(0, 408), new sc_Pair(new sc_Pair(lS(0, 409), null), null))), new sc_Pair(lS(0, 410), null))), null))), new sc_Pair(lS(0, 411), new sc_Pair(new sc_Pair(lS(0, 412), new sc_Pair(lS(0, 413), null)), new sc_Pair(new sc_Pair(lS(0, 414), new sc_Pair(new sc_Pair(lS(0, 415), new sc_Pair(lS(0, 416), null)), new sc_Pair(new sc_Pair(lS(0, 417), null), null))), null))), new sc_Pair(lS(0, 418), new sc_Pair(new sc_Pair(lS(0, 419), new sc_Pair(lS(0, 420), null)), new sc_Pair(new sc_Pair(lS(0, 421), new sc_Pair(new sc_Pair(lS(0, 422), new sc_Pair(lS(0, 423), null)), new sc_Pair(new sc_Pair(lS(0, 424), null), null))), null))), new sc_Pair(lS(0, 425), new sc_Pair(new sc_Pair(lS(0, 426), new sc_Pair(lS(0, 427), null)), new sc_Pair(new sc_Pair(lS(0, 428), new sc_Pair(new sc_Pair(lS(0, 429), new sc_Pair(new sc_Pair(lS(0, 430), new sc_Pair(lS(0, 431), null)), null)), new sc_Pair(new sc_Pair(lS(0, 432), new sc_Pair(new sc_Pair(lS(0, 433), new sc_Pair(lS(0, 434), new sc_Pair(new sc_Pair(lS(0, 435), new sc_Pair(new sc_Pair(lS(0, 436), null), null)), null))), null)), new sc_Pair(new sc_Pair(lS(0, 437), new sc_Pair(lS(0, 438), new sc_Pair(new sc_Pair(lS(0, 439), new sc_Pair(lS(0, 440), null)), null))), null)))), null))), new sc_Pair(lS(0, 441), new sc_Pair(new sc_Pair(lS(0, 442), new sc_Pair(lS(0, 443), new sc_Pair(lS(0, 444), null))), new sc_Pair(new sc_Pair(lS(0, 445), new sc_Pair(lS(0, 446), new sc_Pair(new sc_Pair(lS(0, 447), new sc_Pair(lS(0, 448), new sc_Pair(new sc_Pair(lS(0, 449), null), new sc_Pair(new sc_Pair(lS(0, 450), null), null)))), new sc_Pair(new sc_Pair(lS(0, 451), null), null)))), null))), new sc_Pair(lS(0, 452), new sc_Pair(new sc_Pair(lS(0, 453), new sc_Pair(lS(0, 454), new sc_Pair(lS(0, 455), null))), new sc_Pair(new sc_Pair(lS(0, 456), new sc_Pair(lS(0, 457), new sc_Pair(new sc_Pair(lS(0, 458), null), new sc_Pair(new sc_Pair(lS(0, 459), new sc_Pair(lS(1, 0), new sc_Pair(new sc_Pair(lS(1, 1), null), new sc_Pair(new sc_Pair(lS(1, 2), null), null)))), null)))), null))), new sc_Pair(lS(1, 3), new sc_Pair(new sc_Pair(lS(1, 4), new sc_Pair(lS(1, 5), null)), new sc_Pair(new sc_Pair(lS(1, 6), new sc_Pair(lS(1, 7), new sc_Pair(new sc_Pair(lS(1, 8), null), new sc_Pair(new sc_Pair(lS(1, 9), null), null)))), null))), new sc_Pair(lS(1, 10), new sc_Pair(new sc_Pair(lS(1, 11), new sc_Pair(lS(1, 12), new sc_Pair(lS(1, 13), null))), new sc_Pair(new sc_Pair(lS(1, 14), new sc_Pair(lS(1, 15), new sc_Pair(new sc_Pair(lS(1, 16), new sc_Pair(lS(1, 17), new sc_Pair(new sc_Pair(lS(1, 18), null), new sc_Pair(new sc_Pair(lS(1, 19), null), null)))), new sc_Pair(new sc_Pair(lS(1, 20), null), null)))), null))), new sc_Pair(lS(1, 21), new sc_Pair(new sc_Pair(lS(1, 22), new sc_Pair(lS(1, 23), null)), new sc_Pair(new sc_Pair(lS(1, 24), new sc_Pair(new sc_Pair(lS(1, 25), new sc_Pair(lS(1, 26), null)), new sc_Pair(lS(1, 27), new sc_Pair(new sc_Pair(lS(1, 28), null), null)))), null))), new sc_Pair(lS(1, 29), new sc_Pair(new sc_Pair(lS(1, 30), new sc_Pair(new sc_Pair(lS(1, 31), new sc_Pair(lS(1, 32), new sc_Pair(lS(1, 33), new sc_Pair(lS(1, 34), null)))), new sc_Pair(lS(1, 35), new sc_Pair(lS(1, 36), null)))), new sc_Pair(new sc_Pair(lS(1, 37), new sc_Pair(lS(1, 38), new sc_Pair(new sc_Pair(lS(1, 39), new sc_Pair(lS(1, 40), new sc_Pair(lS(1, 41), new sc_Pair(lS(1, 42), null)))), new sc_Pair(new sc_Pair(lS(1, 43), new sc_Pair(lS(1, 44), new sc_Pair(lS(1, 45), new sc_Pair(lS(1, 46), null)))), null)))), null))), new sc_Pair(lS(1, 47), new sc_Pair(new sc_Pair(lS(1, 48), new sc_Pair(lS(1, 49), null)), new sc_Pair(new sc_Pair(lS(1, 50), new sc_Pair(new sc_Pair(lS(1, 51), new sc_Pair(lS(1, 52), new sc_Pair(new sc_Pair(lS(1, 53), null), null))), new sc_Pair(new sc_Pair(lS(1, 54), new sc_Pair(new sc_Pair(lS(1, 55), new sc_Pair(lS(1, 56), null)), null)), null))), null))), new sc_Pair(lS(1, 57), new sc_Pair(new sc_Pair(lS(1, 58), new sc_Pair(new sc_Pair(lS(1, 59), new sc_Pair(lS(1, 60), new sc_Pair(lS(1, 61), null))), new sc_Pair(lS(1, 62), null))), new sc_Pair(new sc_Pair(lS(1, 63), new sc_Pair(lS(1, 64), new sc_Pair(new sc_Pair(lS(1, 65), new sc_Pair(lS(1, 66), new sc_Pair(lS(1, 67), null))), null))), null))), new sc_Pair(lS(1, 68), new sc_Pair(new sc_Pair(lS(1, 69), new sc_Pair(new sc_Pair(lS(1, 70), new sc_Pair(lS(1, 71), new sc_Pair(lS(1, 72), null))), new sc_Pair(new sc_Pair(lS(1, 73), null), null))), new sc_Pair(new sc_Pair(lS(1, 74), new sc_Pair(new sc_Pair(lS(1, 75), new sc_Pair(lS(1, 76), null)), new sc_Pair(new sc_Pair(lS(1, 77), new sc_Pair(lS(1, 78), null)), null))), null))), new sc_Pair(lS(1, 79), new sc_Pair(new sc_Pair(lS(1, 80), new sc_Pair(lS(1, 81), new sc_Pair(lS(1, 82), null))), new sc_Pair(new sc_Pair(lS(1, 83), null), null))), new sc_Pair(lS(1, 84), new sc_Pair(new sc_Pair(lS(1, 85), new sc_Pair(new sc_Pair(lS(1, 86), new sc_Pair(lS(1, 87), new sc_Pair(lS(1, 88), null))), new sc_Pair(new sc_Pair(lS(1, 89), new sc_Pair(lS(1, 90), new sc_Pair(lS(1, 91), null))), null))), new sc_Pair(new sc_Pair(lS(1, 92), new sc_Pair(new sc_Pair(lS(1, 93), new sc_Pair(lS(1, 94), null)), new sc_Pair(new sc_Pair(lS(1, 95), new sc_Pair(lS(1, 96), null)), null))), null))), new sc_Pair(lS(1, 97), new sc_Pair(new sc_Pair(lS(1, 98), new sc_Pair(new sc_Pair(lS(1, 99), null), new sc_Pair(new sc_Pair(lS(1, 100), new sc_Pair(lS(1, 101), new sc_Pair(lS(1, 102), null))), null))), new sc_Pair(new sc_Pair(lS(1, 103), new sc_Pair(new sc_Pair(lS(1, 104), new sc_Pair(lS(1, 105), new sc_Pair(lS(1, 106), null))), null)), null))), new sc_Pair(lS(1, 107), new sc_Pair(new sc_Pair(lS(1, 108), new sc_Pair(lS(1, 109), new sc_Pair(new sc_Pair(lS(1, 110), new sc_Pair(lS(1, 111), new sc_Pair(lS(1, 112), null))), null))), new sc_Pair(new sc_Pair(lS(1, 113), new sc_Pair(new sc_Pair(lS(1, 114), new sc_Pair(lS(1, 115), null)), new sc_Pair(new sc_Pair(lS(1, 116), new sc_Pair(new sc_Pair(lS(1, 117), new sc_Pair(lS(1, 118), new sc_Pair(new sc_Pair(lS(1, 119), null), null))), new sc_Pair(new sc_Pair(lS(1, 120), new sc_Pair(lS(1, 121), null)), null))), null))), null))), new sc_Pair(lS(1, 122), new sc_Pair(new sc_Pair(lS(1, 123), new sc_Pair(new sc_Pair(lS(1, 124), new sc_Pair(new sc_Pair(lS(1, 125), new sc_Pair(lS(1, 126), new sc_Pair(lS(1, 127), null))), null)), new sc_Pair(lS(1, 128), null))), new sc_Pair(new sc_Pair(lS(1, 129), new sc_Pair(new sc_Pair(lS(1, 130), new sc_Pair(new sc_Pair(lS(1, 131), new sc_Pair(lS(1, 132), null)), new sc_Pair(lS(1, 133), null))), new sc_Pair(new sc_Pair(lS(1, 134), new sc_Pair(new sc_Pair(lS(1, 135), new sc_Pair(lS(1, 136), null)), new sc_Pair(lS(1, 137), null))), null))), null))), new sc_Pair(lS(1, 138), new sc_Pair(new sc_Pair(lS(1, 139), new sc_Pair(new sc_Pair(lS(1, 140), new sc_Pair(new sc_Pair(lS(1, 141), new sc_Pair(lS(1, 142), null)), null)), new sc_Pair(lS(1, 143), null))), new sc_Pair(new sc_Pair(lS(1, 144), new sc_Pair(new sc_Pair(lS(1, 145), new sc_Pair(lS(1, 146), new sc_Pair(lS(1, 147), null))), null)), null))), new sc_Pair(lS(1, 148), new sc_Pair(new sc_Pair(lS(1, 149), new sc_Pair(new sc_Pair(lS(1, 150), new sc_Pair(lS(1, 151), new sc_Pair(lS(1, 152), null))), new sc_Pair(lS(1, 153), null))), new sc_Pair(new sc_Pair(lS(1, 154), new sc_Pair(lS(1, 155), new sc_Pair(new sc_Pair(lS(1, 156), new sc_Pair(lS(1, 157), new sc_Pair(lS(1, 158), null))), null))), null))), new sc_Pair(lS(1, 159), new sc_Pair(new sc_Pair(lS(1, 160), new sc_Pair(new sc_Pair(lS(1, 161), new sc_Pair(lS(1, 162), new sc_Pair(lS(1, 163), null))), null)), new sc_Pair(new sc_Pair(lS(1, 164), new sc_Pair(new sc_Pair(lS(1, 165), new sc_Pair(lS(1, 166), null)), new sc_Pair(new sc_Pair(lS(1, 167), new sc_Pair(lS(1, 168), null)), null))), null))), new sc_Pair(lS(1, 169), new sc_Pair(new sc_Pair(lS(1, 170), new sc_Pair(lS(1, 171), new sc_Pair(new sc_Pair(lS(1, 172), new sc_Pair(lS(1, 173), new sc_Pair(lS(1, 174), null))), null))), new sc_Pair(new sc_Pair(lS(1, 175), new sc_Pair(new sc_Pair(lS(1, 176), new sc_Pair(lS(1, 177), new sc_Pair(lS(1, 178), null))), new sc_Pair(new sc_Pair(lS(1, 179), new sc_Pair(lS(1, 180), new sc_Pair(lS(1, 181), null))), null))), null))), new sc_Pair(lS(1, 182), new sc_Pair(new sc_Pair(lS(1, 183), new sc_Pair(new sc_Pair(lS(1, 184), new sc_Pair(lS(1, 185), new sc_Pair(lS(1, 186), null))), new sc_Pair(lS(1, 187), null))), new sc_Pair(new sc_Pair(lS(1, 188), new sc_Pair(lS(1, 189), new sc_Pair(new sc_Pair(lS(1, 190), new sc_Pair(lS(1, 191), new sc_Pair(lS(1, 192), null))), null))), null))), new sc_Pair(lS(1, 193), new sc_Pair(new sc_Pair(lS(1, 194), new sc_Pair(new sc_Pair(lS(1, 195), new sc_Pair(lS(1, 196), new sc_Pair(lS(1, 197), null))), new sc_Pair(new sc_Pair(lS(1, 198), null), null))), new sc_Pair(new sc_Pair(lS(1, 199), new sc_Pair(new sc_Pair(lS(1, 200), new sc_Pair(lS(1, 201), null)), new sc_Pair(new sc_Pair(lS(1, 202), new sc_Pair(lS(1, 203), null)), null))), null))), new sc_Pair(lS(1, 204), new sc_Pair(new sc_Pair(lS(1, 205), new sc_Pair(new sc_Pair(lS(1, 206), new sc_Pair(lS(1, 207), new sc_Pair(lS(1, 208), null))), new sc_Pair(lS(1, 209), new sc_Pair(lS(1, 210), null)))), new sc_Pair(new sc_Pair(lS(1, 211), new sc_Pair(lS(1, 212), new sc_Pair(new sc_Pair(lS(1, 213), new sc_Pair(lS(1, 214), new sc_Pair(lS(1, 215), new sc_Pair(lS(1, 216), null)))), new sc_Pair(lS(1, 217), null)))), null))), new sc_Pair(lS(1, 218), new sc_Pair(new sc_Pair(lS(1, 219), new sc_Pair(lS(1, 220), new sc_Pair(lS(1, 221), null))), new sc_Pair(new sc_Pair(lS(1, 222), new sc_Pair(new sc_Pair(lS(1, 223), new sc_Pair(lS(1, 224), null)), new sc_Pair(lS(1, 225), null))), null))), new sc_Pair(lS(1, 226), new sc_Pair(new sc_Pair(lS(1, 227), new sc_Pair(lS(1, 228), new sc_Pair(new sc_Pair(lS(1, 229), new sc_Pair(lS(1, 230), new sc_Pair(lS(1, 231), null))), null))), new sc_Pair(new sc_Pair(lS(1, 232), new sc_Pair(new sc_Pair(lS(1, 233), new sc_Pair(lS(1, 234), new sc_Pair(lS(1, 235), null))), new sc_Pair(new sc_Pair(lS(1, 236), new sc_Pair(lS(1, 237), new sc_Pair(lS(1, 238), null))), null))), null))), new sc_Pair(lS(1, 239), new sc_Pair(new sc_Pair(lS(1, 240), new sc_Pair(lS(1, 241), new sc_Pair(new sc_Pair(lS(1, 242), new sc_Pair(lS(1, 243), null)), null))), new sc_Pair(new sc_Pair(lS(1, 244), new sc_Pair(lS(1, 245), new sc_Pair(lS(1, 246), null))), null))), new sc_Pair(lS(1, 247), new sc_Pair(new sc_Pair(lS(1, 248), new sc_Pair(new sc_Pair(lS(1, 249), new sc_Pair(lS(1, 250), null)), null)), new sc_Pair(new sc_Pair(lS(1, 251), new sc_Pair(lS(1, 252), null)), null))), new sc_Pair(lS(1, 253), new sc_Pair(new sc_Pair(lS(1, 254), new sc_Pair(lS(1, 255), new sc_Pair(new sc_Pair(lS(1, 256), new sc_Pair(lS(1, 257), new sc_Pair(lS(1, 258), null))), null))), new sc_Pair(new sc_Pair(lS(1, 259), new sc_Pair(new sc_Pair(lS(1, 260), new sc_Pair(lS(1, 261), new sc_Pair(lS(1, 262), null))), new sc_Pair(new sc_Pair(lS(1, 263), new sc_Pair(lS(1, 264), new sc_Pair(lS(1, 265), null))), null))), null))), new sc_Pair(lS(1, 266), new sc_Pair(new sc_Pair(lS(1, 267), new sc_Pair(new sc_Pair(lS(1, 268), null), new sc_Pair(lS(1, 269), null))), new sc_Pair(new sc_Pair(lS(1, 270), null), null))), new sc_Pair(lS(1, 271), new sc_Pair(new sc_Pair(lS(1, 272), new sc_Pair(lS(1, 273), new sc_Pair(new sc_Pair(lS(1, 274), new sc_Pair(lS(1, 275), new sc_Pair(lS(1, 276), null))), null))), new sc_Pair(new sc_Pair(lS(1, 277), new sc_Pair(new sc_Pair(lS(1, 278), new sc_Pair(lS(1, 279), new sc_Pair(lS(1, 280), null))), new sc_Pair(new sc_Pair(lS(1, 281), new sc_Pair(lS(1, 282), new sc_Pair(lS(1, 283), null))), null))), null))), new sc_Pair(lS(1, 284), new sc_Pair(new sc_Pair(lS(1, 285), new sc_Pair(lS(1, 286), new sc_Pair(new sc_Pair(lS(1, 287), new sc_Pair(lS(1, 288), new sc_Pair(lS(1, 289), null))), null))), new sc_Pair(new sc_Pair(lS(1, 290), new sc_Pair(new sc_Pair(lS(1, 291), new sc_Pair(lS(1, 292), new sc_Pair(lS(1, 293), null))), new sc_Pair(lS(1, 294), null))), null))), new sc_Pair(lS(1, 295), new sc_Pair(new sc_Pair(lS(1, 296), new sc_Pair(lS(1, 297), new sc_Pair(lS(1, 298), null))), new sc_Pair(new sc_Pair(lS(1, 299), new sc_Pair(new sc_Pair(lS(1, 300), new sc_Pair(lS(1, 301), null)), new sc_Pair(lS(1, 302), null))), null))), new sc_Pair(lS(1, 303), new sc_Pair(new sc_Pair(lS(1, 304), new sc_Pair(lS(1, 305), new sc_Pair(new sc_Pair(lS(1, 306), null), null))), new sc_Pair(new sc_Pair(lS(1, 307), new sc_Pair(lS(1, 308), null)), null))), new sc_Pair(lS(1, 309), new sc_Pair(new sc_Pair(lS(1, 310), new sc_Pair(lS(1, 311), new sc_Pair(new sc_Pair(lS(1, 312), new sc_Pair(lS(1, 313), new sc_Pair(lS(1, 314), null))), null))), new sc_Pair(new sc_Pair(lS(1, 315), new sc_Pair(new sc_Pair(lS(1, 316), new sc_Pair(lS(1, 317), new sc_Pair(lS(1, 318), null))), new sc_Pair(new sc_Pair(lS(1, 319), new sc_Pair(lS(1, 320), new sc_Pair(lS(2, 0), null))), null))), null))), new sc_Pair(lS(2, 1), new sc_Pair(new sc_Pair(lS(2, 2), new sc_Pair(new sc_Pair(lS(2, 3), new sc_Pair(lS(2, 4), new sc_Pair(lS(2, 5), null))), new sc_Pair(new sc_Pair(lS(2, 6), new sc_Pair(lS(2, 7), new sc_Pair(lS(2, 8), null))), null))), new sc_Pair(new sc_Pair(lS(2, 9), new sc_Pair(lS(2, 10), new sc_Pair(lS(2, 11), null))), null))), new sc_Pair(lS(2, 12), new sc_Pair(new sc_Pair(lS(2, 13), new sc_Pair(new sc_Pair(lS(2, 14), new sc_Pair(lS(2, 15), new sc_Pair(lS(2, 16), null))), new sc_Pair(new sc_Pair(lS(2, 17), new sc_Pair(lS(2, 18), new sc_Pair(new sc_Pair(lS(2, 19), new sc_Pair(lS(2, 20), new sc_Pair(lS(2, 21), null))), null))), null))), new sc_Pair(new sc_Pair(lS(2, 22), new sc_Pair(lS(2, 23), null)), null))), new sc_Pair(lS(2, 24), new sc_Pair(new sc_Pair(lS(2, 25), new sc_Pair(new sc_Pair(lS(2, 26), new sc_Pair(lS(2, 27), new sc_Pair(lS(2, 28), new sc_Pair(lS(2, 29), null)))), new sc_Pair(lS(2, 30), null))), new sc_Pair(new sc_Pair(lS(2, 31), new sc_Pair(new sc_Pair(lS(2, 32), new sc_Pair(lS(2, 33), new sc_Pair(lS(2, 34), null))), new sc_Pair(lS(2, 35), null))), null))), new sc_Pair(lS(2, 36), new sc_Pair(new sc_Pair(lS(2, 37), new sc_Pair(new sc_Pair(lS(2, 38), new sc_Pair(lS(2, 39), new sc_Pair(lS(2, 40), new sc_Pair(lS(2, 41), new sc_Pair(lS(2, 42), null))))), new sc_Pair(lS(2, 43), null))), new sc_Pair(new sc_Pair(lS(2, 44), new sc_Pair(lS(2, 45), new sc_Pair(new sc_Pair(lS(2, 46), new sc_Pair(new sc_Pair(lS(2, 47), new sc_Pair(lS(2, 48), new sc_Pair(lS(2, 49), null))), new sc_Pair(new sc_Pair(lS(2, 50), new sc_Pair(lS(2, 51), new sc_Pair(lS(2, 52), null))), null))), null))), null))), new sc_Pair(lS(2, 53), new sc_Pair(new sc_Pair(lS(2, 54), new sc_Pair(lS(2, 55), new sc_Pair(1, null))), new sc_Pair(new sc_Pair(lS(2, 56), null), null))), new sc_Pair(lS(2, 57), new sc_Pair(new sc_Pair(lS(2, 58), new sc_Pair(new sc_Pair(lS(2, 59), new sc_Pair(lS(2, 60), new sc_Pair(lS(2, 61), null))), new sc_Pair(lS(2, 62), null))), new sc_Pair(new sc_Pair(lS(2, 63), new sc_Pair(new sc_Pair(lS(2, 64), new sc_Pair(lS(2, 65), null)), null)), null))), new sc_Pair(lS(2, 66), new sc_Pair(new sc_Pair(lS(2, 67), new sc_Pair(lS(2, 68), new sc_Pair(lS(2, 69), null))), new sc_Pair(new sc_Pair(lS(2, 70), null), null))), new sc_Pair(lS(2, 71), new sc_Pair(new sc_Pair(lS(2, 72), new sc_Pair(new sc_Pair(lS(2, 73), new sc_Pair(lS(2, 74), new sc_Pair(lS(2, 75), null))), new sc_Pair(lS(2, 76), null))), new sc_Pair(new sc_Pair(lS(2, 77), new sc_Pair(new sc_Pair(lS(2, 78), new sc_Pair(new sc_Pair(lS(2, 79), new sc_Pair(lS(2, 80), null)), null)), new sc_Pair(new sc_Pair(lS(2, 81), new sc_Pair(new sc_Pair(lS(2, 82), new sc_Pair(lS(2, 83), null)), new sc_Pair(new sc_Pair(lS(2, 84), new sc_Pair(new sc_Pair(lS(2, 85), new sc_Pair(lS(2, 86), new sc_Pair(1, null))), null)), null))), null))), null))), new sc_Pair(lS(2, 87), new sc_Pair(new sc_Pair(lS(2, 88), new sc_Pair(new sc_Pair(lS(2, 89), new sc_Pair(lS(2, 90), new sc_Pair(lS(2, 91), null))), new sc_Pair(lS(2, 92), null))), new sc_Pair(new sc_Pair(lS(2, 93), new sc_Pair(new sc_Pair(lS(2, 94), new sc_Pair(new sc_Pair(lS(2, 95), new sc_Pair(lS(2, 96), null)), null)), new sc_Pair(new sc_Pair(lS(2, 97), new sc_Pair(new sc_Pair(lS(2, 98), new sc_Pair(lS(2, 99), null)), null)), new sc_Pair(new sc_Pair(lS(2, 100), new sc_Pair(new sc_Pair(lS(2, 101), new sc_Pair(lS(2, 102), new sc_Pair(lS(2, 103), null))), null)), null)))), null))), new sc_Pair(lS(2, 104), new sc_Pair(new sc_Pair(lS(2, 105), new sc_Pair(new sc_Pair(lS(2, 106), new sc_Pair(lS(2, 107), new sc_Pair(lS(2, 108), null))), new sc_Pair(lS(2, 109), null))), new sc_Pair(new sc_Pair(lS(2, 110), new sc_Pair(lS(2, 111), null)), null))), new sc_Pair(lS(2, 112), new sc_Pair(new sc_Pair(lS(2, 113), new sc_Pair(new sc_Pair(lS(2, 114), new sc_Pair(new sc_Pair(lS(2, 115), new sc_Pair(lS(2, 116), new sc_Pair(lS(2, 117), null))), new sc_Pair(new sc_Pair(lS(2, 118), new sc_Pair(lS(2, 119), new sc_Pair(lS(2, 120), null))), new sc_Pair(new sc_Pair(lS(2, 121), null), new sc_Pair(lS(2, 122), null))))), new sc_Pair(lS(2, 123), null))), new sc_Pair(new sc_Pair(lS(2, 124), new sc_Pair(lS(2, 125), new sc_Pair(lS(2, 126), null))), null))), new sc_Pair(lS(2, 127), new sc_Pair(new sc_Pair(lS(2, 128), new sc_Pair(lS(2, 129), new sc_Pair(lS(2, 130), null))), new sc_Pair(new sc_Pair(lS(2, 131), new sc_Pair(lS(2, 132), new sc_Pair(lS(2, 133), null))), null))), new sc_Pair(lS(2, 134), new sc_Pair(new sc_Pair(lS(2, 135), new sc_Pair(new sc_Pair(lS(2, 136), new sc_Pair(lS(2, 137), new sc_Pair(lS(2, 138), null))), new sc_Pair(lS(2, 139), null))), new sc_Pair(new sc_Pair(lS(2, 140), new sc_Pair(new sc_Pair(lS(2, 141), new sc_Pair(lS(2, 142), new sc_Pair(lS(2, 143), null))), new sc_Pair(new sc_Pair(lS(2, 144), new sc_Pair(lS(2, 145), new sc_Pair(new sc_Pair(lS(2, 146), new sc_Pair(lS(2, 147), new sc_Pair(new sc_Pair(lS(2, 148), new sc_Pair(lS(2, 149), null)), null))), null))), null))), null))), new sc_Pair(lS(2, 150), new sc_Pair(new sc_Pair(lS(2, 151), new sc_Pair(new sc_Pair(lS(2, 152), new sc_Pair(lS(2, 153), new sc_Pair(lS(2, 154), null))), new sc_Pair(lS(2, 155), null))), new sc_Pair(new sc_Pair(lS(2, 156), new sc_Pair(lS(2, 157), null)), null))), new sc_Pair(lS(2, 158), new sc_Pair(new sc_Pair(lS(2, 159), new sc_Pair(new sc_Pair(lS(2, 160), new sc_Pair(lS(2, 161), new sc_Pair(lS(2, 162), null))), new sc_Pair(lS(2, 163), null))), new sc_Pair(new sc_Pair(lS(2, 164), new sc_Pair(lS(2, 165), null)), null))), new sc_Pair(lS(2, 166), new sc_Pair(new sc_Pair(lS(2, 167), new sc_Pair(new sc_Pair(lS(2, 168), new sc_Pair(lS(2, 169), new sc_Pair(lS(2, 170), null))), new sc_Pair(new sc_Pair(lS(2, 171), new sc_Pair(lS(2, 172), new sc_Pair(lS(2, 173), null))), null))), new sc_Pair(new sc_Pair(lS(2, 174), new sc_Pair(lS(2, 175), new sc_Pair(lS(2, 176), null))), null))), new sc_Pair(lS(2, 177), new sc_Pair(new sc_Pair(lS(2, 178), new sc_Pair(lS(2, 179), new sc_Pair(new sc_Pair(lS(2, 180), new sc_Pair(lS(2, 181), new sc_Pair(lS(2, 182), null))), null))), new sc_Pair(new sc_Pair(lS(2, 183), new sc_Pair(new sc_Pair(lS(2, 184), new sc_Pair(lS(2, 185), new sc_Pair(lS(2, 186), null))), new sc_Pair(new sc_Pair(lS(2, 187), new sc_Pair(lS(2, 188), new sc_Pair(lS(2, 189), null))), null))), null))), new sc_Pair(lS(2, 190), new sc_Pair(new sc_Pair(lS(2, 191), new sc_Pair(new sc_Pair(lS(2, 192), new sc_Pair(lS(2, 193), new sc_Pair(lS(2, 194), null))), new sc_Pair(lS(2, 195), null))), new sc_Pair(new sc_Pair(lS(2, 196), null), null))), new sc_Pair(lS(2, 197), new sc_Pair(new sc_Pair(lS(2, 198), new sc_Pair(new sc_Pair(lS(2, 199), new sc_Pair(lS(2, 200), new sc_Pair(new sc_Pair(lS(2, 201), new sc_Pair(lS(2, 202), new sc_Pair(lS(2, 203), null))), null))), new sc_Pair(lS(2, 204), null))), new sc_Pair(new sc_Pair(lS(2, 205), new sc_Pair(lS(2, 206), new sc_Pair(lS(2, 207), null))), null))), new sc_Pair(lS(2, 208), new sc_Pair(new sc_Pair(lS(2, 209), new sc_Pair(new sc_Pair(lS(2, 210), new sc_Pair(new sc_Pair(lS(2, 211), new sc_Pair(lS(2, 212), new sc_Pair(lS(2, 213), null))), null)), new sc_Pair(lS(2, 214), null))), new sc_Pair(new sc_Pair(lS(2, 215), new sc_Pair(lS(2, 216), null)), null))), new sc_Pair(lS(2, 217), new sc_Pair(new sc_Pair(lS(2, 218), new sc_Pair(new sc_Pair(lS(2, 219), new sc_Pair(lS(2, 220), new sc_Pair(lS(2, 221), null))), new sc_Pair(new sc_Pair(lS(2, 222), new sc_Pair(lS(2, 223), new sc_Pair(lS(2, 224), null))), null))), new sc_Pair(new sc_Pair(lS(2, 225), new sc_Pair(lS(2, 226), new sc_Pair(lS(2, 227), null))), null))), new sc_Pair(lS(2, 228), new sc_Pair(new sc_Pair(lS(2, 229), new sc_Pair(new sc_Pair(lS(2, 230), new sc_Pair(lS(2, 231), new sc_Pair(lS(2, 232), null))), new sc_Pair(new sc_Pair(lS(2, 233), new sc_Pair(lS(2, 234), new sc_Pair(lS(2, 235), null))), null))), new sc_Pair(new sc_Pair(lS(2, 236), new sc_Pair(new sc_Pair(lS(2, 237), new sc_Pair(new sc_Pair(lS(2, 238), new sc_Pair(lS(2, 239), null)), null)), new sc_Pair(new sc_Pair(lS(2, 240), new sc_Pair(lS(2, 241), new sc_Pair(lS(2, 242), null))), null))), null))), new sc_Pair(lS(2, 243), new sc_Pair(new sc_Pair(lS(2, 244), new sc_Pair(lS(2, 245), new sc_Pair(new sc_Pair(lS(2, 246), new sc_Pair(lS(2, 247), new sc_Pair(lS(2, 248), null))), null))), new sc_Pair(new sc_Pair(lS(2, 249), new sc_Pair(new sc_Pair(lS(2, 250), new sc_Pair(lS(2, 251), null)), null)), null))), new sc_Pair(lS(2, 252), new sc_Pair(new sc_Pair(lS(2, 253), new sc_Pair(new sc_Pair(lS(2, 254), new sc_Pair(lS(2, 255), new sc_Pair(lS(2, 256), null))), new sc_Pair(new sc_Pair(lS(2, 257), new sc_Pair(lS(2, 258), new sc_Pair(lS(2, 259), null))), null))), new sc_Pair(new sc_Pair(lS(2, 260), new sc_Pair(lS(2, 261), new sc_Pair(new sc_Pair(lS(2, 262), new sc_Pair(lS(2, 263), new sc_Pair(lS(2, 264), null))), null))), null))), new sc_Pair(lS(2, 265), new sc_Pair(new sc_Pair(lS(2, 266), new sc_Pair(new sc_Pair(lS(2, 267), new sc_Pair(lS(2, 268), null)), new sc_Pair(lS(2, 269), null))), new sc_Pair(new sc_Pair(lS(2, 270), new sc_Pair(lS(2, 271), new sc_Pair(lS(2, 272), null))), null))), new sc_Pair(lS(2, 273), new sc_Pair(new sc_Pair(lS(2, 274), new sc_Pair(new sc_Pair(lS(2, 275), new sc_Pair(lS(2, 276), null)), new sc_Pair(new sc_Pair(lS(2, 277), new sc_Pair(lS(2, 278), new sc_Pair(new sc_Pair(lS(2, 279), null), null))), null))), new sc_Pair(new sc_Pair(lS(2, 280), new sc_Pair(new sc_Pair(lS(2, 281), new sc_Pair(lS(2, 282), null)), new sc_Pair(new sc_Pair(lS(2, 283), new sc_Pair(lS(2, 284), new sc_Pair(lS(2, 285), null))), null))), null))), new sc_Pair(lS(2, 286), new sc_Pair(new sc_Pair(lS(2, 287), new sc_Pair(new sc_Pair(lS(2, 288), new sc_Pair(lS(2, 289), null)), null)), new sc_Pair(new sc_Pair(lS(2, 290), new sc_Pair(lS(2, 291), null)), null))), new sc_Pair(lS(2, 292), new sc_Pair(new sc_Pair(lS(2, 293), new sc_Pair(lS(2, 294), new sc_Pair(lS(2, 295), null))), new sc_Pair(new sc_Pair(lS(2, 296), new sc_Pair(new sc_Pair(lS(2, 297), new sc_Pair(lS(2, 298), null)), new sc_Pair(new sc_Pair(lS(2, 299), new sc_Pair(lS(2, 300), null)), null))), null))), new sc_Pair(lS(2, 301), new sc_Pair(new sc_Pair(lS(2, 302), new sc_Pair(new sc_Pair(lS(2, 303), new sc_Pair(lS(2, 304), new sc_Pair(lS(2, 305), null))), new sc_Pair(new sc_Pair(lS(2, 306), null), null))), new sc_Pair(new sc_Pair(lS(2, 307), new sc_Pair(new sc_Pair(lS(2, 308), new sc_Pair(new sc_Pair(lS(2, 309), new sc_Pair(lS(2, 310), null)), new sc_Pair(new sc_Pair(lS(2, 311), new sc_Pair(lS(2, 312), new sc_Pair(1, null))), null))), new sc_Pair(new sc_Pair(lS(2, 313), new sc_Pair(lS(3, 0), new sc_Pair(new sc_Pair(lS(3, 1), null), null))), null))), null))), new sc_Pair(lS(3, 2), new sc_Pair(new sc_Pair(lS(3, 3), new sc_Pair(new sc_Pair(lS(3, 4), new sc_Pair(lS(3, 5), new sc_Pair(lS(3, 6), null))), new sc_Pair(1, null))), new sc_Pair(new sc_Pair(lS(3, 7), new sc_Pair(lS(3, 8), new sc_Pair(1, null))), null))), new sc_Pair(lS(3, 9), new sc_Pair(new sc_Pair(lS(3, 10), new sc_Pair(new sc_Pair(lS(3, 11), new sc_Pair(lS(3, 12), new sc_Pair(lS(3, 13), null))), null)), new sc_Pair(new sc_Pair(lS(3, 14), new sc_Pair(new sc_Pair(lS(3, 15), new sc_Pair(new sc_Pair(lS(3, 16), new sc_Pair(new sc_Pair(lS(3, 17), new sc_Pair(lS(3, 18), null)), new sc_Pair(new sc_Pair(lS(3, 19), new sc_Pair(lS(3, 20), new sc_Pair(1, null))), null))), new sc_Pair(new sc_Pair(lS(3, 21), new sc_Pair(new sc_Pair(lS(3, 22), new sc_Pair(lS(3, 23), null)), null)), null))), null)), null))), new sc_Pair(lS(3, 24), new sc_Pair(new sc_Pair(lS(3, 25), new sc_Pair(new sc_Pair(lS(3, 26), new sc_Pair(lS(3, 27), new sc_Pair(lS(3, 28), null))), null)), new sc_Pair(new sc_Pair(lS(3, 29), new sc_Pair(new sc_Pair(lS(3, 30), new sc_Pair(lS(3, 31), null)), new sc_Pair(new sc_Pair(lS(3, 32), new sc_Pair(lS(3, 33), null)), null))), null))), new sc_Pair(lS(3, 34), new sc_Pair(new sc_Pair(lS(3, 35), new sc_Pair(new sc_Pair(lS(3, 36), new sc_Pair(lS(3, 37), new sc_Pair(lS(3, 38), null))), null)), new sc_Pair(new sc_Pair(lS(3, 39), new sc_Pair(new sc_Pair(lS(3, 40), new sc_Pair(lS(3, 41), null)), new sc_Pair(new sc_Pair(lS(3, 42), new sc_Pair(lS(3, 43), null)), null))), null))), new sc_Pair(lS(3, 44), new sc_Pair(new sc_Pair(lS(3, 45), new sc_Pair(lS(3, 46), new sc_Pair(new sc_Pair(lS(3, 47), new sc_Pair(lS(3, 48), new sc_Pair(lS(3, 49), null))), null))), new sc_Pair(new sc_Pair(lS(3, 50), new sc_Pair(new sc_Pair(lS(3, 51), new sc_Pair(lS(3, 52), null)), new sc_Pair(new sc_Pair(lS(3, 53), new sc_Pair(new sc_Pair(lS(3, 54), new sc_Pair(lS(3, 55), new sc_Pair(new sc_Pair(lS(3, 56), null), null))), new sc_Pair(new sc_Pair(lS(3, 57), new sc_Pair(lS(3, 58), new sc_Pair(1, null))), null))), null))), null))), new sc_Pair(lS(3, 59), new sc_Pair(new sc_Pair(lS(3, 60), new sc_Pair(lS(3, 61), new sc_Pair(lS(3, 62), null))), new sc_Pair(new sc_Pair(lS(3, 63), new sc_Pair(new sc_Pair(lS(3, 64), new sc_Pair(lS(3, 65), new sc_Pair(lS(3, 66), null))), null)), null))), new sc_Pair(lS(3, 67), new sc_Pair(new sc_Pair(lS(3, 68), new sc_Pair(lS(3, 69), new sc_Pair(new sc_Pair(lS(3, 70), new sc_Pair(lS(3, 71), new sc_Pair(lS(3, 72), null))), null))), new sc_Pair(new sc_Pair(lS(3, 73), new sc_Pair(new sc_Pair(lS(3, 74), new sc_Pair(lS(3, 75), new sc_Pair(new sc_Pair(lS(3, 76), null), null))), new sc_Pair(new sc_Pair(lS(3, 77), new sc_Pair(new sc_Pair(lS(3, 78), new sc_Pair(lS(3, 79), null)), new sc_Pair(new sc_Pair(lS(3, 80), new sc_Pair(lS(3, 81), new sc_Pair(1, null))), null))), null))), null))), new sc_Pair(lS(3, 82), new sc_Pair(new sc_Pair(lS(3, 83), new sc_Pair(new sc_Pair(lS(3, 84), new sc_Pair(lS(3, 85), new sc_Pair(lS(3, 86), null))), new sc_Pair(lS(3, 87), null))), new sc_Pair(new sc_Pair(lS(3, 88), null), null))), new sc_Pair(lS(3, 89), new sc_Pair(new sc_Pair(lS(3, 90), new sc_Pair(new sc_Pair(lS(3, 91), new sc_Pair(lS(3, 92), new sc_Pair(lS(3, 93), null))), new sc_Pair(1, null))), new sc_Pair(sc_list(lS(3, 94), new sc_Pair(lS(3, 95), new sc_Pair(new sc_Pair(lS(3, 96), new sc_Pair(lS(3, 97), new sc_Pair(new sc_Pair(lS(3, 98), null), null))), null)), new sc_Pair(lS(3, 99), new sc_Pair(new sc_Pair(lS(3, 100), new sc_Pair(lS(3, 101), new sc_Pair(new sc_Pair(lS(3, 102), null), null))), null)), new sc_Pair(lS(3, 103), new sc_Pair(lS(3, 104), null)), new sc_Pair(lS(3, 105), new sc_Pair(lS(3, 106), null)), new sc_Pair(lS(3, 107), new sc_Pair(new sc_Pair(lS(3, 108), new sc_Pair(lS(3, 109), null)), new sc_Pair(new sc_Pair(lS(3, 110), null), null))), new sc_Pair(lS(3, 111), new sc_Pair(new sc_Pair(lS(3, 112), new sc_Pair(lS(3, 113), null)), new sc_Pair(new sc_Pair(lS(3, 114), null), null)))), null))), new sc_Pair(lS(3, 115), new sc_Pair(new sc_Pair(lS(3, 116), new sc_Pair(new sc_Pair(lS(3, 117), new sc_Pair(new sc_Pair(lS(3, 118), new sc_Pair(lS(3, 119), new sc_Pair(lS(3, 120), null))), null)), new sc_Pair(new sc_Pair(lS(3, 121), new sc_Pair(lS(3, 122), null)), null))), new sc_Pair(new sc_Pair(lS(3, 123), new sc_Pair(lS(3, 124), new sc_Pair(lS(3, 125), null))), null))), new sc_Pair(lS(3, 126), new sc_Pair(new sc_Pair(lS(3, 127), new sc_Pair(new sc_Pair(lS(3, 128), new sc_Pair(lS(3, 129), new sc_Pair(lS(3, 130), null))), null)), new sc_Pair(new sc_Pair(lS(3, 131), new sc_Pair(lS(3, 132), new sc_Pair(new sc_Pair(lS(3, 133), new sc_Pair(lS(3, 134), null)), null))), null))), new sc_Pair(lS(3, 135), new sc_Pair(new sc_Pair(lS(3, 136), new sc_Pair(lS(3, 137), null)), new sc_Pair(new sc_Pair(lS(3, 138), new sc_Pair(lS(3, 139), null)), null))), new sc_Pair(lS(3, 140), new sc_Pair(new sc_Pair(lS(3, 141), new sc_Pair(new sc_Pair(lS(3, 142), new sc_Pair(lS(3, 143), new sc_Pair(new sc_Pair(lS(3, 144), new sc_Pair(lS(3, 145), new sc_Pair(new sc_Pair(lS(3, 146), new sc_Pair(lS(3, 147), new sc_Pair(new sc_Pair(lS(3, 148), new sc_Pair(lS(3, 149), new sc_Pair(new sc_Pair(lS(3, 150), new sc_Pair(lS(3, 151), new sc_Pair(new sc_Pair(lS(3, 152), new sc_Pair(lS(3, 153), new sc_Pair(lS(3, 154), null))), null))), null))), null))), null))), null))), null)), new sc_Pair(new sc_Pair(lS(3, 155), new sc_Pair(6, new sc_Pair(new sc_Pair(lS(3, 156), new sc_Pair(lS(3, 157), null)), null))), null))), new sc_Pair(lS(3, 158), new sc_Pair(new sc_Pair(lS(3, 159), new sc_Pair(new sc_Pair(lS(3, 160), new sc_Pair(new sc_Pair(lS(3, 161), new sc_Pair(lS(3, 162), null)), null)), new sc_Pair(2, null))), new sc_Pair(new sc_Pair(lS(3, 163), new sc_Pair(lS(3, 164), null)), null))), new sc_Pair(lS(3, 165), new sc_Pair(new sc_Pair(lS(3, 166), new sc_Pair(new sc_Pair(lS(3, 167), new sc_Pair(lS(3, 168), new sc_Pair(new sc_Pair(lS(3, 169), new sc_Pair(lS(3, 170), new sc_Pair(lS(3, 171), null))), null))), new sc_Pair(2, null))), new sc_Pair(new sc_Pair(lS(3, 172), new sc_Pair(lS(3, 173), new sc_Pair(new sc_Pair(lS(3, 174), new sc_Pair(lS(3, 175), new sc_Pair(2, null))), null))), null))), new sc_Pair(lS(3, 176), new sc_Pair(new sc_Pair(lS(3, 177), new sc_Pair(new sc_Pair(lS(3, 178), null), new sc_Pair(lS(3, 179), null))), new sc_Pair(new sc_Pair(lS(3, 180), new sc_Pair(new sc_Pair(lS(3, 181), new sc_Pair(lS(3, 182), new sc_Pair(new sc_Pair(lS(3, 183), new sc_Pair(lS(3, 184), null)), null))), new sc_Pair(2, null))), null))), new sc_Pair(lS(3, 185), new sc_Pair(new sc_Pair(lS(3, 186), new sc_Pair(lS(3, 187), new sc_Pair(new sc_Pair(lS(3, 188), new sc_Pair(lS(3, 189), null)), null))), new sc_Pair(new sc_Pair(lS(3, 190), new sc_Pair(new sc_Pair(lS(3, 191), new sc_Pair(lS(3, 192), null)), new sc_Pair(new sc_Pair(lS(3, 193), new sc_Pair(new sc_Pair(lS(3, 194), new sc_Pair(lS(3, 195), new sc_Pair(lS(3, 196), null))), null)), new sc_Pair(new sc_Pair(lS(3, 197), new sc_Pair(lS(3, 198), null)), null)))), null))), new sc_Pair(lS(3, 199), new sc_Pair(new sc_Pair(lS(3, 200), new sc_Pair(new sc_Pair(lS(3, 201), new sc_Pair(lS(3, 202), new sc_Pair(lS(3, 203), null))), new sc_Pair(new sc_Pair(lS(3, 204), new sc_Pair(lS(3, 205), new sc_Pair(lS(3, 206), null))), null))), new sc_Pair(new sc_Pair(lS(3, 207), new sc_Pair(new sc_Pair(lS(3, 208), new sc_Pair(lS(3, 209), new sc_Pair(lS(3, 210), null))), new sc_Pair(new sc_Pair(lS(3, 211), new sc_Pair(new sc_Pair(lS(3, 212), new sc_Pair(lS(3, 213), new sc_Pair(lS(3, 214), null))), null)), new sc_Pair(new sc_Pair(lS(3, 215), new sc_Pair(new sc_Pair(lS(3, 216), new sc_Pair(lS(3, 217), new sc_Pair(lS(3, 218), null))), new sc_Pair(new sc_Pair(lS(3, 219), new sc_Pair(new sc_Pair(lS(3, 220), new sc_Pair(lS(3, 221), new sc_Pair(lS(3, 222), null))), null)), new sc_Pair(new sc_Pair(lS(3, 223), new sc_Pair(new sc_Pair(lS(3, 224), new sc_Pair(lS(3, 225), null)), new sc_Pair(new sc_Pair(lS(3, 226), new sc_Pair(lS(3, 227), null)), null))), null)))), null)))), null))), new sc_Pair(lS(3, 228), new sc_Pair(new sc_Pair(lS(3, 229), new sc_Pair(new sc_Pair(lS(3, 230), new sc_Pair(new sc_Pair(lS(3, 231), new sc_Pair(lS(3, 232), new sc_Pair(lS(3, 233), null))), null)), new sc_Pair(lS(3, 234), null))), new sc_Pair(new sc_Pair(lS(3, 235), new sc_Pair(new sc_Pair(lS(3, 236), new sc_Pair(lS(3, 237), new sc_Pair(lS(3, 238), null))), new sc_Pair(new sc_Pair(lS(3, 239), new sc_Pair(new sc_Pair(lS(3, 240), new sc_Pair(new sc_Pair(lS(3, 241), new sc_Pair(lS(3, 242), null)), new sc_Pair(lS(3, 243), null))), new sc_Pair(new sc_Pair(lS(3, 244), new sc_Pair(lS(3, 245), new sc_Pair(lS(3, 246), null))), null))), new sc_Pair(new sc_Pair(lS(3, 247), new sc_Pair(new sc_Pair(lS(3, 248), new sc_Pair(lS(3, 249), null)), new sc_Pair(lS(3, 250), null))), null)))), null))), new sc_Pair(lS(3, 251), new sc_Pair(new sc_Pair(lS(3, 252), new sc_Pair(lS(3, 253), new sc_Pair(new sc_Pair(lS(3, 254), new sc_Pair(lS(3, 255), null)), null))), new sc_Pair(new sc_Pair(lS(3, 256), new sc_Pair(new sc_Pair(lS(3, 257), new sc_Pair(lS(3, 258), null)), new sc_Pair(new sc_Pair(lS(3, 259), new sc_Pair(lS(3, 260), new sc_Pair(new sc_Pair(lS(3, 261), new sc_Pair(lS(3, 262), new sc_Pair(lS(3, 263), null))), null))), new sc_Pair(new sc_Pair(lS(3, 264), new sc_Pair(lS(3, 265), null)), null)))), null))), new sc_Pair(lS(3, 266), new sc_Pair(new sc_Pair(lS(3, 267), new sc_Pair(new sc_Pair(lS(3, 268), null), new sc_Pair(lS(3, 269), null))), new sc_Pair(new sc_Pair(lS(3, 270), new sc_Pair(new sc_Pair(lS(3, 271), new sc_Pair(lS(3, 272), null)), new sc_Pair(new sc_Pair(lS(3, 273), null), new sc_Pair(new sc_Pair(lS(3, 274), null), null)))), null))), new sc_Pair(lS(3, 275), new sc_Pair(new sc_Pair(lS(3, 276), new sc_Pair(new sc_Pair(lS(3, 277), new sc_Pair(lS(3, 278), new sc_Pair(lS(3, 279), null))), null)), new sc_Pair(new sc_Pair(lS(3, 280), new sc_Pair(new sc_Pair(lS(3, 281), new sc_Pair(lS(3, 282), null)), new sc_Pair(new sc_Pair(lS(3, 283), new sc_Pair(lS(3, 284), null)), new sc_Pair(new sc_Pair(lS(3, 285), new sc_Pair(new sc_Pair(lS(3, 286), new sc_Pair(lS(3, 287), null)), new sc_Pair(new sc_Pair(lS(3, 288), new sc_Pair(new sc_Pair(lS(3, 289), new sc_Pair(new sc_Pair(lS(3, 290), new sc_Pair(lS(3, 291), null)), null)), new sc_Pair(lS(3, 292), null))), new sc_Pair(lS(3, 293), null)))), null)))), null))), new sc_Pair(lS(3, 294), new sc_Pair(new sc_Pair(lS(3, 295), new sc_Pair(new sc_Pair(lS(3, 296), new sc_Pair(lS(3, 297), new sc_Pair(lS(3, 298), null))), new sc_Pair(lS(3, 299), null))), new sc_Pair(new sc_Pair(lS(3, 300), new sc_Pair(new sc_Pair(lS(3, 301), new sc_Pair(lS(3, 302), new sc_Pair(lS(3, 303), null))), new sc_Pair(new sc_Pair(lS(3, 304), new sc_Pair(new sc_Pair(lS(3, 305), null), new sc_Pair(lS(3, 306), null))), new sc_Pair(new sc_Pair(lS(3, 307), new sc_Pair(new sc_Pair(lS(3, 308), null), new sc_Pair(lS(3, 309), null))), null)))), null))), new sc_Pair(lS(3, 310), new sc_Pair(new sc_Pair(lS(3, 311), new sc_Pair(lS(3, 312), new sc_Pair(new sc_Pair(lS(3, 313), new sc_Pair(lS(4, 0), new sc_Pair(lS(4, 1), null))), null))), new sc_Pair(new sc_Pair(lS(4, 2), new sc_Pair(new sc_Pair(lS(4, 3), new sc_Pair(lS(4, 4), new sc_Pair(lS(4, 5), null))), new sc_Pair(new sc_Pair(lS(4, 6), new sc_Pair(lS(4, 7), new sc_Pair(lS(4, 8), null))), new sc_Pair(new sc_Pair(lS(4, 9), new sc_Pair(lS(4, 10), new sc_Pair(lS(4, 11), null))), null)))), null))), new sc_Pair(lS(4, 12), new sc_Pair(new sc_Pair(lS(4, 13), new sc_Pair(new sc_Pair(lS(4, 14), new sc_Pair(lS(4, 15), null)), null)), new sc_Pair(new sc_Pair(lS(4, 16), new sc_Pair(new sc_Pair(lS(4, 17), new sc_Pair(lS(4, 18), null)), new sc_Pair(new sc_Pair(lS(4, 19), new sc_Pair(new sc_Pair(lS(4, 20), new sc_Pair(lS(4, 21), null)), null)), new sc_Pair(new sc_Pair(lS(4, 22), null), null)))), null))), new sc_Pair(lS(4, 23), new sc_Pair(new sc_Pair(lS(4, 24), new sc_Pair(new sc_Pair(lS(4, 25), new sc_Pair(new sc_Pair(lS(4, 26), new sc_Pair(lS(4, 27), null)), null)), null)), new sc_Pair(new sc_Pair(lS(4, 28), new sc_Pair(new sc_Pair(lS(4, 29), new sc_Pair(lS(4, 30), null)), new sc_Pair(new sc_Pair(lS(4, 31), new sc_Pair(new sc_Pair(lS(4, 32), new sc_Pair(lS(4, 33), null)), null)), new sc_Pair(new sc_Pair(lS(4, 34), new sc_Pair(new sc_Pair(lS(4, 35), null), new sc_Pair(new sc_Pair(lS(4, 36), null), null))), null)))), null))), new sc_Pair(lS(4, 37), new sc_Pair(new sc_Pair(lS(4, 38), new sc_Pair(new sc_Pair(lS(4, 39), new sc_Pair(lS(4, 40), new sc_Pair(lS(4, 41), null))), new sc_Pair(lS(4, 42), null))), new sc_Pair(new sc_Pair(lS(4, 43), new sc_Pair(new sc_Pair(lS(4, 44), new sc_Pair(lS(4, 45), null)), new sc_Pair(new sc_Pair(lS(4, 46), null), new sc_Pair(new sc_Pair(lS(4, 47), new sc_Pair(lS(4, 48), null)), null)))), null))), new sc_Pair(lS(4, 49), new sc_Pair(new sc_Pair(lS(4, 50), new sc_Pair(lS(4, 51), new sc_Pair(new sc_Pair(lS(4, 52), new sc_Pair(lS(4, 53), new sc_Pair(lS(4, 54), new sc_Pair(lS(4, 55), null)))), null))), new sc_Pair(new sc_Pair(lS(4, 56), new sc_Pair(new sc_Pair(lS(4, 57), new sc_Pair(lS(4, 58), new sc_Pair(lS(4, 59), null))), new sc_Pair(lS(4, 60), new sc_Pair(new sc_Pair(lS(4, 61), new sc_Pair(lS(4, 62), new sc_Pair(lS(4, 63), null))), null)))), null))));
    const_nboyer = new sc_Pair(new sc_Pair(lS(4, 64), new sc_Pair(lS(4, 65), new sc_Pair(new sc_Pair(lS(4, 66), new sc_Pair(new sc_Pair(lS(4, 67), new sc_Pair(lS(4, 68), new sc_Pair(lS(4, 69), null))), new sc_Pair(new sc_Pair(lS(4, 70), new sc_Pair(lS(4, 71), new sc_Pair(new sc_Pair(lS(4, 72), null), null))), null))), null))), new sc_Pair(new sc_Pair(lS(4, 73), new sc_Pair(lS(4, 74), new sc_Pair(new sc_Pair(lS(4, 75), new sc_Pair(new sc_Pair(lS(4, 76), new sc_Pair(lS(4, 77), new sc_Pair(lS(4, 78), null))), new sc_Pair(new sc_Pair(lS(4, 79), new sc_Pair(lS(4, 80), new sc_Pair(lS(4, 81), null))), null))), null))), new sc_Pair(new sc_Pair(lS(4, 82), new sc_Pair(lS(4, 83), new sc_Pair(new sc_Pair(lS(4, 84), new sc_Pair(new sc_Pair(lS(4, 85), new sc_Pair(new sc_Pair(lS(4, 86), new sc_Pair(lS(4, 87), new sc_Pair(lS(4, 88), null))), new sc_Pair(new sc_Pair(lS(4, 89), null), null))), null)), null))), new sc_Pair(new sc_Pair(lS(4, 90), new sc_Pair(lS(4, 91), new sc_Pair(new sc_Pair(lS(4, 92), new sc_Pair(lS(4, 93), new sc_Pair(lS(4, 94), null))), new sc_Pair(new sc_Pair(lS(4, 95), new sc_Pair(lS(4, 96), new sc_Pair(lS(4, 97), null))), null)))), new sc_Pair(new sc_Pair(lS(4, 98), new sc_Pair(lS(4, 99), new sc_Pair(new sc_Pair(lS(4, 100), new sc_Pair(lS(4, 101), new sc_Pair(lS(4, 102), null))), new sc_Pair(new sc_Pair(lS(4, 103), new sc_Pair(lS(4, 104), new sc_Pair(new sc_Pair(lS(4, 105), new sc_Pair(lS(4, 106), null)), null))), null)))), null)))));
    BgL_nboyerzd2benchmarkzd2 = function () {
        var args = null;
        (() => {
            var sc_tmp = arguments.length - 1;
            const __forInstance36 = new WebAssembly.Instance(__forWasmModule, {
                env: {
                    test: () => {
                        return sc_tmp >= 0 ? 1 : 0;
                    },
                    update: () => {
                        sc_tmp--;
                    },
                    body: () => {
                        {
                            args = sc_cons(arguments[sc_tmp], args);
                        }
                    }
                }
            });
            const __exports = __forInstance36.exports;
            return __exports.data();
        })();
        var n;
        return n = args === null ? 0 : args.car, BgL_setupzd2boyerzd2(), BgL_runzd2benchmarkzd2(lS(4, 107) + sc_number2string(n), 1, function () {
            return BgL_testzd2boyerzd2(n);
        }, function (rewrites) {
            if (sc_isNumber(rewrites))
                switch (n) {
                case 0:
                    return rewrites === 95024;
                    break;
                case 1:
                    return rewrites === 591777;
                    break;
                case 2:
                    return rewrites === 1813975;
                    break;
                case 3:
                    return rewrites === 5375678;
                    break;
                case 4:
                    return rewrites === 16445406;
                    break;
                case 5:
                    return rewrites === 51507739;
                    break;
                default:
                    return true;
                    break;
                }
            else
                return false;
        });
    };
    BgL_setupzd2boyerzd2 = function () {
        return true;
    };
    BgL_testzd2boyerzd2 = function () {
        return true;
    };
    translate_term_nboyer = function (term) {
        var lst;
        return !(term instanceof sc_Pair) ? term : new sc_Pair(BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer(term.car), (lst = term.cdr, lst === null ? null : new sc_Pair(translate_term_nboyer(lst.car), translate_args_nboyer(lst.cdr))));
    };
    translate_args_nboyer = function (lst) {
        var sc_lst_5;
        var term;
        return lst === null ? null : new sc_Pair((term = lst.car, !(term instanceof sc_Pair) ? term : new sc_Pair(BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer(term.car), translate_args_nboyer(term.cdr))), (sc_lst_5 = lst.cdr, sc_lst_5 === null ? null : new sc_Pair(translate_term_nboyer(sc_lst_5.car), translate_args_nboyer(sc_lst_5.cdr))));
    };
    untranslate_term_nboyer = function (term) {
        var optrOpnd;
        var tail1131;
        var L1127;
        var falseHead1130;
        var symbol_record;
        if (!(term instanceof sc_Pair))
            return term;
        else {
            falseHead1130 = new sc_Pair(null, null);
            L1127 = term.cdr;
            tail1131 = falseHead1130;
            (() => {
                const __forInstance63 = new WebAssembly.Instance(__forWasmModule, {
                    env: {
                        test: () => {
                            return !(L1127 === null) ? 1 : 0;
                        },
                        update: () => {
                        },
                        body: () => {
                            {
                                {
                                    tail1131.cdr = new sc_Pair(untranslate_term_nboyer(L1127.car), null);
                                    tail1131 = tail1131.cdr;
                                    L1127 = L1127.cdr;
                                }
                            }
                        }
                    }
                });
                const __exports = __forInstance63.exports;
                return __exports.data();
            })();
            optrOpnd = falseHead1130.cdr;
            return new sc_Pair((symbol_record = term.car, symbol_record[0]), optrOpnd);
        }
    };
    BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer = function (sym) {
        var r;
        var x;
        return x = sc_assq(sym, BgL_sc_za2symbolzd2recordszd2alistza2_2z00_nboyer), x !== false ? x.cdr : (r = [
            sym,
            null
        ], BgL_sc_za2symbolzd2recordszd2alistza2_2z00_nboyer = new sc_Pair(new sc_Pair(sym, r), BgL_sc_za2symbolzd2recordszd2alistza2_2z00_nboyer), r);
    };
    BgL_sc_za2symbolzd2recordszd2alistza2_2z00_nboyer = null;
    translate_alist_nboyer = function (alist) {
        var sc_alist_6;
        var term;
        return alist === null ? null : new sc_Pair(new sc_Pair(alist.car.car, (term = alist.car.cdr, !(term instanceof sc_Pair) ? term : new sc_Pair(BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer(term.car), translate_args_nboyer(term.cdr)))), (sc_alist_6 = alist.cdr, sc_alist_6 === null ? null : new sc_Pair(new sc_Pair(sc_alist_6.car.car, translate_term_nboyer(sc_alist_6.car.cdr)), translate_alist_nboyer(sc_alist_6.cdr))));
    };
    apply_subst_nboyer = function (alist, term) {
        var lst;
        var temp_temp;
        return !(term instanceof sc_Pair) ? (temp_temp = sc_assq(term, alist), temp_temp !== false ? temp_temp.cdr : term) : new sc_Pair(term.car, (lst = term.cdr, lst === null ? null : new sc_Pair(apply_subst_nboyer(alist, lst.car), apply_subst_lst_nboyer(alist, lst.cdr))));
    };
    apply_subst_lst_nboyer = function (alist, lst) {
        var sc_lst_7;
        return lst === null ? null : new sc_Pair(apply_subst_nboyer(alist, lst.car), (sc_lst_7 = lst.cdr, sc_lst_7 === null ? null : new sc_Pair(apply_subst_nboyer(alist, sc_lst_7.car), apply_subst_lst_nboyer(alist, sc_lst_7.cdr))));
    };
    tautologyp_nboyer = function (sc_x_11, true_lst, false_lst) {
        var tmp1125;
        var x;
        var tmp1126;
        var sc_x_8;
        var sc_tmp1125_9;
        var sc_tmp1126_10;
        var sc_x_11;
        var true_lst;
        var false_lst;
        while (true) {
            if ((sc_tmp1126_10 = is_term_equal_nboyer(sc_x_11, true_term_nboyer), sc_tmp1126_10 !== false ? sc_tmp1126_10 : is_term_member_nboyer(sc_x_11, true_lst)) !== false)
                return true;
            else if ((sc_tmp1125_9 = is_term_equal_nboyer(sc_x_11, false_term_nboyer), sc_tmp1125_9 !== false ? sc_tmp1125_9 : is_term_member_nboyer(sc_x_11, false_lst)) !== false)
                return false;
            else if (!(sc_x_11 instanceof sc_Pair))
                return false;
            else if (sc_x_11.car === if_constructor_nboyer)
                if ((sc_x_8 = sc_x_11.cdr.car, tmp1126 = is_term_equal_nboyer(sc_x_8, true_term_nboyer), tmp1126 !== false ? tmp1126 : is_term_member_nboyer(sc_x_8, true_lst)) !== false)
                    sc_x_11 = sc_x_11.cdr.cdr.car;
                else if ((x = sc_x_11.cdr.car, tmp1125 = is_term_equal_nboyer(x, false_term_nboyer), tmp1125 !== false ? tmp1125 : is_term_member_nboyer(x, false_lst)) !== false)
                    sc_x_11 = sc_x_11.cdr.cdr.cdr.car;
                else if (tautologyp_nboyer(sc_x_11.cdr.cdr.car, new sc_Pair(sc_x_11.cdr.car, true_lst), false_lst) !== false) {
                    false_lst = new sc_Pair(sc_x_11.cdr.car, false_lst);
                    sc_x_11 = sc_x_11.cdr.cdr.cdr.car;
                } else
                    return false;
            else
                return false;
        }
    };
    if_constructor_nboyer = lS(4, 108);
    rewrite_count_nboyer = 0;
    rewrite_nboyer = function (term) {
        var term2;
        var sc_term_12;
        var lst;
        var symbol_record;
        var sc_lst_13;
        {
            ++rewrite_count_nboyer;
            if (!(term instanceof sc_Pair))
                return term;
            else {
                sc_term_12 = new sc_Pair(term.car, (sc_lst_13 = term.cdr, sc_lst_13 === null ? null : new sc_Pair(rewrite_nboyer(sc_lst_13.car), rewrite_args_nboyer(sc_lst_13.cdr))));
                lst = (symbol_record = term.car, symbol_record[1]);
                while (true) {
                    if (lst === null)
                        return sc_term_12;
                    else if ((term2 = lst.car.cdr.car, unify_subst_nboyer = null, one_way_unify1_nboyer(sc_term_12, term2)) !== false)
                        return rewrite_nboyer(apply_subst_nboyer(unify_subst_nboyer, lst.car.cdr.cdr.car));
                    else
                        lst = lst.cdr;
                }
            }
        }
    };
    rewrite_args_nboyer = function (lst) {
        var sc_lst_14;
        return lst === null ? null : new sc_Pair(rewrite_nboyer(lst.car), (sc_lst_14 = lst.cdr, sc_lst_14 === null ? null : new sc_Pair(rewrite_nboyer(sc_lst_14.car), rewrite_args_nboyer(sc_lst_14.cdr))));
    };
    unify_subst_nboyer = lS(4, 109);
    one_way_unify1_nboyer = function (term1, term2) {
        var lst1;
        var lst2;
        var temp_temp;
        if (!(term2 instanceof sc_Pair)) {
            temp_temp = sc_assq(term2, unify_subst_nboyer);
            if (temp_temp !== false)
                return is_term_equal_nboyer(term1, temp_temp.cdr);
            else if (sc_isNumber(term2))
                return sc_isEqual(term1, term2);
            else {
                unify_subst_nboyer = new sc_Pair(new sc_Pair(term2, term1), unify_subst_nboyer);
                return true;
            }
        } else if (!(term1 instanceof sc_Pair))
            return false;
        else if (term1.car === term2.car) {
            lst1 = term1.cdr;
            lst2 = term2.cdr;
            while (true) {
                if (lst1 === null)
                    return lst2 === null;
                else if (lst2 === null)
                    return false;
                else if (one_way_unify1_nboyer(lst1.car, lst2.car) !== false) {
                    lst1 = lst1.cdr;
                    lst2 = lst2.cdr;
                } else
                    return false;
            }
        } else
            return false;
    };
    false_term_nboyer = lS(4, 110);
    true_term_nboyer = lS(4, 111);
    trans_of_implies1_nboyer = function (n) {
        var sc_n_15;
        return sc_isEqual(n, 1) ? sc_list(lS(4, 112), 0, 1) : sc_list(lS(4, 113), sc_list(lS(4, 114), n - 1, n), (sc_n_15 = n - 1, sc_isEqual(sc_n_15, 1) ? sc_list(lS(4, 115), 0, 1) : sc_list(lS(4, 116), sc_list(lS(4, 117), sc_n_15 - 1, sc_n_15), trans_of_implies1_nboyer(sc_n_15 - 1))));
    };
    is_term_equal_nboyer = function (x, y) {
        var lst1;
        var lst2;
        var r2;
        var r1;
        if (x instanceof sc_Pair)
            if (y instanceof sc_Pair)
                if ((r1 = x.car, r2 = y.car, r1 === r2) !== false) {
                    lst1 = x.cdr;
                    lst2 = y.cdr;
                    while (true) {
                        if (lst1 === null)
                            return lst2 === null;
                        else if (lst2 === null)
                            return false;
                        else if (is_term_equal_nboyer(lst1.car, lst2.car) !== false) {
                            lst1 = lst1.cdr;
                            lst2 = lst2.cdr;
                        } else
                            return false;
                    }
                } else
                    return false;
            else
                return false;
        else
            return sc_isEqual(x, y);
    };
    is_term_member_nboyer = function (x, lst) {
        var x;
        var lst;
        while (true) {
            if (lst === null)
                return false;
            else if (is_term_equal_nboyer(x, lst.car) !== false)
                return true;
            else
                lst = lst.cdr;
        }
    };
    BgL_setupzd2boyerzd2 = function () {
        var symbol_record;
        var value;
        var BgL_sc_symbolzd2record_16zd2;
        var sym;
        var sc_sym_17;
        var term;
        var lst;
        var sc_term_18;
        var sc_term_19;
        {
            BgL_sc_za2symbolzd2recordszd2alistza2_2z00_nboyer = null;
            if_constructor_nboyer = BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer(lS(4, 118));
            false_term_nboyer = (sc_term_19 = new sc_Pair(lS(4, 119), null), !(sc_term_19 instanceof sc_Pair) ? sc_term_19 : new sc_Pair(BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer(sc_term_19.car), translate_args_nboyer(sc_term_19.cdr)));
            true_term_nboyer = (sc_term_18 = new sc_Pair(lS(4, 120), null), !(sc_term_18 instanceof sc_Pair) ? sc_term_18 : new sc_Pair(BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer(sc_term_18.car), translate_args_nboyer(sc_term_18.cdr)));
            lst = sc_const_3_nboyer;
            (() => {
                const __forInstance64 = new WebAssembly.Instance(__forWasmModule, {
                    env: {
                        test: () => {
                            return !(lst === null) ? 1 : 0;
                        },
                        update: () => {
                        },
                        body: () => {
                            {
                                {
                                    term = lst.car;
                                    (() => {
                                        const __ifInstance62 = new WebAssembly.Instance(__ifWasmModule, {
                                            env: {
                                                impFunc1: () => {
                                                    {
                                                        sc_sym_17 = term.cdr.car.car;
                                                        value = new sc_Pair(!(term instanceof sc_Pair) ? term : new sc_Pair(BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer(term.car), translate_args_nboyer(term.cdr)), (sym = term.cdr.car.car, BgL_sc_symbolzd2record_16zd2 = BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer(sym), BgL_sc_symbolzd2record_16zd2[1]));
                                                        symbol_record = BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer(sc_sym_17);
                                                        symbol_record[1] = value;
                                                    }
                                                },
                                                impFunc2: () => {
                                                    (() => {
                                                        const __callInstance20 = new WebAssembly.Instance(__callWasmModule, {
                                                            env: {
                                                                impFunc: () => {
                                                                    sc_error(lS(4, 122), term);
                                                                }
                                                            }
                                                        });
                                                        const __exports = __callInstance20.exports;
                                                        return __exports.data();
                                                    })();
                                                }
                                            }
                                        });
                                        const __exports = __ifInstance62.exports;
                                        return __exports.data(term instanceof sc_Pair && (term.car === lS(4, 121) && term.cdr.car instanceof sc_Pair) ? 1 : 0);
                                    })();
                                    lst = lst.cdr;
                                }
                            }
                        }
                    }
                });
                const __exports = __forInstance64.exports;
                return __exports.data();
            })();
            return true;
        }
    };
    BgL_testzd2boyerzd2 = function (n) {
        var optrOpnd;
        var term;
        var sc_n_20;
        var answer;
        var sc_term_21;
        var sc_term_22;
        {
            rewrite_count_nboyer = 0;
            term = sc_const_4_nboyer;
            sc_n_20 = n;
            (() => {
                const __forInstance65 = new WebAssembly.Instance(__forWasmModule, {
                    env: {
                        test: () => {
                            return !(sc_n_20 === 0) ? 1 : 0;
                        },
                        update: () => {
                        },
                        body: () => {
                            {
                                {
                                    term = sc_list(lS(4, 123), term, new sc_Pair(lS(4, 124), null));
                                    --sc_n_20;
                                }
                            }
                        }
                    }
                });
                const __exports = __forInstance65.exports;
                return __exports.data();
            })();
            sc_term_22 = term;
            (() => {
                const __ifInstance63 = new WebAssembly.Instance(__ifWasmModule, {
                    env: {
                        impFunc1: () => {
                            optrOpnd = sc_term_22;
                        },
                        impFunc2: () => {
                            optrOpnd = new sc_Pair(BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer(sc_term_22.car), translate_args_nboyer(sc_term_22.cdr));
                        }
                    }
                });
                const __exports = __ifInstance63.exports;
                return __exports.data(!(sc_term_22 instanceof sc_Pair) ? 1 : 0);
            })();
            sc_term_21 = apply_subst_nboyer(const_nboyer === null ? null : new sc_Pair(new sc_Pair(const_nboyer.car.car, translate_term_nboyer(const_nboyer.car.cdr)), translate_alist_nboyer(const_nboyer.cdr)), optrOpnd);
            answer = tautologyp_nboyer(rewrite_nboyer(sc_term_21), null, null);
            (() => {
                const __callInstance19 = new WebAssembly.Instance(__callWasmModule, {
                    env: {
                        impFunc: () => {
                            sc_write(rewrite_count_nboyer);
                        }
                    }
                });
                const __exports = __callInstance19.exports;
                return __exports.data();
            })();
            (() => {
                const __callInstance18 = new WebAssembly.Instance(__callWasmModule, {
                    env: {
                        impFunc: () => {
                            sc_display(lS(4, 125));
                        }
                    }
                });
                const __exports = __callInstance18.exports;
                return __exports.data();
            })();
            (() => {
                const __callInstance17 = new WebAssembly.Instance(__callWasmModule, {
                    env: {
                        impFunc: () => {
                            sc_newline();
                        }
                    }
                });
                const __exports = __callInstance17.exports;
                return __exports.data();
            })();
            if (answer !== false)
                return rewrite_count_nboyer;
            else
                return false;
        }
    };
}
var BgL_parsezd2ze3nbzd2treesze3;
var BgL_earleyzd2benchmarkzd2;
var BgL_parsezd2ze3parsedzf3zc2;
var test;
var BgL_parsezd2ze3treesz31;
var BgL_makezd2parserzd2;
var const_earley;
{
    const_earley = new sc_Pair(new sc_Pair(lS(4, 126), new sc_Pair(new sc_Pair(lS(4, 127), null), new sc_Pair(new sc_Pair(lS(4, 128), new sc_Pair(lS(4, 129), null)), null))), null);
    BgL_makezd2parserzd2 = function (grammar, lexer) {
        var i;
        var parser_descr;
        var def_loop;
        var nb_nts;
        var names;
        var steps;
        var predictors;
        var enders;
        var starters;
        var nts;
        var sc_names_1;
        var sc_steps_2;
        var sc_predictors_3;
        var sc_enders_4;
        var sc_starters_5;
        var nb_confs;
        var BgL_sc_defzd2loop_6zd2;
        var BgL_sc_nbzd2nts_7zd2;
        var sc_nts_8;
        var BgL_sc_defzd2loop_9zd2;
        var ind;
        {
            ind = function (nt, sc_nts_10) {
                var i;
                {
                    i = sc_nts_10.length - 1;
                    while (true) {
                        if (i >= 0)
                            if (sc_isEqual(sc_nts_10[i], nt))
                                return i;
                            else
                                --i;
                        else
                            return false;
                    }
                }
            };
            sc_nts_8 = (BgL_sc_defzd2loop_9zd2 = function (defs, sc_nts_11) {
                var rule_loop;
                var head;
                var def;
                return defs instanceof sc_Pair ? (def = defs.car, head = def.car, rule_loop = function (rules, sc_nts_12) {
                    var nt;
                    var l;
                    var sc_nts_13;
                    var rule;
                    if (rules instanceof sc_Pair) {
                        rule = rules.car;
                        l = rule;
                        sc_nts_13 = sc_nts_12;
                        (() => {
                            const __forInstance66 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return l instanceof sc_Pair ? 1 : 0;
                                    },
                                    update: () => {
                                    },
                                    body: () => {
                                        {
                                            {
                                                nt = l.car;
                                                l = l.cdr;
                                                sc_nts_13 = sc_member(nt, sc_nts_13) !== false ? sc_nts_13 : new sc_Pair(nt, sc_nts_13);
                                            }
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance66.exports;
                            return __exports.data();
                        })();
                        return rule_loop(rules.cdr, sc_nts_13);
                    } else
                        return BgL_sc_defzd2loop_9zd2(defs.cdr, sc_nts_12);
                }, rule_loop(def.cdr, sc_member(head, sc_nts_11) !== false ? sc_nts_11 : new sc_Pair(head, sc_nts_11))) : sc_list2vector(sc_reverse(sc_nts_11));
            }, BgL_sc_defzd2loop_9zd2(grammar, null));
            BgL_sc_nbzd2nts_7zd2 = sc_nts_8.length;
            nb_confs = (BgL_sc_defzd2loop_6zd2 = function (defs, BgL_sc_nbzd2confs_14zd2) {
                var rule_loop;
                var def;
                return defs instanceof sc_Pair ? (def = defs.car, rule_loop = function (rules, BgL_sc_nbzd2confs_15zd2) {
                    var l;
                    var BgL_sc_nbzd2confs_16zd2;
                    var rule;
                    if (rules instanceof sc_Pair) {
                        rule = rules.car;
                        l = rule;
                        BgL_sc_nbzd2confs_16zd2 = BgL_sc_nbzd2confs_15zd2;
                        (() => {
                            const __forInstance67 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return l instanceof sc_Pair ? 1 : 0;
                                    },
                                    update: () => {
                                    },
                                    body: () => {
                                        {
                                            {
                                                l = l.cdr;
                                                ++BgL_sc_nbzd2confs_16zd2;
                                            }
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance67.exports;
                            return __exports.data();
                        })();
                        return rule_loop(rules.cdr, BgL_sc_nbzd2confs_16zd2 + 1);
                    } else
                        return BgL_sc_defzd2loop_6zd2(defs.cdr, BgL_sc_nbzd2confs_15zd2);
                }, rule_loop(def.cdr, BgL_sc_nbzd2confs_14zd2)) : BgL_sc_nbzd2confs_14zd2;
            }, BgL_sc_defzd2loop_6zd2(grammar, 0)) + BgL_sc_nbzd2nts_7zd2;
            sc_starters_5 = sc_makeVector(BgL_sc_nbzd2nts_7zd2, null);
            sc_enders_4 = sc_makeVector(BgL_sc_nbzd2nts_7zd2, null);
            sc_predictors_3 = sc_makeVector(BgL_sc_nbzd2nts_7zd2, null);
            sc_steps_2 = sc_makeVector(nb_confs, false);
            sc_names_1 = sc_makeVector(nb_confs, false);
            nts = sc_nts_8;
            starters = sc_starters_5;
            enders = sc_enders_4;
            predictors = sc_predictors_3;
            steps = sc_steps_2;
            names = sc_names_1;
            nb_nts = sc_nts_8.length;
            i = nb_nts - 1;
            (() => {
                const __forInstance68 = new WebAssembly.Instance(__forWasmModule, {
                    env: {
                        test: () => {
                            return i >= 0 ? 1 : 0;
                        },
                        update: () => {
                        },
                        body: () => {
                            {
                                {
                                    sc_steps_2[i] = i - nb_nts;
                                    sc_names_1[i] = sc_list(sc_nts_8[i], 0);
                                    sc_enders_4[i] = sc_list(i);
                                    --i;
                                }
                            }
                        }
                    }
                });
                const __exports = __forInstance68.exports;
                return __exports.data();
            })();
            def_loop = function (defs, conf) {
                var rule_loop;
                var head;
                var def;
                return defs instanceof sc_Pair ? (def = defs.car, head = def.car, rule_loop = function (rules, conf, rule_num) {
                    var i;
                    var sc_i_17;
                    var nt;
                    var l;
                    var sc_conf_18;
                    var sc_i_19;
                    var rule;
                    if (rules instanceof sc_Pair) {
                        rule = rules.car;
                        names[conf] = sc_list(head, rule_num);
                        sc_i_19 = ind(head, nts);
                        starters[sc_i_19] = new sc_Pair(conf, starters[sc_i_19]);
                        l = rule;
                        sc_conf_18 = conf;
                        (() => {
                            const __forInstance69 = new WebAssembly.Instance(__forWasmModule, {
                                env: {
                                    test: () => {
                                        return l instanceof sc_Pair ? 1 : 0;
                                    },
                                    update: () => {
                                    },
                                    body: () => {
                                        {
                                            {
                                                nt = l.car;
                                                steps[sc_conf_18] = ind(nt, nts);
                                                sc_i_17 = ind(nt, nts);
                                                predictors[sc_i_17] = new sc_Pair(sc_conf_18, predictors[sc_i_17]);
                                                l = l.cdr;
                                                ++sc_conf_18;
                                            }
                                        }
                                    }
                                }
                            });
                            const __exports = __forInstance69.exports;
                            return __exports.data();
                        })();
                        steps[sc_conf_18] = ind(head, nts) - nb_nts;
                        i = ind(head, nts);
                        enders[i] = new sc_Pair(sc_conf_18, enders[i]);
                        return rule_loop(rules.cdr, sc_conf_18 + 1, rule_num + 1);
                    } else
                        return def_loop(defs.cdr, conf);
                }, rule_loop(def.cdr, conf, 1)) : undefined;
            };
            (() => {
                const __callInstance16 = new WebAssembly.Instance(__callWasmModule, {
                    env: {
                        impFunc: () => {
                            def_loop(grammar, sc_nts_8.length);
                        }
                    }
                });
                const __exports = __callInstance16.exports;
                return __exports.data();
            })();
            parser_descr = [
                lexer,
                sc_nts_8,
                sc_starters_5,
                sc_enders_4,
                sc_predictors_3,
                sc_steps_2,
                sc_names_1
            ];
            return function (input) {
                var optrOpnd;
                var sc_optrOpnd_20;
                var sc_optrOpnd_21;
                var sc_optrOpnd_22;
                var loop1;
                var BgL_sc_stateza2_23za2;
                var toks;
                var BgL_sc_nbzd2nts_24zd2;
                var sc_steps_25;
                var sc_enders_26;
                var state_num;
                var BgL_sc_statesza2_27za2;
                var states;
                var i;
                var conf;
                var l;
                var tok_nts;
                var sc_i_28;
                var sc_i_29;
                var l1;
                var l2;
                var tok;
                var tail1129;
                var L1125;
                var goal_enders;
                var BgL_sc_statesza2_30za2;
                var BgL_sc_nbzd2nts_31zd2;
                var BgL_sc_nbzd2confs_32zd2;
                var nb_toks;
                var goal_starters;
                var sc_states_33;
                var BgL_sc_nbzd2confs_34zd2;
                var BgL_sc_nbzd2toks_35zd2;
                var sc_toks_36;
                var falseHead1128;
                var sc_names_37;
                var sc_steps_38;
                var sc_predictors_39;
                var sc_enders_40;
                var sc_starters_41;
                var sc_nts_42;
                var lexer;
                var sc_ind_43;
                var make_states;
                var BgL_sc_confzd2setzd2getza2_44za2;
                var conf_set_merge_new_bang;
                var conf_set_adjoin;
                var BgL_sc_confzd2setzd2adjoinza2_45za2;
                var BgL_sc_confzd2setzd2adjoinza2za2_46z00;
                var conf_set_union;
                var forw;
                var is_parsed;
                var deriv_trees;
                var BgL_sc_derivzd2treesza2_47z70;
                var nb_deriv_trees;
                var BgL_sc_nbzd2derivzd2treesza2_48za2;
                {
                    sc_ind_43 = function (nt, sc_nts_49) {
                        var i;
                        {
                            i = sc_nts_49.length - 1;
                            while (true) {
                                if (i >= 0)
                                    if (sc_isEqual(sc_nts_49[i], nt))
                                        return i;
                                    else
                                        --i;
                                else
                                    return false;
                            }
                        }
                    };
                    make_states = function (BgL_sc_nbzd2toks_50zd2, BgL_sc_nbzd2confs_51zd2) {
                        var v;
                        var i;
                        var sc_states_52;
                        {
                            sc_states_52 = sc_makeVector(BgL_sc_nbzd2toks_50zd2 + 1, false);
                            i = BgL_sc_nbzd2toks_50zd2;
                            (() => {
                                const __forInstance70 = new WebAssembly.Instance(__forWasmModule, {
                                    env: {
                                        test: () => {
                                            return i >= 0 ? 1 : 0;
                                        },
                                        update: () => {
                                        },
                                        body: () => {
                                            {
                                                {
                                                    v = sc_makeVector(BgL_sc_nbzd2confs_51zd2 + 1, false);
                                                    v[0] = -1;
                                                    sc_states_52[i] = v;
                                                    --i;
                                                }
                                            }
                                        }
                                    }
                                });
                                const __exports = __forInstance70.exports;
                                return __exports.data();
                            })();
                            return sc_states_52;
                        }
                    };
                    BgL_sc_confzd2setzd2getza2_44za2 = function (state, BgL_sc_statezd2num_53zd2, sc_conf_54) {
                        var conf_set;
                        var BgL_sc_confzd2set_55zd2;
                        return BgL_sc_confzd2set_55zd2 = state[sc_conf_54 + 1], BgL_sc_confzd2set_55zd2 !== false ? BgL_sc_confzd2set_55zd2 : (conf_set = sc_makeVector(BgL_sc_statezd2num_53zd2 + 6, false), conf_set[1] = -3, conf_set[2] = -1, conf_set[3] = -1, conf_set[4] = -1, state[sc_conf_54 + 1] = conf_set, conf_set);
                    };
                    conf_set_merge_new_bang = function (conf_set) {
                        return conf_set[conf_set[1] + 5] = conf_set[4], conf_set[1] = conf_set[3], conf_set[3] = -1, conf_set[4] = -1;
                    };
                    conf_set_adjoin = function (state, conf_set, sc_conf_56, i) {
                        var tail;
                        return tail = conf_set[3], conf_set[i + 5] = -1, conf_set[tail + 5] = i, conf_set[3] = i, tail < 0 ? (conf_set[0] = state[0], state[0] = sc_conf_56) : undefined;
                    };
                    BgL_sc_confzd2setzd2adjoinza2_45za2 = function (sc_states_57, BgL_sc_statezd2num_58zd2, l, i) {
                        var conf_set;
                        var sc_conf_59;
                        var l1;
                        var state;
                        {
                            state = sc_states_57[BgL_sc_statezd2num_58zd2];
                            l1 = l;
                            (() => {
                                const __forInstance71 = new WebAssembly.Instance(__forWasmModule, {
                                    env: {
                                        test: () => {
                                            return l1 instanceof sc_Pair ? 1 : 0;
                                        },
                                        update: () => {
                                        },
                                        body: () => {
                                            {
                                                {
                                                    sc_conf_59 = l1.car;
                                                    conf_set = BgL_sc_confzd2setzd2getza2_44za2(state, BgL_sc_statezd2num_58zd2, sc_conf_59);
                                                    (() => {
                                                        const __ifInstance64 = new WebAssembly.Instance(__ifWasmModule, {
                                                            env: {
                                                                impFunc1: () => {
                                                                    {
                                                                        (() => {
                                                                            const __callInstance15 = new WebAssembly.Instance(__callWasmModule, {
                                                                                env: {
                                                                                    impFunc: () => {
                                                                                        conf_set_adjoin(state, conf_set, sc_conf_59, i);
                                                                                    }
                                                                                }
                                                                            });
                                                                            const __exports = __callInstance15.exports;
                                                                            return __exports.data();
                                                                        })();
                                                                        l1 = l1.cdr;
                                                                    }
                                                                },
                                                                impFunc2: () => {
                                                                    l1 = l1.cdr;
                                                                }
                                                            }
                                                        });
                                                        const __exports = __ifInstance64.exports;
                                                        return __exports.data(conf_set[i + 5] === false ? 1 : 0);
                                                    })();
                                                }
                                            }
                                        }
                                    }
                                });
                                const __exports = __forInstance71.exports;
                                return __exports.data();
                            })();
                            return undefined;
                        }
                    };
                    BgL_sc_confzd2setzd2adjoinza2za2_46z00 = function (sc_states_60, BgL_sc_statesza2_61za2, BgL_sc_statezd2num_62zd2, sc_conf_63, i) {
                        var BgL_sc_confzd2setza2_64z70;
                        var BgL_sc_stateza2_65za2;
                        var conf_set;
                        var state;
                        return state = sc_states_60[BgL_sc_statezd2num_62zd2], (conf_set = state[sc_conf_63 + 1], conf_set !== false ? conf_set[i + 5] : false) !== false ? (BgL_sc_stateza2_65za2 = BgL_sc_statesza2_61za2[BgL_sc_statezd2num_62zd2], BgL_sc_confzd2setza2_64z70 = BgL_sc_confzd2setzd2getza2_44za2(BgL_sc_stateza2_65za2, BgL_sc_statezd2num_62zd2, sc_conf_63), BgL_sc_confzd2setza2_64z70[i + 5] === false ? conf_set_adjoin(BgL_sc_stateza2_65za2, BgL_sc_confzd2setza2_64z70, sc_conf_63, i) : undefined, true) : false;
                    };
                    conf_set_union = function (state, conf_set, sc_conf_66, other_set) {
                        var i;
                        {
                            i = other_set[2];
                            (() => {
                                const __forInstance72 = new WebAssembly.Instance(__forWasmModule, {
                                    env: {
                                        test: () => {
                                            return i >= 0 ? 1 : 0;
                                        },
                                        update: () => {
                                        },
                                        body: () => {
                                            {
                                                (() => {
                                                    const __ifInstance65 = new WebAssembly.Instance(__ifWasmModule, {
                                                        env: {
                                                            impFunc1: () => {
                                                                {
                                                                    (() => {
                                                                        const __callInstance14 = new WebAssembly.Instance(__callWasmModule, {
                                                                            env: {
                                                                                impFunc: () => {
                                                                                    conf_set_adjoin(state, conf_set, sc_conf_66, i);
                                                                                }
                                                                            }
                                                                        });
                                                                        const __exports = __callInstance14.exports;
                                                                        return __exports.data();
                                                                    })();
                                                                    i = other_set[i + 5];
                                                                }
                                                            },
                                                            impFunc2: () => {
                                                                i = other_set[i + 5];
                                                            }
                                                        }
                                                    });
                                                    const __exports = __ifInstance65.exports;
                                                    return __exports.data(conf_set[i + 5] === false ? 1 : 0);
                                                })();
                                            }
                                        }
                                    }
                                });
                                const __exports = __forInstance72.exports;
                                return __exports.data();
                            })();
                            return undefined;
                        }
                    };
                    forw = function (sc_states_67, BgL_sc_statezd2num_68zd2, sc_starters_69, sc_enders_70, sc_predictors_71, sc_steps_72, sc_nts_73) {
                        var next_set;
                        var next;
                        var conf_set;
                        var ender;
                        var l;
                        var starter_set;
                        var starter;
                        var sc_l_74;
                        var sc_loop1_75;
                        var head;
                        var BgL_sc_confzd2set_76zd2;
                        var BgL_sc_statezd2num_77zd2;
                        var state;
                        var sc_states_78;
                        var preds;
                        var BgL_sc_confzd2set_79zd2;
                        var step;
                        var sc_conf_80;
                        var BgL_sc_nbzd2nts_81zd2;
                        var sc_state_82;
                        {
                            sc_state_82 = sc_states_67[BgL_sc_statezd2num_68zd2];
                            BgL_sc_nbzd2nts_81zd2 = sc_nts_73.length;
                            while (true) {
                                {
                                    sc_conf_80 = sc_state_82[0];
                                    if (sc_conf_80 >= 0) {
                                        step = sc_steps_72[sc_conf_80];
                                        BgL_sc_confzd2set_79zd2 = sc_state_82[sc_conf_80 + 1];
                                        head = BgL_sc_confzd2set_79zd2[4];
                                        sc_state_82[0] = BgL_sc_confzd2set_79zd2[0];
                                        (() => {
                                            const __callInstance13 = new WebAssembly.Instance(__callWasmModule, {
                                                env: {
                                                    impFunc: () => {
                                                        conf_set_merge_new_bang(BgL_sc_confzd2set_79zd2);
                                                    }
                                                }
                                            });
                                            const __exports = __callInstance13.exports;
                                            return __exports.data();
                                        })();
                                        if (step >= 0) {
                                            sc_l_74 = sc_starters_69[step];
                                            (() => {
                                                const __forInstance73 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return sc_l_74 instanceof sc_Pair ? 1 : 0;
                                                        },
                                                        update: () => {
                                                        },
                                                        body: () => {
                                                            {
                                                                {
                                                                    starter = sc_l_74.car;
                                                                    starter_set = BgL_sc_confzd2setzd2getza2_44za2(sc_state_82, BgL_sc_statezd2num_68zd2, starter);
                                                                    (() => {
                                                                        const __ifInstance66 = new WebAssembly.Instance(__ifWasmModule, {
                                                                            env: {
                                                                                impFunc1: () => {
                                                                                    {
                                                                                        (() => {
                                                                                            const __callInstance12 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                env: {
                                                                                                    impFunc: () => {
                                                                                                        conf_set_adjoin(sc_state_82, starter_set, starter, BgL_sc_statezd2num_68zd2);
                                                                                                    }
                                                                                                }
                                                                                            });
                                                                                            const __exports = __callInstance12.exports;
                                                                                            return __exports.data();
                                                                                        })();
                                                                                        sc_l_74 = sc_l_74.cdr;
                                                                                    }
                                                                                },
                                                                                impFunc2: () => {
                                                                                    sc_l_74 = sc_l_74.cdr;
                                                                                }
                                                                            }
                                                                        });
                                                                        const __exports = __ifInstance66.exports;
                                                                        return __exports.data(starter_set[BgL_sc_statezd2num_68zd2 + 5] === false ? 1 : 0);
                                                                    })();
                                                                }
                                                            }
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance73.exports;
                                                return __exports.data();
                                            })();
                                            l = sc_enders_70[step];
                                            (() => {
                                                const __forInstance74 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return l instanceof sc_Pair ? 1 : 0;
                                                        },
                                                        update: () => {
                                                        },
                                                        body: () => {
                                                            {
                                                                {
                                                                    ender = l.car;
                                                                    (() => {
                                                                        const __ifInstance67 = new WebAssembly.Instance(__ifWasmModule, {
                                                                            env: {
                                                                                impFunc1: () => {
                                                                                    {
                                                                                        next = sc_conf_80 + 1;
                                                                                        next_set = BgL_sc_confzd2setzd2getza2_44za2(sc_state_82, BgL_sc_statezd2num_68zd2, next);
                                                                                        (() => {
                                                                                            const __callInstance11 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                env: {
                                                                                                    impFunc: () => {
                                                                                                        conf_set_union(sc_state_82, next_set, next, BgL_sc_confzd2set_79zd2);
                                                                                                    }
                                                                                                }
                                                                                            });
                                                                                            const __exports = __callInstance11.exports;
                                                                                            return __exports.data();
                                                                                        })();
                                                                                        l = l.cdr;
                                                                                    }
                                                                                },
                                                                                impFunc2: () => {
                                                                                    l = l.cdr;
                                                                                }
                                                                            }
                                                                        });
                                                                        const __exports = __ifInstance67.exports;
                                                                        return __exports.data((conf_set = sc_state_82[ender + 1], conf_set !== false ? conf_set[BgL_sc_statezd2num_68zd2 + 5] : false) !== false ? 1 : 0);
                                                                    })();
                                                                }
                                                            }
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance74.exports;
                                                return __exports.data();
                                            })();
                                        } else {
                                            preds = sc_predictors_71[step + BgL_sc_nbzd2nts_81zd2];
                                            sc_states_78 = sc_states_67;
                                            state = sc_state_82;
                                            BgL_sc_statezd2num_77zd2 = BgL_sc_statezd2num_68zd2;
                                            BgL_sc_confzd2set_76zd2 = BgL_sc_confzd2set_79zd2;
                                            sc_loop1_75 = function (l) {
                                                var sc_state_83;
                                                var BgL_sc_nextzd2set_84zd2;
                                                var sc_next_85;
                                                var pred_set;
                                                var i;
                                                var pred;
                                                if (l instanceof sc_Pair) {
                                                    pred = l.car;
                                                    i = head;
                                                    (() => {
                                                        const __forInstance75 = new WebAssembly.Instance(__forWasmModule, {
                                                            env: {
                                                                test: () => {
                                                                    return i >= 0 ? 1 : 0;
                                                                },
                                                                update: () => {
                                                                },
                                                                body: () => {
                                                                    {
                                                                        {
                                                                            pred_set = (sc_state_83 = sc_states_78[i], sc_state_83[pred + 1]);
                                                                            (() => {
                                                                                const __ifInstance68 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                    env: {
                                                                                        impFunc1: () => {
                                                                                            {
                                                                                                sc_next_85 = pred + 1;
                                                                                                BgL_sc_nextzd2set_84zd2 = BgL_sc_confzd2setzd2getza2_44za2(state, BgL_sc_statezd2num_77zd2, sc_next_85);
                                                                                                (() => {
                                                                                                    const __callInstance10 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                        env: {
                                                                                                            impFunc: () => {
                                                                                                                conf_set_union(state, BgL_sc_nextzd2set_84zd2, sc_next_85, pred_set);
                                                                                                            }
                                                                                                        }
                                                                                                    });
                                                                                                    const __exports = __callInstance10.exports;
                                                                                                    return __exports.data();
                                                                                                })();
                                                                                            }
                                                                                        },
                                                                                        impFunc2: () => {
                                                                                        }
                                                                                    }
                                                                                });
                                                                                const __exports = __ifInstance68.exports;
                                                                                return __exports.data(pred_set !== false ? 1 : 0);
                                                                            })();
                                                                            i = BgL_sc_confzd2set_76zd2[i + 5];
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        });
                                                        const __exports = __forInstance75.exports;
                                                        return __exports.data();
                                                    })();
                                                    return sc_loop1_75(l.cdr);
                                                } else
                                                    return undefined;
                                            };
                                            (() => {
                                                const __callInstance9 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            sc_loop1_75(preds);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance9.exports;
                                                return __exports.data();
                                            })();
                                        }
                                    } else
                                        return undefined;
                                }
                            }
                        }
                    };
                    is_parsed = function (nt, i, j, sc_nts_86, sc_enders_87, sc_states_88) {
                        var conf_set;
                        var state;
                        var sc_conf_89;
                        var l;
                        var BgL_sc_ntza2_90za2;
                        {
                            BgL_sc_ntza2_90za2 = sc_ind_43(nt, sc_nts_86);
                            if (BgL_sc_ntza2_90za2 !== false) {
                                sc_nts_86.length;
                                l = sc_enders_87[BgL_sc_ntza2_90za2];
                                while (true) {
                                    if (l instanceof sc_Pair) {
                                        sc_conf_89 = l.car;
                                        if ((state = sc_states_88[j], conf_set = state[sc_conf_89 + 1], conf_set !== false ? conf_set[i + 5] : false) !== false)
                                            return true;
                                        else
                                            l = l.cdr;
                                    } else
                                        return false;
                                }
                            } else
                                return false;
                        }
                    };
                    deriv_trees = function (sc_conf_91, i, j, sc_enders_92, sc_steps_93, sc_names_94, sc_toks_95, sc_states_96, BgL_sc_nbzd2nts_97zd2) {
                        var sc_loop1_98;
                        var prev;
                        var name;
                        return name = sc_names_94[sc_conf_91], name !== false ? sc_conf_91 < BgL_sc_nbzd2nts_97zd2 ? sc_list(sc_list(name, sc_toks_95[i].car)) : sc_list(sc_list(name)) : (prev = sc_conf_91 - 1, sc_loop1_98 = function (l1, l2) {
                            var loop2;
                            var ender_set;
                            var state;
                            var ender;
                            var l1;
                            var l2;
                            while (true) {
                                if (l1 instanceof sc_Pair) {
                                    ender = l1.car;
                                    ender_set = (state = sc_states_96[j], state[ender + 1]);
                                    if (ender_set !== false) {
                                        loop2 = function (k, l2) {
                                            var loop3;
                                            var ender_trees;
                                            var prev_trees;
                                            var conf_set;
                                            var sc_state_99;
                                            var k;
                                            var l2;
                                            while (true) {
                                                if (k >= 0)
                                                    if (k >= i && (sc_state_99 = sc_states_96[k], conf_set = sc_state_99[prev + 1], conf_set !== false ? conf_set[i + 5] : false) !== false) {
                                                        prev_trees = deriv_trees(prev, i, k, sc_enders_92, sc_steps_93, sc_names_94, sc_toks_95, sc_states_96, BgL_sc_nbzd2nts_97zd2);
                                                        ender_trees = deriv_trees(ender, k, j, sc_enders_92, sc_steps_93, sc_names_94, sc_toks_95, sc_states_96, BgL_sc_nbzd2nts_97zd2);
                                                        loop3 = function (l3, l2) {
                                                            var l4;
                                                            var sc_l2_100;
                                                            var ender_tree;
                                                            if (l3 instanceof sc_Pair) {
                                                                ender_tree = sc_list(l3.car);
                                                                l4 = prev_trees;
                                                                sc_l2_100 = l2;
                                                                (() => {
                                                                    const __forInstance76 = new WebAssembly.Instance(__forWasmModule, {
                                                                        env: {
                                                                            test: () => {
                                                                                return l4 instanceof sc_Pair ? 1 : 0;
                                                                            },
                                                                            update: () => {
                                                                            },
                                                                            body: () => {
                                                                                {
                                                                                    {
                                                                                        sc_l2_100 = new sc_Pair(sc_append(l4.car, ender_tree), sc_l2_100);
                                                                                        l4 = l4.cdr;
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    });
                                                                    const __exports = __forInstance76.exports;
                                                                    return __exports.data();
                                                                })();
                                                                return loop3(l3.cdr, sc_l2_100);
                                                            } else
                                                                return loop2(ender_set[k + 5], l2);
                                                        };
                                                        return loop3(ender_trees, l2);
                                                    } else
                                                        k = ender_set[k + 5];
                                                else
                                                    return sc_loop1_98(l1.cdr, l2);
                                            }
                                        };
                                        return loop2(ender_set[2], l2);
                                    } else
                                        l1 = l1.cdr;
                                } else
                                    return l2;
                            }
                        }, sc_loop1_98(sc_enders_92[sc_steps_93[prev]], null));
                    };
                    BgL_sc_derivzd2treesza2_47z70 = function (nt, i, j, sc_nts_101, sc_enders_102, sc_steps_103, sc_names_104, sc_toks_105, sc_states_106) {
                        var conf_set;
                        var state;
                        var sc_conf_107;
                        var l;
                        var trees;
                        var BgL_sc_nbzd2nts_108zd2;
                        var BgL_sc_ntza2_109za2;
                        {
                            BgL_sc_ntza2_109za2 = sc_ind_43(nt, sc_nts_101);
                            if (BgL_sc_ntza2_109za2 !== false) {
                                BgL_sc_nbzd2nts_108zd2 = sc_nts_101.length;
                                l = sc_enders_102[BgL_sc_ntza2_109za2];
                                trees = null;
                                (() => {
                                    const __forInstance77 = new WebAssembly.Instance(__forWasmModule, {
                                        env: {
                                            test: () => {
                                                return l instanceof sc_Pair ? 1 : 0;
                                            },
                                            update: () => {
                                            },
                                            body: () => {
                                                {
                                                    {
                                                        sc_conf_107 = l.car;
                                                        (() => {
                                                            const __ifInstance69 = new WebAssembly.Instance(__ifWasmModule, {
                                                                env: {
                                                                    impFunc1: () => {
                                                                        {
                                                                            l = l.cdr;
                                                                            trees = sc_append(deriv_trees(sc_conf_107, i, j, sc_enders_102, sc_steps_103, sc_names_104, sc_toks_105, sc_states_106, BgL_sc_nbzd2nts_108zd2), trees);
                                                                        }
                                                                    },
                                                                    impFunc2: () => {
                                                                        l = l.cdr;
                                                                    }
                                                                }
                                                            });
                                                            const __exports = __ifInstance69.exports;
                                                            return __exports.data((state = sc_states_106[j], conf_set = state[sc_conf_107 + 1], conf_set !== false ? conf_set[i + 5] : false) !== false ? 1 : 0);
                                                        })();
                                                    }
                                                }
                                            }
                                        }
                                    });
                                    const __exports = __forInstance77.exports;
                                    return __exports.data();
                                })();
                                return trees;
                            } else
                                return false;
                        }
                    };
                    nb_deriv_trees = function (sc_conf_110, i, j, sc_enders_111, sc_steps_112, sc_toks_113, sc_states_114, BgL_sc_nbzd2nts_115zd2) {
                        var sc_loop1_116;
                        var tmp1124;
                        var prev;
                        return prev = sc_conf_110 - 1, (tmp1124 = sc_conf_110 < BgL_sc_nbzd2nts_115zd2, tmp1124 !== false ? tmp1124 : sc_steps_112[prev] < 0) !== false ? 1 : (sc_loop1_116 = function (l, sc_n_118) {
                            var nb_ender_trees;
                            var nb_prev_trees;
                            var conf_set;
                            var state;
                            var k;
                            var n;
                            var ender_set;
                            var sc_state_117;
                            var ender;
                            var l;
                            var sc_n_118;
                            while (true) {
                                if (l instanceof sc_Pair) {
                                    ender = l.car;
                                    ender_set = (sc_state_117 = sc_states_114[j], sc_state_117[ender + 1]);
                                    if (ender_set !== false) {
                                        k = ender_set[2];
                                        n = sc_n_118;
                                        (() => {
                                            const __forInstance78 = new WebAssembly.Instance(__forWasmModule, {
                                                env: {
                                                    test: () => {
                                                        return k >= 0 ? 1 : 0;
                                                    },
                                                    update: () => {
                                                    },
                                                    body: () => {
                                                        {
                                                            (() => {
                                                                const __ifInstance70 = new WebAssembly.Instance(__ifWasmModule, {
                                                                    env: {
                                                                        impFunc1: () => {
                                                                            {
                                                                                nb_prev_trees = nb_deriv_trees(prev, i, k, sc_enders_111, sc_steps_112, sc_toks_113, sc_states_114, BgL_sc_nbzd2nts_115zd2);
                                                                                nb_ender_trees = nb_deriv_trees(ender, k, j, sc_enders_111, sc_steps_112, sc_toks_113, sc_states_114, BgL_sc_nbzd2nts_115zd2);
                                                                                k = ender_set[k + 5];
                                                                                n += nb_prev_trees * nb_ender_trees;
                                                                            }
                                                                        },
                                                                        impFunc2: () => {
                                                                            k = ender_set[k + 5];
                                                                        }
                                                                    }
                                                                });
                                                                const __exports = __ifInstance70.exports;
                                                                return __exports.data(k >= i && (state = sc_states_114[k], conf_set = state[prev + 1], conf_set !== false ? conf_set[i + 5] : false) !== false ? 1 : 0);
                                                            })();
                                                        }
                                                    }
                                                }
                                            });
                                            const __exports = __forInstance78.exports;
                                            return __exports.data();
                                        })();
                                        return sc_loop1_116(l.cdr, n);
                                    } else
                                        l = l.cdr;
                                } else
                                    return sc_n_118;
                            }
                        }, sc_loop1_116(sc_enders_111[sc_steps_112[prev]], 0));
                    };
                    BgL_sc_nbzd2derivzd2treesza2_48za2 = function (nt, i, j, sc_nts_119, sc_enders_120, sc_steps_121, sc_toks_122, sc_states_123) {
                        var conf_set;
                        var state;
                        var sc_conf_124;
                        var l;
                        var nb_trees;
                        var BgL_sc_nbzd2nts_125zd2;
                        var BgL_sc_ntza2_126za2;
                        {
                            BgL_sc_ntza2_126za2 = sc_ind_43(nt, sc_nts_119);
                            if (BgL_sc_ntza2_126za2 !== false) {
                                BgL_sc_nbzd2nts_125zd2 = sc_nts_119.length;
                                l = sc_enders_120[BgL_sc_ntza2_126za2];
                                nb_trees = 0;
                                (() => {
                                    const __forInstance79 = new WebAssembly.Instance(__forWasmModule, {
                                        env: {
                                            test: () => {
                                                return l instanceof sc_Pair ? 1 : 0;
                                            },
                                            update: () => {
                                            },
                                            body: () => {
                                                {
                                                    {
                                                        sc_conf_124 = l.car;
                                                        (() => {
                                                            const __ifInstance71 = new WebAssembly.Instance(__ifWasmModule, {
                                                                env: {
                                                                    impFunc1: () => {
                                                                        {
                                                                            l = l.cdr;
                                                                            nb_trees = nb_deriv_trees(sc_conf_124, i, j, sc_enders_120, sc_steps_121, sc_toks_122, sc_states_123, BgL_sc_nbzd2nts_125zd2) + nb_trees;
                                                                        }
                                                                    },
                                                                    impFunc2: () => {
                                                                        l = l.cdr;
                                                                    }
                                                                }
                                                            });
                                                            const __exports = __ifInstance71.exports;
                                                            return __exports.data((state = sc_states_123[j], conf_set = state[sc_conf_124 + 1], conf_set !== false ? conf_set[i + 5] : false) !== false ? 1 : 0);
                                                        })();
                                                    }
                                                }
                                            }
                                        }
                                    });
                                    const __exports = __forInstance79.exports;
                                    return __exports.data();
                                })();
                                return nb_trees;
                            } else
                                return false;
                        }
                    };
                    lexer = parser_descr[0];
                    sc_nts_42 = parser_descr[1];
                    sc_starters_41 = parser_descr[2];
                    sc_enders_40 = parser_descr[3];
                    sc_predictors_39 = parser_descr[4];
                    sc_steps_38 = parser_descr[5];
                    sc_names_37 = parser_descr[6];
                    falseHead1128 = new sc_Pair(null, null);
                    L1125 = lexer(input);
                    tail1129 = falseHead1128;
                    (() => {
                        const __forInstance80 = new WebAssembly.Instance(__forWasmModule, {
                            env: {
                                test: () => {
                                    return !(L1125 === null) ? 1 : 0;
                                },
                                update: () => {
                                },
                                body: () => {
                                    {
                                        {
                                            tok = L1125.car;
                                            l1 = tok.cdr;
                                            l2 = null;
                                            (() => {
                                                const __forInstance81 = new WebAssembly.Instance(__forWasmModule, {
                                                    env: {
                                                        test: () => {
                                                            return l1 instanceof sc_Pair ? 1 : 0;
                                                        },
                                                        update: () => {
                                                        },
                                                        body: () => {
                                                            {
                                                                {
                                                                    sc_i_29 = sc_ind_43(l1.car, sc_nts_42);
                                                                    (() => {
                                                                        const __ifInstance72 = new WebAssembly.Instance(__ifWasmModule, {
                                                                            env: {
                                                                                impFunc1: () => {
                                                                                    {
                                                                                        l1 = l1.cdr;
                                                                                        l2 = new sc_Pair(sc_i_29, l2);
                                                                                    }
                                                                                },
                                                                                impFunc2: () => {
                                                                                    l1 = l1.cdr;
                                                                                }
                                                                            }
                                                                        });
                                                                        const __exports = __ifInstance72.exports;
                                                                        return __exports.data(sc_i_29 !== false ? 1 : 0);
                                                                    })();
                                                                }
                                                            }
                                                        }
                                                    }
                                                });
                                                const __exports = __forInstance81.exports;
                                                return __exports.data();
                                            })();
                                            sc_optrOpnd_22 = new sc_Pair(tok.car, sc_reverse(l2));
                                            sc_optrOpnd_21 = new sc_Pair(sc_optrOpnd_22, null);
                                            tail1129.cdr = sc_optrOpnd_21;
                                            tail1129 = tail1129.cdr;
                                            L1125 = L1125.cdr;
                                        }
                                    }
                                }
                            }
                        });
                        const __exports = __forInstance80.exports;
                        return __exports.data();
                    })();
                    sc_optrOpnd_20 = falseHead1128.cdr;
                    sc_toks_36 = sc_list2vector(sc_optrOpnd_20);
                    BgL_sc_nbzd2toks_35zd2 = sc_toks_36.length;
                    BgL_sc_nbzd2confs_34zd2 = sc_steps_38.length;
                    sc_states_33 = make_states(BgL_sc_nbzd2toks_35zd2, BgL_sc_nbzd2confs_34zd2);
                    goal_starters = sc_starters_41[0];
                    (() => {
                        const __callInstance8 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    BgL_sc_confzd2setzd2adjoinza2_45za2(sc_states_33, 0, goal_starters, 0);
                                }
                            }
                        });
                        const __exports = __callInstance8.exports;
                        return __exports.data();
                    })();
                    (() => {
                        const __callInstance7 = new WebAssembly.Instance(__callWasmModule, {
                            env: {
                                impFunc: () => {
                                    forw(sc_states_33, 0, sc_starters_41, sc_enders_40, sc_predictors_39, sc_steps_38, sc_nts_42);
                                }
                            }
                        });
                        const __exports = __callInstance7.exports;
                        return __exports.data();
                    })();
                    sc_i_28 = 0;
                    (() => {
                        const __forInstance82 = new WebAssembly.Instance(__forWasmModule, {
                            env: {
                                test: () => {
                                    return sc_i_28 < BgL_sc_nbzd2toks_35zd2 ? 1 : 0;
                                },
                                update: () => {
                                },
                                body: () => {
                                    {
                                        {
                                            tok_nts = sc_toks_36[sc_i_28].cdr;
                                            (() => {
                                                const __callInstance6 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            BgL_sc_confzd2setzd2adjoinza2_45za2(sc_states_33, sc_i_28 + 1, tok_nts, sc_i_28);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance6.exports;
                                                return __exports.data();
                                            })();
                                            (() => {
                                                const __callInstance5 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            forw(sc_states_33, sc_i_28 + 1, sc_starters_41, sc_enders_40, sc_predictors_39, sc_steps_38, sc_nts_42);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance5.exports;
                                                return __exports.data();
                                            })();
                                            ++sc_i_28;
                                        }
                                    }
                                }
                            }
                        });
                        const __exports = __forInstance82.exports;
                        return __exports.data();
                    })();
                    nb_toks = sc_toks_36.length;
                    BgL_sc_nbzd2confs_32zd2 = sc_steps_38.length;
                    BgL_sc_nbzd2nts_31zd2 = sc_nts_42.length;
                    BgL_sc_statesza2_30za2 = make_states(nb_toks, BgL_sc_nbzd2confs_32zd2);
                    goal_enders = sc_enders_40[0];
                    l = goal_enders;
                    (() => {
                        const __forInstance83 = new WebAssembly.Instance(__forWasmModule, {
                            env: {
                                test: () => {
                                    return l instanceof sc_Pair ? 1 : 0;
                                },
                                update: () => {
                                },
                                body: () => {
                                    {
                                        {
                                            conf = l.car;
                                            (() => {
                                                const __callInstance4 = new WebAssembly.Instance(__callWasmModule, {
                                                    env: {
                                                        impFunc: () => {
                                                            BgL_sc_confzd2setzd2adjoinza2za2_46z00(sc_states_33, BgL_sc_statesza2_30za2, nb_toks, conf, 0);
                                                        }
                                                    }
                                                });
                                                const __exports = __callInstance4.exports;
                                                return __exports.data();
                                            })();
                                            l = l.cdr;
                                        }
                                    }
                                }
                            }
                        });
                        const __exports = __forInstance83.exports;
                        return __exports.data();
                    })();
                    i = nb_toks;
                    while (i >= 0) {
                        {
                            states = sc_states_33;
                            BgL_sc_statesza2_27za2 = BgL_sc_statesza2_30za2;
                            state_num = i;
                            sc_enders_26 = sc_enders_40;
                            sc_steps_25 = sc_steps_38;
                            BgL_sc_nbzd2nts_24zd2 = BgL_sc_nbzd2nts_31zd2;
                            toks = sc_toks_36;
                            BgL_sc_stateza2_23za2 = BgL_sc_statesza2_30za2[i];
                            loop1 = function () {
                                var sc_loop1_127;
                                var prev;
                                var BgL_sc_statesza2_128za2;
                                var sc_states_129;
                                var j;
                                var i;
                                var sc_i_130;
                                var head;
                                var conf_set;
                                var sc_conf_131;
                                {
                                    sc_conf_131 = BgL_sc_stateza2_23za2[0];
                                    if (sc_conf_131 >= 0) {
                                        conf_set = BgL_sc_stateza2_23za2[sc_conf_131 + 1];
                                        head = conf_set[4];
                                        BgL_sc_stateza2_23za2[0] = conf_set[0];
                                        (() => {
                                            const __callInstance3 = new WebAssembly.Instance(__callWasmModule, {
                                                env: {
                                                    impFunc: () => {
                                                        conf_set_merge_new_bang(conf_set);
                                                    }
                                                }
                                            });
                                            const __exports = __callInstance3.exports;
                                            return __exports.data();
                                        })();
                                        sc_i_130 = head;
                                        while (sc_i_130 >= 0) {
                                            {
                                                i = sc_i_130;
                                                j = state_num;
                                                sc_states_129 = states;
                                                BgL_sc_statesza2_128za2 = BgL_sc_statesza2_27za2;
                                                prev = sc_conf_131 - 1;
                                                if (sc_conf_131 >= BgL_sc_nbzd2nts_24zd2 && sc_steps_25[prev] >= 0) {
                                                    sc_loop1_127 = function (l) {
                                                        var k;
                                                        var ender_set;
                                                        var state;
                                                        var ender;
                                                        var l;
                                                        while (true) {
                                                            if (l instanceof sc_Pair) {
                                                                ender = l.car;
                                                                ender_set = (state = sc_states_129[j], state[ender + 1]);
                                                                if (ender_set !== false) {
                                                                    k = ender_set[2];
                                                                    (() => {
                                                                        const __forInstance84 = new WebAssembly.Instance(__forWasmModule, {
                                                                            env: {
                                                                                test: () => {
                                                                                    return k >= 0 ? 1 : 0;
                                                                                },
                                                                                update: () => {
                                                                                },
                                                                                body: () => {
                                                                                    {
                                                                                        {
                                                                                            (() => {
                                                                                                const __ifInstance73 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                    env: {
                                                                                                        impFunc1: () => {
                                                                                                            (() => {
                                                                                                                const __ifInstance74 = new WebAssembly.Instance(__ifWasmModule, {
                                                                                                                    env: {
                                                                                                                        impFunc1: () => {
                                                                                                                            (() => {
                                                                                                                                const __callInstance2 = new WebAssembly.Instance(__callWasmModule, {
                                                                                                                                    env: {
                                                                                                                                        impFunc: () => {
                                                                                                                                            BgL_sc_confzd2setzd2adjoinza2za2_46z00(sc_states_129, BgL_sc_statesza2_128za2, j, ender, k);
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                });
                                                                                                                                const __exports = __callInstance2.exports;
                                                                                                                                return __exports.data();
                                                                                                                            })();
                                                                                                                        },
                                                                                                                        impFunc2: () => {
                                                                                                                        }
                                                                                                                    }
                                                                                                                });
                                                                                                                const __exports = __ifInstance74.exports;
                                                                                                                return __exports.data(BgL_sc_confzd2setzd2adjoinza2za2_46z00(sc_states_129, BgL_sc_statesza2_128za2, k, prev, i) !== false ? 1 : 0);
                                                                                                            })();
                                                                                                        },
                                                                                                        impFunc2: () => {
                                                                                                        }
                                                                                                    }
                                                                                                });
                                                                                                const __exports = __ifInstance73.exports;
                                                                                                return __exports.data(k >= i ? 1 : 0);
                                                                                            })();
                                                                                            k = ender_set[k + 5];
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        });
                                                                        const __exports = __forInstance84.exports;
                                                                        return __exports.data();
                                                                    })();
                                                                    return sc_loop1_127(l.cdr);
                                                                } else
                                                                    l = l.cdr;
                                                            } else
                                                                return undefined;
                                                        }
                                                    };
                                                    (() => {
                                                        const __callInstance1 = new WebAssembly.Instance(__callWasmModule, {
                                                            env: {
                                                                impFunc: () => {
                                                                    sc_loop1_127(sc_enders_26[sc_steps_25[prev]]);
                                                                }
                                                            }
                                                        });
                                                        const __exports = __callInstance1.exports;
                                                        return __exports.data();
                                                    })();
                                                }
                                                sc_i_130 = conf_set[sc_i_130 + 5];
                                            }
                                        }
                                        return loop1();
                                    } else
                                        return undefined;
                                }
                            };
                            (() => {
                                const __callInstance0 = new WebAssembly.Instance(__callWasmModule, {
                                    env: {
                                        impFunc: () => {
                                            loop1();
                                        }
                                    }
                                });
                                const __exports = __callInstance0.exports;
                                return __exports.data();
                            })();
                            --i;
                        }
                    }
                    optrOpnd = BgL_sc_statesza2_30za2;
                    return [
                        sc_nts_42,
                        sc_starters_41,
                        sc_enders_40,
                        sc_predictors_39,
                        sc_steps_38,
                        sc_names_37,
                        sc_toks_36,
                        optrOpnd,
                        is_parsed,
                        BgL_sc_derivzd2treesza2_47z70,
                        BgL_sc_nbzd2derivzd2treesza2_48za2
                    ];
                }
            };
        }
    };
    BgL_parsezd2ze3parsedzf3zc2 = function (parse, nt, i, j) {
        var is_parsed;
        var states;
        var enders;
        var nts;
        return nts = parse[0], enders = parse[2], states = parse[7], is_parsed = parse[8], is_parsed(nt, i, j, nts, enders, states);
    };
    BgL_parsezd2ze3treesz31 = function (parse, nt, i, j) {
        var BgL_sc_derivzd2treesza2_132z70;
        var states;
        var toks;
        var names;
        var steps;
        var enders;
        var nts;
        return nts = parse[0], enders = parse[2], steps = parse[4], names = parse[5], toks = parse[6], states = parse[7], BgL_sc_derivzd2treesza2_132z70 = parse[9], BgL_sc_derivzd2treesza2_132z70(nt, i, j, nts, enders, steps, names, toks, states);
    };
    BgL_parsezd2ze3nbzd2treesze3 = function (parse, nt, i, j) {
        var BgL_sc_nbzd2derivzd2treesza2_133za2;
        var states;
        var toks;
        var steps;
        var enders;
        var nts;
        return nts = parse[0], enders = parse[2], steps = parse[4], toks = parse[6], states = parse[7], BgL_sc_nbzd2derivzd2treesza2_133za2 = parse[10], BgL_sc_nbzd2derivzd2treesza2_133za2(nt, i, j, nts, enders, steps, toks, states);
    };
    test = function (k) {
        var x;
        var p;
        return p = BgL_makezd2parserzd2(const_earley, function (l) {
            var sc_x_134;
            var tail1134;
            var L1130;
            var falseHead1133;
            {
                falseHead1133 = new sc_Pair(null, null);
                tail1134 = falseHead1133;
                L1130 = l;
                (() => {
                    const __forInstance85 = new WebAssembly.Instance(__forWasmModule, {
                        env: {
                            test: () => {
                                return !(L1130 === null) ? 1 : 0;
                            },
                            update: () => {
                            },
                            body: () => {
                                {
                                    {
                                        tail1134.cdr = new sc_Pair((sc_x_134 = L1130.car, sc_list(sc_x_134, sc_x_134)), null);
                                        tail1134 = tail1134.cdr;
                                        L1130 = L1130.cdr;
                                    }
                                }
                            }
                        }
                    });
                    const __exports = __forInstance85.exports;
                    return __exports.data();
                })();
                return falseHead1133.cdr;
            }
        }), x = p(sc_vector2list(sc_makeVector(k, lS(4, 130)))), sc_length(BgL_parsezd2ze3treesz31(x, lS(4, 131), 0, k));
    };
    BgL_earleyzd2benchmarkzd2 = function () {
        var args = null;
        (() => {
            var sc_tmp = arguments.length - 1;
            const __forInstance37 = new WebAssembly.Instance(__forWasmModule, {
                env: {
                    test: () => {
                        return sc_tmp >= 0 ? 1 : 0;
                    },
                    update: () => {
                        sc_tmp--;
                    },
                    body: () => {
                        {
                            args = sc_cons(arguments[sc_tmp], args);
                        }
                    }
                }
            });
            const __exports = __forInstance37.exports;
            return __exports.data();
        })();
        var k;
        return k = args === null ? 7 : args.car, BgL_runzd2benchmarkzd2(lS(4, 132), 1, function () {
            return test(k);
        }, function (result) {
            return sc_display(result), sc_newline(), result == 132;
        });
    };
}
SC_DEFAULT_OUT = new sc_GenericOutputPort(function (s) {
});
SC_ERROR_OUT = SC_DEFAULT_OUT;
function RunBenchmark(name, count, run, warn) {
    for (var n = 0; n < count; ++n) {
        result = run();
        if (!warn(result)) {
            throw new Error(lS(4, 133));
        }
    }
}
var BgL_runzd2benchmarkzd2 = RunBenchmark;