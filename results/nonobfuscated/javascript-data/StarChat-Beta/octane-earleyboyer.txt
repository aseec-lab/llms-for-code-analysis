Analyze the following piece of code: 
var EarleyBoyer = new BenchmarkSuite('EarleyBoyer', [666463], [
  new Benchmark("Earley", true,  false, 2500, function () { BgL_earleyzd2benchmarkzd2(); }),
  new Benchmark("Boyer", true, false, 200, function () { BgL_nboyerzd2benchmarkzd2(); })
]);













function sc_print_debug() {
    sc_print.apply(null, arguments);
}

var sc_JS_GLOBALS = this;

var __sc_LINE=-1;
var __sc_FILE="";


function sc_alert() {
   var len = arguments.length;
   var s = "";
   var i;

   for( i = 0; i < len; i++ ) {
       s += sc_toDisplayString(arguments[ i ]);
   }

   return alert( s );
}


function sc_typeof( x ) {
   return typeof x;
}


function sc_error() {
    var a = [sc_jsstring2symbol("*error*")];
    for (var i = 0; i < arguments.length; i++) {
	a[i+1] = arguments[i];
    }
    throw a;
}


function sc_raise(obj) {
    throw obj;
}


function sc_withHandlerLambda(handler, body) {
    try {
	return body();
    } catch(e) {
	if (!e._internalException)
	    return handler(e);
	else
	    throw e;
    }
}

var sc_properties = new Object();


function sc_putpropBang(sym, key, val) {
    var ht = sc_properties[sym];
    if (!ht) {
	ht = new Object();
	sc_properties[sym] = ht;
    }
    ht[key] = val;
}


function sc_getprop(sym, key) {
    var ht = sc_properties[sym];
    if (ht) {
	if (key in ht)
	    return ht[key];
	else
	    return false;
    } else
	return false;
}


function sc_rempropBang(sym, key) {
    var ht = sc_properties[sym];
    if (ht)
	delete ht[key];
}


function sc_any2String(o) {
    return jsstring2string(sc_toDisplayString(o));
}


function sc_isEqv(o1, o2) {
    return (o1 === o2);
}


function sc_isEq(o1, o2) {
    return (o1 === o2);
}


function sc_isNumber(n) {
    return (typeof n === "number");
}


function sc_isComplex(n) {
    return sc_isNumber(n);
}


function sc_isReal(n) {
    return sc_isNumber(n);
}


function sc_isRational(n) {
    return sc_isReal(n);
}


function sc_isInteger(n) {
    return (parseInt(n) === n);
}


function sc_isExact(n) {
    return false;
}


function sc_isInexact(n) {
    return true;
}


function sc_equal(x) {
    for (var i = 1; i < arguments.length; i++)
	if (x!== arguments[i])
	    return false;
    return true;
}


function sc_less(x) {
    for (var i = 1; i < arguments.length; i++) {
	if (x >= arguments[i])
	    return false;
	x = arguments[i];
    }
    return true;
}


function sc_greater(x, y) {
    for (var i = 1; i < arguments.length; i++) {
	if (x <= arguments[i])
	    return false;
	x = arguments[i];
    }
    return true;
}


function sc_lessEqual(x, y) {
    for (var i = 1; i < arguments.length; i++) {
	if (x > arguments[i])
	    return false;
	x = arguments[i];
    }
    return true;
}


function sc_greaterEqual(x, y) {
    for (var i = 1; i < arguments.length; i++) {
	if (x < arguments[i])
	    return false;
	x = arguments[i];
    }
    return true;
}


function sc_max() {
    var m = arguments[0];
    for (var i = 1; i < arguments.length; i++) {
	if (arguments[i] > m)
	    m = arguments[i];
    }
    return m;
}


function sc_min() {
    var m = arguments[0];
    for (var i = 1; i < arguments.length; i++) {
	if (arguments[i] < m)
	    m = arguments[i];
    }
    return m;
}


function sc_abs(n) {
    return Math.abs(n);
}


function sc_acos(n) {
    return Math.acos(n);
}


function sc_asin(n) {
    return Math.asin(n);
}


function sc_atan(n) {
    return Math.atan(n);
}


function sc_atan2(y, x) {
    return Math.atan2(y, x);
}


function sc_cos(n) {
    return Math.cos(n);
}


function sc_cosh(n) {
    return Math.cosh(n);
}


function sc_exp(n) {
    return Math.exp(n);
}


function sc_log(n) {
    return Math.log(n);
}


function sc_sin(n) {
    return Math.sin(n);
}


function sc_sinh(n) {
    return Math.sinh(n);
}


function sc_sqrt(n) {
    return Math.sqrt(n);
}


function sc_tan(n) {
    return Math.tan(n);
}


function sc_tanh(n) {
    return Math.tanh(n);
}


function sc_floor(n) {
    return Math.floor(n);
}


function sc_ceiling(n) {
    return Math.ceil(n);
}


function sc_truncate(n) {
    return n < 0? Math.ceil(n) : Math.floor(n);
}


function sc_round(n) {
    return Math.round(n);
}


function sc_expt(b, e) {
    return Math.pow(b, e);
}


function sc_logand(x, y) {
    return x & y;
}


function sc_logior(x, y) {
    return x | y;
}


function sc_logxor(x, y) {
    return x ^ y;
}


function sc_lognot(x) {
    return ~x;
}


function sc_bitwise-and(x, y) {
    return x & y;
}


function sc_bitwise-ior(x, y) {
    return x | y;
}


function sc_bitwise-xor(x, y) {
    return x ^ y;
}


function sc_bitwise-not(x) {
    return ~x; Analyze the following piece of code: (x, y) {
    for (var i = 1; i < arguments.length; i++) {
	if (x < arguments[i])
	    return false;
	x = arguments[i];
    }
    return true;
}


function sc_isZero(x) {
    return (x === 0);
}


function sc_isPositive(x) {
    return (x > 0);
}


function sc_isNegative(x) {
    return (x < 0);
}


function sc_isOdd(x) {
    return (x % 2 === 1);
}


function sc_isEven(x) {
    return (x % 2 === 0);
}


var sc_max = Math.max;

var sc_min = Math.min;


function sc_plus() {
    var sum = 0;
    for (var i = 0; i < arguments.length; i++)
	sum += arguments[i];
    return sum;
}


function sc_multi() {
    var product = 1;
    for (var i = 0; i < arguments.length; i++)
	product *= arguments[i];
    return product;
}


function sc_minus(x) {
    if (arguments.length === 1)
	return -x;
    else {
	var res = x;
	for (var i = 1; i < arguments.length; i++)
	    res -= arguments[i];
	return res;
    }
}


function sc_div(x) {
    if (arguments.length === 1)
	return 1/x;
    else {
	var res = x;
	for (var i = 1; i < arguments.length; i++)
	    res /= arguments[i];
	return res;
    }
}


var sc_abs = Math.abs;


function sc_quotient(x, y) {
    return parseInt(x / y);
}


function sc_remainder(x, y) {
    return x % y;
}


function sc_modulo(x, y) {
    var remainder = x % y;
        if ((remainder * y) < 0)
	return remainder + y;
    else
	return remainder;
}

function sc_euclid_gcd(a, b) {
    var temp;
    if (a === 0) return b;
    if (b === 0) return a;
    if (a < 0) {a = -a;};
    if (b < 0) {b = -b;};
    if (b > a) {temp = a; a = b; b = temp;};
    while (true) {
	a %= b;
	if(a === 0) {return b;};
	b %= a;
	if(b === 0) {return a;};
    };
    return b;
}


function sc_gcd() {
    var gcd = 0;
    for (var i = 0; i < arguments.length; i++)
	gcd = sc_euclid_gcd(gcd, arguments[i]);
    return gcd;
}


function sc_lcm() {
    var lcm = 1;
    for (var i = 0; i < arguments.length; i++) {
	var f = Math.round(arguments[i] / sc_euclid_gcd(arguments[i], lcm));
	lcm *= Math.abs(f);
    }
    return lcm;
}




var sc_floor = Math.floor;

var sc_ceiling = Math.ceil;

var sc_truncate = parseInt;

var sc_round = Math.round;



var sc_exp = Math.exp;

var sc_log = Math.log;

var sc_sin = Math.sin;

var sc_cos = Math.cos;

var sc_tan = Math.tan;

var sc_asin = Math.asin;

var sc_acos = Math.acos;

var sc_atan = Math.atan;


var sc_sqrt = Math.sqrt;

var sc_expt = Math.pow;



function sc_exact2inexact(x) {
    return x;
}


function sc_inexact2exact(x) {
    return x;
}


function sc_exact_log2(x) {
    return Math.log(x) / Math.LN2;
}


function sc_inexact_log2(x) {
    return Math.log(x) / Math.LN2;
}


function sc_exact_log10(x) {
    return Math.log(x) / Math.LN10;
}


function sc_inexact_log10(x) {
    return Math.log(x) / Math.LN10;
}


function sc_exact_exp2(x) {
    return Math.pow(2, x);
}


function sc_inexact_exp2(x) {
    return Math.pow(2, x);
}


function sc_exact_exp10(x) {
    return Math.pow(10, x);
}


function sc_inexact_exp10(x) {
    return Math.pow(10, x);
}


function sc_sinh(x) {
    return (Math.exp(x) - Math.exp(-x)) / 2;
}


function sc_cosh(x) {
    return (Math.exp(x) + Math.exp(-x)) / 2;
}


function sc_tanh(x) {
    var e2x = Math.exp(2 * x);
    return (e2x - 1) / (e2x + 1);
}


function sc_asinh(x) {
    return Math.log(x + Math.sqrt(x * x + 1));
}


function sc_acosh(x) {
    return Math.log(x + Math.sqrt(x * x - 1));
}


function sc_atanh(x) {
    return 0.5 * Math.log((1 + x) / (1 - x));
}


function sc_log1p(x) {
    return Math.log(1 + x);
}


function sc_expm1(x) {
    return Math.exp(x) - 1;
}


function sc_log10(x) {
    return Math.log(x) / Math.LN10;
}


function sc_sqrt1_2() {
    return 0.70710678118654752440084436210485;
}


function sc_sqrt2() {
    return 1.4142135623730950488016887242097;
}


function sc_sqrt3_2() {
    return 1.7320508075688772935274463415059;
}


function sc_pi() {
    return 3.1415926535897932384626433832795;
}


function sc_e() {
    return 2.7182818284590452353602 Analyze the following piece of code: ;
}

function sc_number2jsstring(x, radix) {
    if (radix)
	return x.toString(radix);
    else
	return x.toString();
}

function sc_jsstring2number(s, radix) {
    if (s === "") return false;

    if (radix) {
	var t = parseInt(s, radix);
	if (!t && t!== 0) return false;
			var allowedChars = "01234567890abcdefghijklmnopqrstuvwxyz".substring(0, radix+1);
	if ((new RegExp("^["+allowedChars+"]*$", "i")).test(s))
	    return t;
	else return false;
    } else {
	var t = +s; 	if (!t && t!== 0) return false;
		var c = s.charAt(0);
		if (+c === 0 && c!== "0") return false;
	return t;
    }
}


function sc_not(b) {
    return b === false;
}


function sc_isBoolean(b) {
    return (b === true) || (b === false);
}

function sc_Pair(car, cdr) {
    this.car = car;
    this.cdr = cdr;
}

sc_Pair.prototype.toString = function() {
    return sc_toDisplayString(this);
};
sc_Pair.prototype.sc_toWriteOrDisplayString = function(writeOrDisplay) {
    var current = this;

    var res = "(";

    while(true) {
	res += writeOrDisplay(current.car);
	if (sc_isPair(current.cdr)) {
	    res += " ";
	    current = current.cdr;
	} else if (current.cdr!== null) {
	    res += ". " + writeOrDisplay(current.cdr);
	    break;
	} else 	    break;
    }
	
    res += ")";

    return res;
};
sc_Pair.prototype.sc_toDisplayString = function() {
    return this.sc_toWriteOrDisplayString(sc_toDisplayString);
};
sc_Pair.prototype.sc_toWriteString = function() {
    return this.sc_toWriteOrDisplayString(sc_toWriteString);
};


function sc_isPair(p) {
    return (p instanceof sc_Pair);
}

function sc_isPairEqual(p1, p2, comp) {
    return (comp(p1.car, p2.car) && comp(p1.cdr, p2.cdr));
}


function sc_cons(car, cdr) {
    return new sc_Pair(car, cdr);
}


function sc_consStar() {
    var res = arguments[arguments.length - 1];
    for (var i = arguments.length-2; i >= 0; i--)
	res = new sc_Pair(arguments[i], res);
    return res;
}


function sc_car(p) {
    return p.car;
}


function sc_cdr(p) {
    return p.cdr;
}


function sc_setCarBang(p, val) {
    p.car = val;
}


function sc_setCdrBang(p, val) {
    p.cdr = val;
}


function sc_caar(p) { return p.car.car; }

function sc_cadr(p) { return p.cdr.car; }

function sc_cdar(p) { return p.car.cdr; }

function sc_cddr(p) { return p.cdr.cdr; }

function sc_caaar(p) { return p.car.car.car; }

function sc_cadar(p) { return p.car.cdr.car; }

function sc_caadr(p) { return p.cdr.car.car; }

function sc_caddr(p) { return p.cdr.cdr.car; }

function sc_cdaar(p) { return p.car.car.cdr; }

function sc_cdadr(p) { return p.cdr.car.cdr; }

function sc_cddar(p) { return p.car.cdr.cdr; }

function sc_cdddr(p) { return p.cdr.cdr.cdr; }

function sc_caaaar(p) { return p.car.car.car.car; }

function sc_caaadr(p) { return p.car.car.car.cdr; }

function sc_caadar(p) { return p.car.car.cdr.car; }

function sc_caaddr(p) { return p.car.car.cdr.cdr; }

function sc_cadaar(p) { return p.car.cdr.car.car; }

function sc_cadadr(p) { return p.car.cdr.car.cdr; }

function sc_caddar(p) { return p.car.cdr.cdr.car; }

function sc_cadddr(p) { return p.car.cdr.cdr.cdr; }

function sc_cdaaar(p) { return p.car.car.cdr.car.car; }

function sc_cdaadr(p) { return p.car.car.cdr.car.cdr; }

function sc_cdadar(p) { return p.car.cdr.car.cdr.car; }

function sc_cdaddr(p) { return p.car.cdr.car.cdr.cdr; }

function sc_cddaar(p) { return p.car.cdr.cdr.car.car; }

function sc_cddadr(p) { return p.car.cdr.cdr.car.cdr; }

function sc_cdddar(p) { return p.car.cdr.cdr.cdr.car; }

function sc_cddddr(p) { return p.car.cdr.cdr.cdr.cdr; }

function sc_make_vector(len, init) {
    var res = [];
    for (var i = 0; i < len; i++)
	res[i] = init;
    return res;
}

function sc_vector_ref(vec, i) {
    return vec[i];
}

function sc_vector_set(vec, i, val) {
    vec[i] = val;
}

function sc_vector_length(vec) {
    return vec.length;
}

function sc_vector_append(vec1, vec2) {
    var res = vec1.slice(0);
    for (var i = 0; i < vec2.length; i++)
	res.push(vec2[i]);
    return res;
}

function sc_vector_copy(vec) {
    return vec.slice(0);
}

function sc_vector_reverse(vec) {
    return vec.reverse();
}

function sc_list_to_vector(lst) {
    var res = [];
    while (lst) {
	res.push(lst.car);
	lst = lst.cdr;
    }
    return res;
}

function sc_vector_to_list(vec) {
    var res = null;
    for (var i = vec.length-1; i >= 0; i--)
	res = new sc_Pair(vec[i], res);
    return res;
}

function sc_string_to_number(s, radix) {
    return parseInt Analyze the following piece of code:  p.cdr.cdr.cdr; }

function sc_caaaar(p) { return p.car.car.car.car; }

function sc_caadar(p) { return p.car.cdr.car.car; }

function sc_caaadr(p) { return p.cdr.car.car.car; }

function sc_caaddr(p) { return p.cdr.cdr.car.car; }

function sc_cdaaar(p) { return p.car.car.car.cdr; }

function sc_cdadar(p) { return p.car.cdr.car.cdr; }

function sc_cdaadr(p) { return p.cdr.car.car.cdr; }

function sc_cdaddr(p) { return p.cdr.cdr.car.cdr; }

function sc_cadaar(p) { return p.car.car.cdr.car; }

function sc_caddar(p) { return p.car.cdr.cdr.car; }

function sc_cadadr(p) { return p.cdr.car.cdr.car; }

function sc_cadddr(p) { return p.cdr.cdr.cdr.car; }

function sc_cddaar(p) { return p.car.car.cdr.cdr; }

function sc_cdddar(p) { return p.car.cdr.cdr.cdr; }

function sc_cddadr(p) { return p.cdr.car.cdr.cdr; }

function sc_cddddr(p) { return p.cdr.cdr.cdr.cdr; }


function sc_lastPair(l) {
    if (!sc_isPair(l)) sc_error("sc_lastPair: pair expected");
    var res = l;
    var cdr = l.cdr;
    while (sc_isPair(cdr)) {
	res = cdr;
	cdr = res.cdr;
    }
    return res;
}


function sc_isNull(o) {
    return (o === null);
}


function sc_isList(o) {
    var rabbit;
    var turtle;

    var rabbit = o;
    var turtle = o;
    while (true) {
	if (rabbit === null ||
	    (rabbit instanceof sc_Pair && rabbit.cdr === null))
	    return true;  	else if ((rabbit instanceof sc_Pair) &&
		 (rabbit.cdr instanceof sc_Pair)) {
	    rabbit = rabbit.cdr.cdr;
	    turtle = turtle.cdr;
	    if (rabbit === turtle) return false; 	} else
	    return false;     }
}


function sc_list() {
    var res = null;
    var a = arguments;
    for (var i = a.length-1; i >= 0; i--)
	res = new sc_Pair(a[i], res);
    return res;
}


function sc_iota(num, init) {
   var res = null;
   if (!init) init = 0;
   for (var i = num - 1; i >= 0; i--)
      res = new sc_Pair(i + init, res);
   return res;
}


function sc_makeList(nbEls, fill) {
    var res = null;
    for (var i = 0; i < nbEls; i++)
	res = new sc_Pair(fill, res);
    return res;
}


function sc_length(l) {
    var res = 0;
    while (l!== null) {
	res++;
	l = l.cdr;
    }
    return res;
}


function sc_remq(o, l) {
    var dummy = { cdr : null };
    var tail = dummy;
    while (l!== null) {
	if (l.car!== o) {
	    tail.cdr = sc_cons(l.car, null);
	    tail = tail.cdr;
	}
	l = l.cdr;
    }
    return dummy.cdr;
}


function sc_remqBang(o, l) {
    var dummy = { cdr : null };
    var tail = dummy;
    var needsAssig = true;
    while (l!== null) {
	if (l.car === o) {
	    needsAssig = true;
	} else {
	    if (needsAssig) {
		tail.cdr = sc_cons(l.car, null);
		tail = tail.cdr;
	    } else {
		tail.cdr = sc_cons(l.car, tail.cdr);
	    }
	}
	l = l.cdr;
    }
    return dummy.cdr;
}


function sc_assq(o, alist) {
    for (var l = alist; l!== null; l = l.cdr) {
	if (l.car.car === o) return l.car;
    }
    return null;
}


function sc_assoc(o, alist) {
    for (var l = alist; l!== null; l = l.cdr) {
	if (l.car.cdr === o) return l.car;
    }
    return null;
}


function sc_memq(o, l) {
    for (var p = l; p!== null; p = p.cdr) {
	if (p.car === o) return true;
    }
    return false;
}


function sc_member(o, l) {
    for (var p = l; p!== null; p = p.cdr) {
	if (p.car === o) return true;
    }
    return false;
}


function sc_assqBang(o, alist) {
    for (var l = alist; l!== null; l = l.cdr) {
	if (l.car.car === o) {
	    l.car.car = o;
	    return l.car;
	}
    }
    alist = sc_cons(sc_list(o, null), alist);
    return alist;
}


function sc_assocBang(o, alist) {
    for (var l = alist; l!== null; l = l.cdr) {
	if (l.car.cdr === o) {
	    l.car.cdr = o;
	    return l.car;
	}
    }
    alist = sc_cons(sc_list(o, null), alist);
    return alist;
}


function sc_append(l1, l2) {
    if (l1 === null) return l2;
    if (l2 === null) return l1;
    l1.cdr = sc_append(l1.cdr, l2.cdr);
    return l1;
}


function sc_reverse(l) {
    var prev = null;
    var curr = l;
    while (curr!== null) {
	var next = curr.cdr;
	curr.cdr = prev;
	prev = curr;
	curr = next;
    }
    return prev;
}


function sc_map(proc, l) {
    var res = null;
    while (l!== null) {
	res = sc_cons(proc(l.car), res);
	l = l.cdr;
    }
    return res;
}


function sc_forList(proc, l) {
    while (l!== null) {
	proc(l.car);
	l = l.cdr;
    }
}


function sc_filter(pred, l) {
    var res = null;
    while (l!== null) {
	if (pred Analyze the following piece of code:  else {
	    if (needsAssig) {
		tail.cdr = l;
		needsAssig = false;
	    }
	    tail = l;
	}
	l = l.cdr;
    }
    tail.cdr = null;
    return dummy.cdr;
}


function sc_delete(o, l) {
    var dummy = { cdr : null };
    var tail = dummy;
    while (l!== null) {
	if (!sc_isEqual(l.car, o)) {
	    tail.cdr = sc_cons(l.car, null);
	    tail = tail.cdr;
	}
	l = l.cdr;
    }
    return dummy.cdr;
}


function sc_deleteBang(o, l) {
    var dummy = { cdr : null };
    var tail = dummy;
    var needsAssig = true;
    while (l!== null) {
	if (sc_isEqual(l.car, o)) {
	    needsAssig = true;
	} else {
	    if (needsAssig) {
		tail.cdr = l;
		needsAssig = false;
	    }
	    tail = l;
	}
	l = l.cdr;
    }
    tail.cdr = null;
    return dummy.cdr;
}

function sc_reverseAppendBang(l1, l2) {
    var res = l2;
    while (l1!== null) {
	var tmp = res;
	res = l1;
	l1 = l1.cdr;
	res.cdr = tmp;
    }
    return res;
}
	
function sc_dualAppend(l1, l2) {
    if (l1 === null) return l2;
    if (l2 === null) return l1;
    var rev = sc_reverse(l1);
    return sc_reverseAppendBang(rev, l2);
}


function sc_append() {
    if (arguments.length === 0)
	return null;
    var res = arguments[arguments.length - 1];
    for (var i = arguments.length - 2; i >= 0; i--)
	res = sc_dualAppend(arguments[i], res);
    return res;
}

function sc_dualAppendBang(l1, l2) {
    if (l1 === null) return l2;
    if (l2 === null) return l1;
    var tmp = l1;
    while (tmp.cdr!== null) tmp=tmp.cdr;
    tmp.cdr = l2;
    return l1;
}


function sc_appendBang() {
    var res = null;
    for (var i = 0; i < arguments.length; i++)
	res = sc_dualAppendBang(res, arguments[i]);
    return res;
}


function sc_reverse(l1) {
    var res = null;
    while (l1!== null) {
	res = sc_cons(l1.car, res);
	l1 = l1.cdr;
    }
    return res;
}


function sc_reverseBang(l) {
    return sc_reverseAppendBang(l, null);
}


function sc_listTail(l, k) {
    var res = l;
    for (var i = 0; i < k; i++) {
	res = res.cdr;
    }
    return res;
}


function sc_listRef(l, k) {
    return sc_listTail(l, k).car;
}





function sc_memq(o, l) {
    while (l!== null) {
	if (l.car === o)
	    return l;
	l = l.cdr;
    }
    return false;
}

function sc_memv(o, l) {
    while (l!== null) {
	if (l.car === o)
	    return l;
	l = l.cdr;
    }
    return false;
}

function sc_member(o, l) {
    while (l!== null) {
	if (sc_isEqual(l.car,o))
	    return l;
	l = l.cdr;
    }
    return false;
}



function sc_assq(o, al) {
    while (al!== null) {
	if (al.car.car === o)
	    return al.car;
	al = al.cdr;
    }
    return false;
}

function sc_assv(o, al) {
    while (al!== null) {
	if (al.car.car === o)
	    return al.car;
	al = al.cdr;
    }
    return false;
}

function sc_assoc(o, al) {
    while (al!== null) {
	if (sc_isEqual(al.car.car,o))
	    return al.car;
	al = al.cdr;
    }
    return false;
}


function sc_listToVector(l) {
    var v = new Array(l.length);
    for (var i = 0; i < l.length; i++)
	v[i] = l[i];
    return v;
}

function sc_vectorToList(v) {
    var l = new Array(v.length);
    for (var i = 0; i < v.length; i++)
	l[i] = v[i];
    return l;
}

function sc_makeVector(n, x) {
    var v = new Array(n);
    for (var i = 0; i < n; i++)
	v[i] = x;
    return v;
}

function sc_listCopy(l) {
    return sc_append(l, null);
}

function sc_vectorCopy(v) {
    return sc_makeVector(v.length, v[0]);
}

function sc_vectorFill(v, x) {
    for (var i = 0; i < v.length; i++)
	v[i] = x;
}

function sc_vectorFillBang(v, x) {
    for (var i = 0; i < v.length; i++)
	v[i] = x;
    return v;
}

function sc_vectorLength(v) {
    return v.length;
}

function sc_vectorRef(v, i) {
    return v[i];
}

function sc_vectorSet(v, i, x) {
    v[i] = x;
}

function sc_listRef(l, i) {
    return l[i];
}

function sc_listSet(l, i, x) {
    l[i] = x;
}

function sc_equalp(x, y) {
    if (x === y)
	return true;
    if (x === null || y === null)
	return false;
    if (typeof x === "object") {
	if (x.constructor!== y.constructor)
	    return false;
	if (x.length!== y.length)
	    return false;
	for (var i = 0; i < x.length; i++) {
	    if (!sc_equalp(x[i], y[i]))
		return false;
	}
	return true;
    }
    return false;
}

function sc_notEqualp(x, y) {
    return!sc_equalp(x, y);
}

function sc_equal(x, y) {
    return sc_equalp(x, y);
}

function sc_notEqual(x, y) {
    return sc_notEqualp(x, y);
 Analyze the following piece of code:  return false;
}

function sc_assv(o, al) {
    while (al!== null) {
	if (al.car.car === o)
	    return al.car;
	al = al.cdr;
    }
    return false;
}

function sc_assoc(o, al) {
    while (al!== null) {
	if (sc_isEqual(al.car.car, o))
	    return al.car;
	al = al.cdr;
    }
    return false;
}


function sc_isCharStringEqual(cs1, cs2) { return cs1.val === cs2.val; }
function sc_isCharStringLess(cs1, cs2) { return cs1.val < cs2.val; }
function sc_isCharStringGreater(cs1, cs2) { return cs1.val > cs2.val; }
function sc_isCharStringLessEqual(cs1, cs2) { return cs1.val <= cs2.val; }
function sc_isCharStringGreaterEqual(cs1, cs2) { return cs1.val >= cs2.val; }
function sc_isCharStringCIEqual(cs1, cs2)
    { return cs1.val.toLowerCase() === cs2.val.toLowerCase(); }
function sc_isCharStringCILess(cs1, cs2)
    { return cs1.val.toLowerCase() < cs2.val.toLowerCase(); }
function sc_isCharStringCIGreater(cs1, cs2)
    { return cs1.val.toLowerCase() > cs2.val.toLowerCase(); }
function sc_isCharStringCILessEqual(cs1, cs2)
    { return cs1.val.toLowerCase() <= cs2.val.toLowerCase(); }
function sc_isCharStringCIGreaterEqual(cs1, cs2)
    { return cs1.val.toLowerCase() >= cs2.val.toLowerCase(); }




function sc_Char(c) {
    var cached = sc_Char.lazy[c];
    if (cached)
	return cached;
    this.val = c;
    sc_Char.lazy[c] = this;
        return undefined;
}
sc_Char.lazy = new Object();
sc_Char.char2readable = {
    "\000": "#\\null",
    "\007": "#\\bell",
    "\010": "#\\backspace",
    "\011": "#\\tab",
    "\012": "#\\newline",
    "\014": "#\\page",
    "\015": "#\\return",
    "\033": "#\\escape",
    "\040": "#\\space",
    "\177": "#\\delete",

  
    "\001": "#\\soh",
    "\002": "#\\stx",
    "\003": "#\\etx",
    "\004": "#\\eot",
    "\005": "#\\enq",
    "\006": "#\\ack",

    "\013": "#\\vt",
    "\016": "#\\so",
    "\017": "#\\si",

    "\020": "#\\dle",
    "\021": "#\\dc1",
    "\022": "#\\dc2",
    "\023": "#\\dc3",
    "\024": "#\\dc4",
    "\025": "#\\nak",
    "\026": "#\\syn",
    "\027": "#\\etb",

    "\030": "#\\can",
    "\031": "#\\em",
    "\032": "#\\sub",
    "\033": "#\\esc",
    "\034": "#\\fs",
    "\035": "#\\gs",
    "\036": "#\\rs",
    "\037": "#\\us"};

sc_Char.readable2char = {
    "null": "\000",
    "bell": "\007",
    "backspace": "\010",
    "tab": "\011",
    "newline": "\012",
    "page": "\014",
    "return": "\015",
    "escape": "\033",
    "space": "\040",
    "delete": "\000",
    "soh": "\001",
    "stx": "\002",
    "etx": "\003",
    "eot": "\004",
    "enq": "\005",
    "ack": "\006",
    "vt": "\013",
    "so": "\016",
    "si": "\017",
    "dle": "\020",
    "dc1": "\021",
    "dc2": "\022",
    "dc3": "\023",
    "dc4": "\024",
    "nak": "\025",
    "syn": "\026",
    "etb": "\027",
    "can": "\030",
    "em": "\031",
    "sub": "\032",
    "esc": "\033",
    "fs": "\034",
    "gs": "\035",
    "rs": "\036",
    "us": "\037"
};

sc_Char.prototype.toString = function() {
    return sc_Char.char2readable[this.val] || "#\\" + this.val;
};

sc_Char.prototype.valueOf = function() {
    return this.val;
};

sc_Char.prototype.charCodeAt = function() {
    return this.val.charCodeAt(0);
};

sc_Char.fromCharCode = function(c) {
    return new sc_Char(String.fromCharCode(c));
};

sc_Char.isSpace = function(c) {
    return c === " " || c === "\t" || c === "\n" || c === "\r";
};

sc_Char.isAlpha = function(c) {
    return (c >= "a" && c <= "z") || (c >= "A" && c <= "Z");
};

sc_Char.isDigit = function(c) {
    return c >= "0" && c <= "9";
};

sc_Char.isAlphaNum = function(c) {
    return sc_Char.isAlpha(c) || sc_Char.isDigit(c);
};

sc_Char.isLower = function(c) {
    return c >= "a" && c <= "z";
};

sc_Char.isUpper = function(c) {
    return c >= "A" && c <= "Z";
};

sc_Char.toLower = function(c) {
    return c >= "A" && c <= "Z"? c.toLowerCase() : c;
};

sc_Char.toUpper = function(c) {
    return c >= "a" && c <= "z"? c.toUpperCase() : c;
};

sc_Char.isPrint = function(c) {
    return c >= " " && c!== "\010";
};

sc_Char.isControl = function(c) {
    return c < " " || c === "\017";
};

sc_Char.isAscii = function(c) {
    return c < "\u0080";
};

sc_Char.isUtf8 = function(c) {
    return c < "\u0800";
};

sc_Char.isUtf16 = function(c) {
    Analyze the following piece of code: 002",
    "etx": "\003",
    "eot": "\004",
    "enq": "\005",
    "ack": "\006",
    "bel": "\007",
    "bs": "\010",
    "ht": "\011",
    "nl": "\012",
    "vt": "\013",
    "np": "\014",
    "cr": "\015",
    "so": "\016",
    "si": "\017",
    "dle": "\020",
    "dc1": "\021",
    "dc2": "\022",
    "dc3": "\023",
    "dc4": "\024",
    "nak": "\025",
    "syn": "\026",
    "etb": "\027",
    "can": "\030",
    "em": "\031",
    "sub": "\032",
    "esc": "\033",
    "fs": "\034",
    "gs": "\035",
    "rs": "\036",
    "us": "\037",
    "sp": "\040",
    "del": "\177"};

sc_Char.prototype.toString = function() {
    return this.val;
};
sc_Char.prototype.sc_toWriteString = function() {
    var entry = sc_Char.char2readable[this.val];
    if (entry)
	return entry;
    else
	return "#\\" + this.val;
};


function sc_isChar(c) {
    return (c instanceof sc_Char);
}


var sc_isCharEqual = sc_isCharStringEqual;

var sc_isCharLess = sc_isCharStringLess;

var sc_isCharGreater = sc_isCharStringGreater;

var sc_isCharLessEqual = sc_isCharStringLessEqual;

var sc_isCharGreaterEqual = sc_isCharStringGreaterEqual;

var sc_isCharCIEqual = sc_isCharStringCIEqual;

var sc_isCharCILess = sc_isCharStringCILess;

var sc_isCharCIGreater = sc_isCharStringCIGreater;

var sc_isCharCILessEqual = sc_isCharStringCILessEqual;

var sc_isCharCIGreaterEqual = sc_isCharStringCIGreaterEqual;

var SC_NUMBER_CLASS = "0123456789";
var SC_WHITESPACE_CLASS ='\r\n\t\f';
var SC_LOWER_CLASS = 'abcdefghijklmnopqrstuvwxyz';
var SC_UPPER_CLASS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';

function sc_isCharOfClass(c, cl) { return (cl.indexOf(c)!= -1); }

function sc_isCharAlphabetic(c)
    { return sc_isCharOfClass(c.val, SC_LOWER_CLASS) ||
	  sc_isCharOfClass(c.val, SC_UPPER_CLASS); }

function sc_isCharNumeric(c)
    { return sc_isCharOfClass(c.val, SC_NUMBER_CLASS); }

function sc_isCharWhitespace(c) {
    var tmp = c.val;
    return tmp === " " || tmp === "\r" || tmp === "\n" || tmp === "\t" || tmp === "\f";
}

function sc_isCharUpperCase(c)
    { return sc_isCharOfClass(c.val, SC_UPPER_CLASS); }

function sc_isCharLowerCase(c)
    { return sc_isCharOfClass(c.val, SC_LOWER_CLASS); }


function sc_char2integer(c)
    { return c.val.charCodeAt(0); }

function sc_integer2char(n)
    { return new sc_Char(String.fromCharCode(n)); }


function sc_charUpcase(c)
    { return new sc_Char(c.val.toUpperCase()); }

function sc_charDowncase(c)
    { return new sc_Char(c.val.toLowerCase()); }

function sc_makeJSStringOfLength(k, c) {
    var s = "";
    for (var i = 0; i < k; i++)
	s += c;
    return s;
}

function sc_makeStringOfLength(k, c) {
    var s = "";
    for (var i = 0; i < k; i++)
	s += c.sc_toWriteString();
    return s;
}

function sc_makeStringOfChar(c, n) {
    var s = "";
    for (var i = 0; i < n; i++)
	s += c.sc_toWriteString();
    return s;
}

function sc_makeString(s) {
    var t = "";
    for (var i = 0; i < s.length; i++)
	t += s.charCodeAt(i);
    return t;
}

function sc_makeStringFromCharCode(c) {
    var t = "";
    for (var i = 1; i < arguments.length; i++)
	t += String.fromCharCode(arguments[i]);
    return t;
}

function sc_makeStringFromInteger(n) {
    var t = "";
    while (n > 0) {
	var r = n % 256;
	t = String.fromCharCode(r) + t;
	n = Math.floor(n / 256);
    }
    return t;
}

function sc_makeStringFromBits(bits) {
    var t = "";
    for (var i = 0; i < bits.length; i++) {
	if (bits[i] === 1)
	    t += "1";
	else
	    t += "0";
    }
    return t;
}

function sc_makeStringFromIntegerArray(arr) {
    var t = "";
    for (var i = 0; i < arr.length; i++)
	t += arr[i];
    return t;
}

function sc_makeStringFromRealArray(arr) {
    var t = "";
    for (var i = 0; i < arr.length; i++)
	t += arr[i].toExponential();
    return t;
}

function sc_makeStringFromBooleanArray(arr) {
    var t = "";
    for (var i = 0; i < arr.length; i++)
	t += arr[i];
    return t;
}

function sc_makeStringFromCharArray(arr) {
    var t = "";
    for (var i = 0; i < arr.length; i++)
	t += arr[i].sc_toWriteString();
    return t;
}

function sc_makeStringFromObject(obj) {
    var t = "";
    for (var i in obj)
	t += obj[i];
    return t;
}

function sc_makeStringFromProcedure(proc) {
    var t = "";
    t += "<procedure>";
    return t;
}

function sc_makeStringFromChannel(chan) {
    var t = "";
    t += "<channel>";
    return t;
}

function sc_makeStringFromPort(port) {
    var t = "";
    t += "<port>";
    return t;
}

function sc_makeStringFromException(ex) {
    var t = "";
    t += "<exception>";
    Analyze the following piece of code: 
    var fill;
    if (c === undefined)
	fill = " ";
    else
	fill = c;
    var res = "";
    var len = 1;
        while (k >= len) {
	if (k & len)
	    res = res.concat(fill);
	fill = fill.concat(fill);
	len *= 2;
    }
    return res;
}

function sc_makejsString(k, c) {
    var fill;
    if (c)
	fill = c.val;
    else
	fill = " ";
    return sc_makeJSStringOfLength(k, fill);
}

function sc_jsstring2list(s) {
    var res = null;
    for (var i = s.length - 1; i >= 0; i--)
	res = sc_cons(new sc_Char(s.charAt(i)), res);
    return res;
}

function sc_list2jsstring(l) {
    var a = new Array();
    while(l!== null) {
	a.push(l.car.val);
	l = l.cdr;
    }
    return "".concat.apply("", a);
}

var sc_Vector = Array;

sc_Vector.prototype.sc_toWriteOrDisplayString = function(writeOrDisplay) {
    if (this.length === 0) return "#()";

    var res = "#(" + writeOrDisplay(this[0]);
    for (var i = 1; i < this.length; i++)
	res += " " + writeOrDisplay(this[i]);
    res += ")";
    return res;
};
sc_Vector.prototype.sc_toDisplayString = function() {
    return this.sc_toWriteOrDisplayString(sc_toDisplayString);
};
sc_Vector.prototype.sc_toWriteString = function() {
    return this.sc_toWriteOrDisplayString(sc_toWriteString);
};


function sc_isVector(v) {
    return (v instanceof sc_Vector);
}

function sc_isVectorEqual(v1, v2, comp) {
    if (v1.length!== v2.length) return false;
    for (var i = 0; i < v1.length; i++)
	if (!comp(v1[i], v2[i])) return false;
    return true;
}


function sc_makeVector(size, fill) {
    var a = new sc_Vector(size);
    if (fill!== undefined)
	sc_vectorFillBang(a, fill);
    return a;
}


function sc_vector() {
    var a = new sc_Vector();
    for (var i = 0; i < arguments.length; i++)
	a.push(arguments[i]);
    return a;
}


function sc_vectorLength(v) {
    return v.length;
}


function sc_vectorRef(v, pos) {
    return v[pos];
}


function sc_vectorSetBang(v, pos, val) {
    v[pos] = val;
}


function sc_vector2list(a) {
    var res = null;
    for (var i = a.length-1; i >= 0; i--)
	res = sc_cons(a[i], res);
    return res;
}


function sc_list2vector(l) {
    var a = new sc_Vector();
    while(l!== null) {
	a.push(l.car);
	l = l.cdr;
    }
    return a;
}


function sc_vectorFillBang(a, fill) {
    for (var i = 0; i < a.length; i++)
	a[i] = fill;
}



function sc_copyVector(a, len) {
    if (len <= a.length)
	return a.slice(0, len);
    else {
	var tmp = a.concat();
	tmp.length = len;
	return tmp;
    }
}


function sc_vectorCopy(a, start, end) {
    return a.slice(start, end);
}


function sc_vectorCopyBang(target, tstart, source, sstart, send) {
    if (!sstart) sstart = 0;
    if (!send) send = source.length;

        if (tstart <= sstart && tstart + send <= sstart) {
	// The whole target is within the source, so we can just copy
	// directly.
	target.set(source.subarray(sstart, send), tstart);
    } else if (tstart >= sstart && tstart + send >= sstart) {
	// The whole target overlaps the source, so we need to shift
	// everything over.
	var len = send - sstart;
	target.set(source.subarray(sstart, sstart + len), tstart);
	target.set(source.subarray(sstart + len, send), tstart + len);
    } else if (tstart < sstart && tstart + send > sstart) {
	// The target overlaps the source on one end, so we need to
	// copy the first part, shift the second part over, and then
	// copy the second part.
	var len1 = sstart - tstart;
	var len2 = send - sstart - len1;
	target.set(source.subarray(sstart, sstart + len1), tstart);
	target.set(source.subarray(sstart + len1, sstart + len2), tstart + len1);
	target.set(source.subarray(sstart + len2, send), tstart + len2);
    } else {
	// The target doesn't overlap the source at all, so we just
	// need to copy the whole thing.
	target.set(source, tstart);
    }
}


function sc_reverseVector(a, start, end) {
    if (!start) start = 0;
    if (!end) end = a.length;
    for (var i = start, j = end - 1; i < j; i++, j--) {
	var tmp = a[i];
	a[i] = a[j];
	a[j] = tmp;
    }
}


function sc_reverseCopyVector(a, start, end) {
    var b = sc_makeVector(end - start);
    sc_reverseVector(b, 0, end - start);
    sc_vectorCopyBang(b, 0, a, start, end);
    return b;
}


function sc_vectorMap(proc, v) {
    var res = new sc_Vector(v.length);
    for (var i = 0; i < v.length; i++)
	res[i] = proc(v[i]);
    return res;
}


function sc_vectorForEach(proc, v) {
    for (var i = 0; i < v.length; i++)
	proc(v[i]);
}


function sc_vectorFold(proc, init, v) {
    var res = init;
    for (var i = 0; i < v.length; i++)
	res = proc(res, v[i]);
    return res;
}


function sc_vectorFilter(pred, v) {
    var res = new sc_Vector();
    for (var i = 0; i < v.length; i++)
	if (pred(v[i]))
	    res.push(v[i]);
    return res;
}


function sc_vectorRemove( Analyze the following piece of code:  sstart) {
	for (var i = tstart, j = sstart; j < send; i++, j++) {
	    target[i] = source[j];
	}
    } else {
	var diff = send - sstart;
	for (var i = tstart + diff - 1, j = send - 1;
	     j >= sstart;
	     i--, j--) {
	    target[i] = source[j];
	}
    }
    return target;
}


function sc_isProcedure(o) {
    return (typeof o === "function");
}


function sc_apply(proc) {
    var args = new Array();
        for (var i = 1; i < arguments.length - 1; i++)
	args.push(arguments[i]);
    var l = arguments[arguments.length - 1];
    while (l!== null) {
	args.push(l.car);
	l = l.cdr;
    }
    return proc.apply(null, args);
}


function sc_map(proc, l1) {
    if (l1 === undefined)
	return null;
        var nbApplyArgs = arguments.length - 1;
    var applyArgs = new Array(nbApplyArgs);
    var revres = null;
    while (l1!== null) {
	for (var i = 0; i < nbApplyArgs; i++) {
	    applyArgs[i] = arguments[i + 1].car;
	    arguments[i + 1] = arguments[i + 1].cdr;
	}
	revres = sc_cons(proc.apply(null, applyArgs), revres);
    }
    return sc_reverseAppendBang(revres, null);
}


function sc_mapBang(proc, l1) {
    if (l1 === undefined)
	return null;
        var l1_orig = l1;
    var nbApplyArgs = arguments.length - 1;
    var applyArgs = new Array(nbApplyArgs);
    while (l1!== null) {
	var tmp = l1;
	for (var i = 0; i < nbApplyArgs; i++) {
	    applyArgs[i] = arguments[i + 1].car;
	    arguments[i + 1] = arguments[i + 1].cdr;
	}
	tmp.car = proc.apply(null, applyArgs);
    }
    return l1_orig;
}


function sc_forEach(proc, l1) {
    if (l1 === undefined)
	return undefined;
        var nbApplyArgs = arguments.length - 1;
    var applyArgs = new Array(nbApplyArgs);
    while (l1!== null) {
	for (var i = 0; i < nbApplyArgs; i++) {
	    applyArgs[i] = arguments[i + 1].car;
	    arguments[i + 1] = arguments[i + 1].cdr;
	}
	proc.apply(null, applyArgs);
    }
        return undefined;
}


function sc_filter(proc, l1) {
    var dummy = { cdr : null };
    var tail = dummy;
    while (l1!== null) {
	if (proc(l1.car)!== false) {
	    tail.cdr = sc_cons(l1.car, null);
	    tail = tail.cdr;
	}
	l1 = l1.cdr;
    }
    return dummy.cdr;
}


function sc_filterBang(proc, l1) {
    var head = sc_cons("dummy", l1);
    var it = head;
    var next = l1;
    while (next!== null) {
        if (proc(next.car)!== false) {
	    it.cdr = next
	    it = next;
	}
	next = next.cdr;
    }
    it.cdr = null;
    return head.cdr;
}

function sc_filterMap1(proc, l1) {
    var revres = null;
    while (l1!== null) {
        var tmp = proc(l1.car)
        if (tmp!== false) revres = sc_cons(tmp, revres);
        l1 = l1.cdr;
    }
    return sc_reverseAppendBang(revres, null);
}
function sc_filterMap2(proc, l1, l2) {
    var revres = null;
    while (l1!== null && l2!== null) {
        var tmp = proc(l1.car, l2.car);
        if (tmp!== false) revres = sc_cons(tmp, revres);
        l1 = l1.cdr;
        l2 = l2.cdr;
    }
    return sc_reverseAppendBang(revres, null);
}
function sc_filterMap3(proc, l1, l2, l3) {
    var revres = null;
    while (l1!== null && l2!== null && l3!== null) {
        var tmp = proc(l1.car, l2.car, l3.car);
        if (tmp!== false) revres = sc_cons(tmp, revres);
        l1 = l1.cdr;
        l2 = l2.cdr;
        l3 = l3.cdr;
    }
    return sc_reverseAppendBang(revres, null);
}
function sc_filterMap4(proc, l1, l2, l3, l4) {
    var revres = null;
    while (l1!== null && l2!== null && l3!== null && l4!== null) {
        var tmp = proc(l1.car, l2.car, l3.car, l4.car);
        if (tmp!== false) revres = sc_cons(tmp, revres);
        l1 = l1.cdr;
        l2 = l2.cdr;
        l3 = l3.cdr;
        l4 = l4.cdr;
    }
    return sc_reverseAppendBang(revres, null);
}
function sc_filterMap5(proc, l1, l2, l3, l4, l5) {
    var revres = null;
    while (l1!== null && l2!== null && l3!== null && l4!== null && l5!== null) {
        var tmp = proc(l1.car, l2.car, l3.car, l4.car, l5.car);
        if (tmp!== false) revres = sc_cons(tmp, revres);
        l1 = l1.cdr;
        l2 = l2.cdr;
        l3 = l3.cdr;
        l4 = l4.cdr;
        l5 = l5.cdr;
    }
    return sc_reverseAppendBang(revres, null);
}
function sc_filterMap6(proc, l1, l2, l3, l4, l5, l6) {
    var revres = null;
    while (l1!== null && l2!== null && l3!== null && l4!== null && l5!== null && l6!== null) {
        var tmp = proc(l1.car, l2.car, l3.car, l4.car, l5.car, l6.car);
        if (tmp!== false) revres = sc_cons(tmp, revres);
        l1 = l1.cdr;
        l2 = l2.cdr;
        l3 = l3.cdr;
        l4 = l4.cdr;
        l5 = l5.cdr;
        l6 = l6.cdr;
    }
    return sc_reverseAppendBang(revres, null);
}
function sc_filterMap7(proc, l1, l Analyze the following piece of code: 
    while (l1!== null) {
        var tmp = proc(l1.car, l2.car);
        if(tmp!== false) revres = sc_cons(tmp, revres);
	l1 = l1.cdr;
	l2 = l2.cdr
    }
    return sc_reverseAppendBang(revres, null);
}


function sc_filterMap(proc, l1, l2, l3) {
    if (l2 === undefined)
	return sc_filterMap1(proc, l1);
    else if (l3 === undefined)
	return sc_filterMap2(proc, l1, l2);
        var nbApplyArgs = arguments.length - 1;
    var applyArgs = new Array(nbApplyArgs);
    var revres = null;
    while (l1!== null) {
	for (var i = 0; i < nbApplyArgs; i++) {
	    applyArgs[i] = arguments[i + 1].car;
	    arguments[i + 1] = arguments[i + 1].cdr;
	}
	var tmp = proc.apply(null, applyArgs);
	if(tmp!== false) revres = sc_cons(tmp, revres);
    }
    return sc_reverseAppendBang(revres, null);
}


function sc_any(proc, l) {
    var revres = null;
    while (l!== null) {
        var tmp = proc(l.car);
        if(tmp!== false) return tmp;
	l = l.cdr;
    }
    return false;
}


function sc_anyPred(proc, l) {
    return sc_any(proc, l)!== false;
}


function sc_every(proc, l) {
    var revres = null;
    var tmp = true;
    while (l!== null) {
        tmp = proc(l.car);
        if (tmp === false) return false;
	l = l.cdr;
    }
    return tmp;
}


function sc_everyPred(proc, l) {
    var tmp = sc_every(proc, l);
    if (tmp!== false) return true;
    return false;
}


function sc_force(o) {
    return o();
}


function sc_makePromise(proc) {
    var isResultReady = false;
    var result = undefined;
    return function() {
	if (!isResultReady) {
	    var tmp = proc();
	    if (!isResultReady) {
		isResultReady = true;
		result = tmp;
	    }
	}
	return result;
    };
}

function sc_Values(values) {
    this.values = values;
}


function sc_values() {
    if (arguments.length === 1)
	return arguments[0];
    else
	return new sc_Values(arguments);
}


function sc_callWithValues(producer, consumer) {
    var produced = producer();
    if (produced instanceof sc_Values)
	return consumer.apply(null, produced.values);
    else
	return consumer(produced);
}


function sc_dynamicWind(before, thunk, after) {
    before();
    try {
	var res = thunk();
	return res;
    } finally {
	after();
    }
}





function sc_Struct(name) {
    this.name = name;
}
sc_Struct.prototype.sc_toDisplayString = function() {
    return "#<struct" + sc_hash(this) + ">";
};
sc_Struct.prototype.sc_toWriteString = sc_Struct.prototype.sc_toDisplayString;


function sc_makeStruct(name) {
    return new sc_Struct(name);
}


function sc_isStruct(o) {
    return (o instanceof sc_Struct);
}


function sc_isStructNamed(name, s) {
    return ((s instanceof sc_Struct) && (s.name === name));
}


function sc_getStructField(s, name, field) {
    return s[field];
}


function sc_setStructFieldBang(s, name, field, val) {
    s[field] = val;
}


function sc_bitNot(x) {
    return ~x;
}


function sc_bitAnd(x, y) {
    return x & y;
}


function sc_bitOr(x, y) {
    return x | y;
}


function sc_bitXor(x, y) {
    return x ^ y;
}


function sc_bitShiftLeft(x, y) {
    return x << y;
}


function sc_bitShiftRight(x, y) {
    return x >> y;
}


function sc_bitShiftRightZeroFill(x, y) {
    return x >>> y;
}


function sc_charToInteger(c) {
    return c.charCodeAt(0);
}


function sc_integerToChar(i) {
    return String.fromCharCode(i);
}


function sc_stringToInteger(s) {
    return parseInt(s, 10);
}


function sc_integerToString(n) {
    return n.toString();
}


function sc_stringLength(s) {
    return s.length;
}


function sc_substring(s, start, end) {
    return s.substring(start, end);
}


function sc_stringRef(s, i) {
    return s.charAt(i);
}


function sc_stringSet(s, start, end, c) {
    return s.substring(0, start) + c + s.substring(end);
}


function sc_stringAppend(s1, s2) {
    return s1 + s2;
}


function sc_stringAppendChar(s, c) {
    return s + c;
}


function sc_stringCompare(s1, s2) {
    return s1.localeCompare(s2);
}


function sc_stringUpcase(s) {
    return s.toUpperCase();
}


function sc_stringDowncase(s) {
    return s.toLowerCase();
}


function sc_stringMap(proc, s) {
    var res = "";
    for (var i = 0; i < s.length; i++)
	res = res + proc(s.charAt(i));
    return res;
}


function sc_stringForall(proc, s) {
    for (var i = 0; i < s.length; i++)
	if (!proc(s.charAt(i)))
	    return false;
    return true;
}


function sc_stringExists(proc, s) {
    for (var i = 0; i < s.length; i++)
	if (proc(s.charAt(i)))
	    return true;
    return false;
}


function sc_stringFilter(proc, s) {
    var res = "";
    for (var i = 0; i < s.length; i++)
	if (proc(s.charAt(i)))
	    res = res + s.charAt(i);
    return res;
}


function sc_stringSplit(s, sep) {
    return s.split(sep);
}


function sc_stringJoin(ss, sep) {
    return ss.join(sep);
}


function sc_stringReverse(s) {
    return s.split("").reverse().join("");
}


function sc_stringMapReverse(proc, s) {
    return sc_stringReverse(sc_stringMap(proc, s));
}


function sc_list Analyze the following piece of code: 
function sc_bitOr(x, y) {
    return x | y;
}


function sc_bitXor(x, y) {
    return x ^ y;
}


function sc_bitLsh(x, y) {
    return x << y;
}


function sc_bitRsh(x, y) {
    return x >> y;
}


function sc_bitUrsh(x, y) {
    return x >>> y;
}


function sc_jsField(o, field) {
    return o[field];
}


function sc_setJsFieldBang(o, field, val) {
    return o[field] = val;
}


function sc_deleteJsFieldBang(o, field) {
    delete o[field];
}


function sc_jsCall(o, fun) {
    var args = new Array();
    for (var i = 2; i < arguments.length; i++)
	args[i-2] = arguments[i];
    return fun.apply(o, args);
}


function sc_jsMethodCall(o, field) {
    var args = new Array();
    for (var i = 2; i < arguments.length; i++)
	args[i-2] = arguments[i];
    return o[field].apply(o, args);
}


function sc_jsNew(c) {
    var evalStr = "new c(";
    evalStr +=arguments.length > 1? "arguments[1]": "";
    for (var i = 2; i < arguments.length; i++)
	evalStr += ", arguments[" + i + "]";
    evalStr +=")";
    return eval(evalStr);
}


function sc_pregexp(re) {
    return new RegExp(sc_string2jsstring(re));
}


function sc_pregexpMatch(re, s) {
    var reg = (re instanceof RegExp)? re : sc_pregexp(re);
    var tmp = reg.exec(sc_string2jsstring(s));

    if (tmp == null) return false;

    var res = null;
    for (var i = tmp.length-1; i >= 0; i--) {
	if (tmp[i]!== null) {
	    res = sc_cons(sc_jsstring2string(tmp[i]), res);
	} else {
	    res = sc_cons(false, res);
	}
    }
    return res;
}


function sc_pregexpReplace(re, s1, s2) {
   var reg;
   var jss1 = sc_string2jsstring(s1);
   var jss2 = sc_string2jsstring(s2);

   if (re instanceof RegExp) {
       if (re.global)
	   reg = re;
       else
	   reg = new RegExp(re.source);
   } else {
       reg = new RegExp(sc_string2jsstring(re));
   }

   return jss1.replace(reg, jss2);
}


function sc_pregexpReplaceAll(re, s1, s2) {
   var reg;
   var jss1 = sc_string2jsstring(s1);
   var jss2 = sc_string2jsstring(s2);

   if (re instanceof RegExp) {
      if (re.global)
	  reg = re;
      else
	  reg = new RegExp(re.source, "g");
   } else {
       reg = new RegExp(sc_string2jsstring(re), "g");
   }

   return jss1.replace(reg, jss2);
}


function sc_pregexpSplit(re, s) {
   var reg = ((re instanceof RegExp)?
	      re :
	      new RegExp(sc_string2jsstring(re)));
   var jss = sc_string2jsstring(s);
   var tmp = jss.split(reg);

   if (tmp == null) return false;

   return sc_vector2list(tmp);
}







function sc_random(n) {
    return Math.floor(Math.random()*n);
}


function sc_currentDate() {
   return new Date();
}

function sc_Hashtable() {
}
sc_Hashtable.prototype.toString = function() {
    return "#{%hashtable}";
};

function sc_HashtableElement(key, val) {
    this.key = key;
    this.val = val;
}

sc_Hashtable.prototype.put = function(key, val) {
    var idx = this.hash(key);
    var list = this.table[idx];
    if (list === undefined) {
	this.table[idx] = new Array(new sc_HashtableElement(key, val));
    } else {
	var found = false;
	for (var i = 0; i < list.length; i++) {
	    if (list[i].key === key) {
		list[i].val = val;
		found = true;
		break;
	    }
	}
	if (!found) {
	    list.push(new sc_HashtableElement(key, val));
	}
    }
};

sc_Hashtable.prototype.get = function(key) {
    var idx = this.hash(key);
    var list = this.table[idx];
    if (list === undefined) {
	return undefined;
    } else {
	for (var i = 0; i < list.length; i++) {
	    if (list[i].key === key) {
		return list[i].val;
	    }
	}
	return undefined;
    }
};

sc_Hashtable.prototype.remove = function(key) {
    var idx = this.hash(key);
    var list = this.table[idx];
    if (list === undefined) {
	return undefined;
    } else {
	for (var i = 0; i < list.length; i++) {
	    if (list[i].key === key) {
		var res = list[i].val;
		list.splice(i, 1);
		if (list.length === 0) {
		    delete this.table[idx];
		}
		return res;
	    }
	}
	return undefined;
    }
};

sc_Hashtable.prototype.containsKey = function(key) {
    var idx = this.hash(key);
    var list = this.table[idx];
    if (list === undefined) {
	return false;
    } else {
	for (var i = 0; i < list.length; i++) {
	    if (list[i].key === key) {
		return true;
	    }
	}
	return false;
    }
};

sc_Hashtable.prototype.size = function() {
    var res = 0;
    for (var i in this.table) {
	res += this.table[i].length;
    }
    return res;
};

sc_Hashtable.prototype.clear = function() {
    this.table = new Array();
};

sc_Hashtable.prototype.hash = function(key) {
    var h = 0;
    for (var i = 0; i < key.length; i++) {
	h = 31*h + key.charCodeAt(i);
    }
    return h % this.table.length;
};

function sc_list2array(list) {
    var res = new Array();
    for (var i = 0; i < list.length; i++) {
	res[i] = list[i];
    }
    return res;
}

function sc_array2list(arr) {
    var res = new Array();
    for (var i = 0; Analyze the following piece of code:  val;
}


function sc_makeHashtable() {
    return new sc_Hashtable();
}


function sc_hashtablePutBang(ht, key, val) {
    var hash = sc_hash(key);
    ht[hash] = new sc_HashtableElement(key, val);
}


function sc_hashtableGet(ht, key) {
    var hash = sc_hash(key);
    if (hash in ht)
	return ht[hash].val;
    else
	return false;
}


function sc_hashtableForEach(ht, f) {
    for (var v in ht) {
	if (ht[v] instanceof sc_HashtableElement)
	    f(ht[v].key, ht[v].val);
    }
}


function sc_hashtableContains(ht, key) {
    var hash = sc_hash(key);
    if (hash in ht)
	return true;
    else
	return false;
}

var SC_HASH_COUNTER = 0;

function sc_hash(o) {
    if (o === null)
	return "null";
    else if (o === undefined)
	return "undefined";
    else if (o === true)
	return "true";
    else if (o === false)
	return "false";
    else if (typeof o === "number")
	return "num-" + o;
    else if (typeof o === "string")
	return "jsstr-" + o;
    else if (o.sc_getHash)
	return o.sc_getHash();
    else
	return sc_counterHash.call(o);
}
function sc_counterHash() {
    if (!this.sc_hash) {
	this.sc_hash = "hash-" + SC_HASH_COUNTER;
	SC_HASH_COUNTER++;
    }
    return this.sc_hash;
}

function sc_Trampoline(args, maxTailCalls) {
    this['__trampoline return__'] = true;
    this.args = args;
    this.MAX_TAIL_CALLs = maxTailCalls;
}
sc_Trampoline.prototype.restart = function() {
    var o = this;
    while (true) {
		SC_TAIL_OBJECT.calls = o.MAX_TAIL_CALLs-1;
	var fun = o.args.callee;
	var res = fun.apply(SC_TAIL_OBJECT, o.args);
	if (res instanceof sc_Trampoline)
	    o = res;
	else
	    return res;
    }
}


function sc_bindExitLambda(proc) {
    var escape_obj = new sc_BindExitException();
    var escape = function(res) {
	escape_obj.res = res;
	throw escape_obj;
    };
    try {
	return proc(escape);
    } catch(e) {
	if (e === escape_obj) {
	    return e.res;
	}
	throw e;
    }
}
function sc_BindExitException() {
    this._internalException = true;
}

var SC_SCM2JS_GLOBALS = new Object();

var SC_TAIL_OBJECT = new Object();
SC_SCM2JS_GLOBALS.TAIL_OBJECT = SC_TAIL_OBJECT;



function sc_EOF() {
}
var SC_EOF_OBJECT = new sc_EOF();

function sc_Port() {
}



function sc_InputPort() {
}
sc_InputPort.prototype = new sc_Port();

sc_InputPort.prototype.peekChar = function() {
    if (!("peeked" in this))
	this.peeked = this.getNextChar();
    return this.peeked;
}
sc_InputPort.prototype.readChar = function() {
    var tmp = this.peekChar();
    delete this.peeked;
    return tmp;
}
sc_InputPort.prototype.isCharReady = function() {
    return true;
}
sc_InputPort.prototype.close = function() {
    }


function sc_ErrorInputPort() {
};
sc_ErrorInputPort.prototype = new sc_InputPort();
sc_ErrorInputPort.prototype.getNextChar = function() {
    throw "can't read from error-port.";
};
sc_ErrorInputPort.prototype.isCharReady = function() {
    return false;
};





function sc_OutputPort() {
}
sc_OutputPort.prototype = new sc_Port();

sc_OutputPort.prototype.write = function(s) {
    throw "Can't write to port: " + this;
}
sc_OutputPort.prototype.display = function(s) {
    this.write(s);
}
sc_OutputPort.prototype.newline = function() {
    this.write("\n");
}
sc_OutputPort.prototype.close = function() {
    }


function sc_StringOutputPort() {
    this.buffer = "";
}
sc_StringOutputPort.prototype = new sc_OutputPort();
sc_StringOutputPort.prototype.write = function(s) {
    this.buffer += s;
}
sc_StringOutputPort.prototype.getString = function() {
    return this.buffer;
}
sc_StringOutputPort.prototype.clear = function() {
    this.buffer = "";
}

function sc_PortControl(port, on) {
    if (on) {
	if (!("input-buffer" in port))
	    port.input_buffer = [];
	if (!("output-buffer" in port))
	    port.output_buffer = [];
	port.old_read = port.read;
	port.old_write = port.write;
	port.old_display = port.display;
	port.old_newline = port.newline;
	port.read = sc_PortControl_read;
	port.write = sc_PortControl_write;
	port.display = sc_PortControl_display;
	port.newline = sc_PortControl_newline;
    } else {
	port.read = port.old_read;
	port.write = port.old_write;
	port.display = port.old_display;
	port.newline = port.old_newline;
	delete port.input_buffer;
	delete port.output_buffer;
    }
}

function sc_PortControl_read(port) {
    if (port.input_buffer.length > 0)
	return port.input_buffer.shift();
    else
	return port.old_read.call(port);
}

function sc_PortControl_write(port, s) {
    port.output_buffer.push(s);
}

function sc_PortControl_display(port, s) {
    port.output_buffer.push(s);
}

function sc_PortControl_newline(port) {
    port.output_buffer.push("\n");
}

function sc_evalString(s) {
    var port = new sc_StringInputPort(s);
    var val = sc_read(port);
    if (port.read!== port.old_read)
	sc_warn("unbalanced sc_with-input-from-string", s);
    return val;
}

function sc_load(filename) {
    var xhr = new XMLHttpRequest();
    xhr.open("GET", filename, false);
    xhr.send(null);
    if (xhr.status === 200) {
	sc_evalString(xhr.responseText);
    } else {
	sc_warn("Failed to load file: " + filename, xhr.statusText);
    }
}

function Analyze the following piece of code: function sc_StringInputPort(jsStr) {
                this.str = new String(jsStr);
    this.pos = 0;
}
sc_StringInputPort.prototype = new sc_InputPort();
sc_StringInputPort.prototype.getNextChar = function() {
    if (this.pos >= this.str.length)
	return SC_EOF_OBJECT;
    return this.str.charAt(this.pos++);
};


function sc_Token(type, val, pos) {
    this.type = type;
    this.val = val;
    this.pos = pos;
}
sc_Token.EOF = 0;
sc_Token.OPEN_PAR = 1;
sc_Token.CLOSE_PAR = 2;
sc_Token.OPEN_BRACE = 3;
sc_Token.CLOSE_BRACE = 4;
sc_Token.OPEN_BRACKET = 5;
sc_Token.CLOSE_BRACKET = 6;
sc_Token.WHITESPACE = 7;
sc_Token.QUOTE = 8;
sc_Token.ID = 9;
sc_Token.DOT = 10;
sc_Token.STRING = 11;
sc_Token.NUMBER = 12;
sc_Token.ERROR = 13;
sc_Token.VECTOR_BEGIN = 14;
sc_Token.TRUE = 15;
sc_Token.FALSE = 16;
sc_Token.UNSPECIFIED = 17;
sc_Token.REFERENCE = 18;
sc_Token.STORE = 19;
sc_Token.CHAR = 20;

var SC_ID_CLASS = SC_LOWER_CLASS + SC_UPPER_CLASS + "!$%*+-./:<=>?@^_~";
function sc_Tokenizer(port) {
    this.port = port;
}
sc_Tokenizer.prototype.peekToken = function() {
    if (this.peeked)
	return this.peeked;
    var newToken = this.nextToken();
    this.peeked = newToken;
    return newToken;
};
sc_Tokenizer.prototype.readToken = function() {
    var tmp = this.peekToken();
    delete this.peeked;
    return tmp;
};
sc_Tokenizer.prototype.nextToken = function() {
    var port = this.port;

    function isNumberChar(c) {
	return (c >= "0" && c <= "9");
    };
    function isIdOrNumberChar(c) {
	return SC_ID_CLASS.indexOf(c)!= -1 || 	    (c >= "0" && c <= "9");
    }
    function isWhitespace(c) {
	return c === " " || c === "\r" || c === "\n" || c === "\t" || c === "\f";
    };
    function isWhitespaceOrEOF(c) {
	return isWhitespace(c) || c === SC_EOF_OBJECT;
    };

    function readString() {
	res = "";
	while (true) {
	    var c = port.readChar();
	    switch (c) {
	    case '"':
		return new sc_Token(11, res);
	    case "\\":
		var tmp = port.readChar();
		switch (tmp) {
		case '0': res += "\0"; break;
		case 'a': res += "\a"; break;
		case 'b': res += "\b"; break;
		case 'f': res += "\f"; break;
		case 'n': res += "\n"; break;
		case 'r': res += "\r"; break;
		case 't': res += "\t"; break;
		case 'v': res += "\v"; break;
		case '"': res += '"'; break;
		case '\\': res += '\\'; break;
		case 'x':
		    
		    var nb = 0;
		    while (true) {
			var hexC = port.peekChar();
			if (hexC >= '0' && hexC <= '9') {
			    port.readChar();
			    nb = nb * 16 + hexC.charCodeAt(0) - '0'.charCodeAt(0);
			} else if (hexC >= 'a' && hexC <= 'f') {
			    port.readChar();
			    nb = nb * 16 + hexC.charCodeAt(0) - 'a'.charCodeAt(0) + 10;
			} else if (hexC >= 'A' && hexC <= 'F') {
			    port.readChar();
			    nb = nb * 16 + hexC.charCodeAt(0) - 'A'.charCodeAt(0) + 10;
			} else {
			    break;
			}
		    }
		    res += String.fromCharCode(nb);
		    break;
		default:
		    res += tmp;
		}
		break;
	    default:
		if (c === SC_EOF_OBJECT)
		    return new sc_Token(13, "Unterminated string constant");
		res += c;
	    }
	}
    }
    function readId() {
	var res = "";
	while (true) {
	    var c = port.readChar();
	    if (isIdOrNumberChar(c))
		res += c;
	    else
		break;
	}
	if (res === "true")
	    return new sc_Token(15, true);
	if (res === "false")
	    return new sc_Token(16, false);
	if (res === "undefined")
	    return new sc_Token(17, undefined);
	if (res === "null")
	    return new sc_Token(18, null);
	return new sc_Token(9, res);
    }
    function readNumber() {
	var res = "";
	while (true) {
	    var c = port.readChar();
	    if (isNumberChar(c))
		res += c;
	    else
		break;
	}
	return new sc_Token(12, Number(res));
    }
    function readChar() {
	var c = port.readChar();
	if (c === "'" || c === '"') {
	    var tmp = port.readChar();
	    if (tmp === c)
		return new sc_Token(20, tmp);
	    else
		return new sc_Token(13, "Invalid character constant");
	} else {
	    port.unreadChar(c);
	    return new sc_Token(19, c);
	}
    }

    var c = port.readChar();
    while (isWhitespaceOrEOF(c))
	c = port.readChar();
    if (c === SC_EOF_OBJECT)
	return new sc_Token(0, SC_EOF_OBJECT);
    if (c === '"')
	return readString();
    if (c === "'")
	return readChar();
    if (isNumberChar(c))
	return readNumber();
    if (isIdOrNumberChar(c))
	return readId();
    switch (c) {
    case "(":
	return new sc_Token(1, "(");
    case ")":
	return new sc_Token(2, ")");
    case "[":
	return new sc_Token(5, "[");
    case "]":
	return new sc_Token(6, "]");
    case "{":
	return new sc_Token(3, "{");
    case "}":
	return new sc_Token(4, "}");
    case ".":
	return new sc_Token(10, ".");
    case '"':
    case "'":
	return new sc_Token(8, c);
    default:
	return new sc_Token(13, "Invalid token: " + c);
    }
}; Analyze the following piece of code: 0);
			} else if (hexC >= 'A' && hexC <= 'F') {
			    port.readChar();
			    nb = nb * 16 + hexC.charCodeAt(0) - 'A'.charCodeAt(0);
			} else {
			    			    res += String.fromCharCode(nb);
			    break;
			}
		    }
		    break;
		default:
		    if (tmp === SC_EOF_OBJECT) {
			return new sc_Token(13, "unclosed string-literal" + res);
		    }
		    res += tmp;
		}
		break;
	    default:
		if (c === SC_EOF_OBJECT) {
		    return new sc_Token(13, "unclosed string-literal" + res);
		}
		res += c;
	    }
	}
    };
    function readIdOrNumber(firstChar) {
	var res = firstChar;
	while (isIdOrNumberChar(port.peekChar()))
	    res += port.readChar();
	if (isNaN(res))
	    return new sc_Token(9, res);
	else
	    return new sc_Token(12, res - 0);
    };

    function skipWhitespaceAndComments() {
	var done = false;
	while (!done) {
	    done = true;
	    while (isWhitespace(port.peekChar()))
		port.readChar();
	    if (port.peekChar() === ';') {
		port.readChar();
		done = false;
		while (true) {
		    curChar = port.readChar();
		    if (curChar === SC_EOF_OBJECT ||
			curChar === '\n')
			break;
		}
	    }
	}
    };

    function readDot() {
	if (isWhitespace(port.peekChar()))
	    return new sc_Token(10);
	else
	    return readIdOrNumber(".");
    };

    function readSharp() {
	var c = port.readChar();
	if (isWhitespace(c))
	    return new sc_Token(13, "bad #-pattern0.");

		if (isNumberChar(c)) {
	    var nb = c - 0;
	    while (isNumberChar(port.peekChar()))
		nb = nb*10 + (port.readChar() - 0);
	    switch (port.readChar()) {
	    case '#':
		return new sc_Token(18, nb);
	    case '=':
		return new sc_Token(19, nb);
	    default:
		return new sc_Token(13, "bad #-pattern1." + nb);
	    }
	}

	if (c === "(")
	    return new sc_Token(14);
	
	if (c === "\\") { 	    var tmp = ""
	    while (!isWhitespaceOrEOF(port.peekChar()))
		tmp += port.readChar();
	    switch (tmp.length) {
	    case 0: 		if (sc_isEOFObject(port.peekChar))
		    return new sc_Token(13, "bad #-pattern2.");
		else
		    return new sc_Token(20, port.readChar());
	    case 1:
		return new sc_Token(20, tmp);
	    default:
		var entry = sc_Char.readable2char[tmp.toLowerCase()];
		if (entry)
		    return new sc_Token(20, entry);
		else
		    return new sc_Token(13, "unknown character description: #\\" + tmp);
	    }
	}

		var res;
	var needing;
	switch (c) {
	case 't': res = new sc_Token(15, true); needing = ""; break;
	case 'f': res = new sc_Token(16, false); needing = ""; break;
	case 'u': res = new sc_Token(17, undefined); needing = "nspecified"; break;
	default:
	    return new sc_Token(13, "bad #-pattern3: " + c);
	}
	while(true) {
	    c = port.peekChar();
	    if ((isWhitespaceOrEOF(c) || c === ')') &&
		needing == "")
		return res;
	    else if (isWhitespace(c) || needing == "")
		return new sc_Token(13, "bad #-pattern4 " + c + " " + needing);
	    else if (needing.charAt(0) == 'n' && c == 'u') {
		port.readChar();
		needing = needing.substring(1);
	    } else
		port.readChar();
	}
    };

    function readSpecial() {
	var c = port.readChar();
	switch (c) {
	case '"': return new sc_Token(3, readString('"'));
	case '\'': return new sc_Token(4, readString('\''));
	case '`': return new sc_Token(5, readString('`'));
	case '|': return new sc_Token(6);
	case '&': return new sc_Token(7);
	case '*': return new sc_Token(8);
	case '.': return readDot();
	case '#': return readSharp();
	default: return new sc_Token(13, "bad special form: " + c);
	}
    };

    function readNumber() {
	var res = "";
	while (isNumberChar(port.peekChar()))
	    res += port.readChar();
	if (port.peekChar() === '.') {
	    res += port.readChar();
	    while (isNumberChar(port.peekChar()))
		res += port.readChar();
	}
	if (port.peekChar() === 'e' || port.peekChar() === 'E') {
	    res += port.readChar();
	    if (port.peekChar() === '+' || port.peekChar() === '-')
		res += port.readChar();
	    while (isNumberChar(port.peekChar()))
		res += port.readChar();
	}
	return new sc_Token(12, res - 0);
    };

    function readSymbol() {
	var res = "";
	while (isSymbolChar(port.peekChar()))
	    res += port.readChar();
	return new sc_Token(11, res);
    };

    function readToken() {
	skipWhitespaceAndComments();
	var c = port.peekChar();
	switch (c) {
	case '(': return new sc_Token(0);
	case ')': return new sc_Token(1);
	case '"': return new sc_Token(3, readString('"'));
	case '\'': return new sc_Token(4, readString('\''));
	case '`': return new sc_Token(5, readString('`'));
	case '|': return new sc_Token(6);
	case '&': return new sc_Token(7);
	case '*': return new sc_Token(8);
	case '.': return readDot();
	case '#': return readSharp();
	case '0': case '1': case '2': case '3': case '4':
	case '5': case '6': case '7': case '8': case '9':
	    return readNumber();
	case '+': case '-':
	    if (port.peekChar(1) === '>')
		return new sc_Token(21);
	    else
		return new sc_Token(1, c);
	case'': case '\t': case '\n': case '\r':
	    return new sc_Token(10);
	case ';':
	    return new sc_Token(13, ";");
	case '!':
	    if (port.peekChar(1) === '=') Analyze the following piece of code:  == c) {
		port.readChar(); 		needing = needing.slice(1);
	    } else
		return new sc_Token(13, "bad #-pattern5");
	}
	
    };

    skipWhitespaceAndComments();
    var curChar = port.readChar();
    if (curChar === SC_EOF_OBJECT)
	return new sc_Token(0, curChar);
    switch (curChar)
    {
    case " ":
    case "\n":
    case "\t":
	return readWhitespace();
    case "(":
	return new sc_Token(1);
    case ")":
	return new sc_Token(2);
    case "{":
	return new sc_Token(3);
    case "}":
	return new sc_Token(4);
    case "[":
	return new sc_Token(5);
    case "]":
	return new sc_Token(6);
    case "'":
	return new sc_Token(8);
    case "#":
	return readSharp();
    case ".":
	return readDot();
    case '"':
	return readString();
    default:
	if (isIdOrNumberChar(curChar))
	    return readIdOrNumber(curChar);
	throw "unexpected character: " + curChar;
    }
};

function sc_Reader(tokenizer) {
    this.tokenizer = tokenizer;
    this.backref = new Array();
}
sc_Reader.prototype.read = function() {
    function readList(listBeginType) {
	function matchesPeer(open, close) {
	    return open === 1 && close === 2
	    	|| open === 3 && close === 4
		|| open === 5 && close === 6;
	};
	var res = null;

	while (true) {
	    var token = tokenizer.peekToken();

	    switch (token.type) {
	    case 2:
	    case 4:
	    case 6:
		if (matchesPeer(listBeginType, token.type)) {
		    tokenizer.readToken(); 		    return sc_reverseBang(res);
		} else
		    throw "closing par doesn't match: " + listBeginType
			+ " " + listEndType;

	    case 0:
		throw "unexpected end of file";

	    case 10:
		tokenizer.readToken(); 		var cdr = this.read();
		var par = tokenizer.readToken();
		if (!matchesPeer(listBeginType, par.type))
		    throw "closing par doesn't match: " + listBeginType
			+ " " + par.type;
		else
		    return sc_reverseAppendBang(res, cdr);
		

	    default:
		res = sc_cons(this.read(), res);
	    }
	}
    };
    function readQuote() {
	return sc_cons("quote", sc_cons(this.read(), null));
    };
    function readVector() {
		var a = new Array();
	while (true) {
	    var token = tokenizer.peekToken();
	    switch (token.type) {
	    case 2:
		tokenizer.readToken();
		return a;
		
	    default:
		a.push(this.read());
	    }
	}
    };

    function storeRefence(nb) {
	var tmp = this.read();
	this.backref[nb] = tmp;
	return tmp;
    };
	
    function readReference(nb) {
	if (nb in this.backref)
	    return this.backref[nb];
	else
	    throw "bad reference: " + nb;
    };

    var tokenizer = this.tokenizer;

    var token = tokenizer.readToken();

        if (token.type === 13)
	throw token.val;

    switch (token.type) {
    case 1:
    case 3:
    case 5:
	return readList.call(this, token.type);
    case 8:
	return readQuote.call(this);
    case 11:
	return sc_jsstring2string(token.val);
    case 20:
	return new sc_Char(token.val);
    case 14:
	return readVector.call(this);
    case 18:
	return readReference.call(this, token.val);
    case 19:
	return storeRefence.call(this, token.val);
    case 9:
	return sc_jsstring2symbol(token.val);
    default:
	return token.val;
    }
};

function sc_eval(code, env) {
    var reader = new sc_Reader(new sc_Tokenizer(code));
    var ast = reader.read();
    return sc_evalAst(ast, env);
};

function sc_evalAst(ast, env) {
    function apply(func, args) {
	if (func instanceof sc_Primitive)
	    return func.apply(args);
	if (func instanceof sc_SpecialForm)
	    return func.apply(env, args);
	if (func instanceof sc_Macro)
	    return func.expand(env, args);
	throw "bad function: " + func;
    };

    function applySpecialForm(form, args) {
	switch (form.name) {
	case "if":
	    if (args.length!== 3)
		throw "if form requires 3 arguments, got " + args.length;
	    return args[0] === false? args[1] : apply(args[0], args[2]);
	case "set!":
	    if (args.length!== 2)
		throw "set! form requires 2 arguments, got " + args.length;
	    env.set(args[0], args[1]);
	    return args[1];
	case "define":
	    if (args.length!== 2)
		throw "define form requires 2 arguments, got " + args.length;
	    env.set(args[0], args[1]);
	    return args[1];
	case "lambda":
	    if (args.length!== 2)
		throw "lambda form requires 2 arguments, got " + args.length;
	    return new sc_Closure(args[0], args[1], env);
	case "begin":
	    for (var i = args.length - 1; i >= 0; i--)
		args[i] = apply(args[i], []);
	    return args[args.length - 1];
	case "cond":
	    for (var i = 0; i < args.length; i += 2) {
		if (args[i] === false)
		    continue;
		return apply(args[i + 1], []);
	    }
	    return false;
	default:
	    throw "unknown special form: " + form.name;
	}
    };

    if (ast instanceof sc_Token)
	return ast.val;
    if (ast instanceof Array) {
	var func = apply(ast[0], ast.slice(1));
	if (func instanceof sc_SpecialForm)
	    return applySpecialForm(func, ast.slice(1));
	return func;
    }
    throw "bad ast: " + ast;
};

function sc_jsstring2string(str) {
    var res = "";
    for (var i = 0; i < str.length; i++) {
	var c = str.charCodeAt(i);
	if (c < 128)
	    res += String.fromCharCode(c);
	else if ((c > 127) && (c < 2048))
	    res += String.fromCharCode((c >> 6) | 192, (c & 63) | 128);
	else
	    res += String.fromCharCode((c Analyze the following piece of code: token.val);
    case 0:
    case 12:
    case 15:
    case 16:
    case 17:
	return token.val;
    default:
	throw "unexpected token " + token.type + " " + token.val;
    }
};


function sc_read(port) {
    if (port === undefined) 	port = SC_DEFAULT_IN;     var reader = new sc_Reader(new sc_Tokenizer(port));
    return reader.read();
}

function sc_readChar(port) {
    if (port === undefined) 	port = SC_DEFAULT_IN;     var t = port.readChar();
    return t === SC_EOF_OBJECT? t: new sc_Char(t);
}

function sc_peekChar(port) {
    if (port === undefined) 	port = SC_DEFAULT_IN;     var t = port.peekChar();
    return t === SC_EOF_OBJECT? t: new sc_Char(t);
}

function sc_isCharReady(port) {
    if (port === undefined) 	port = SC_DEFAULT_IN;     return port.isCharReady();
}

function sc_closeInputPort(p) {
    return p.close();
}


function sc_isInputPort(o) {
    return (o instanceof sc_InputPort);
}


function sc_isEOFObject(o) {
    return o === SC_EOF_OBJECT;
}


function sc_currentInputPort() {
    return SC_DEFAULT_IN;
}



function sc_callWithInputFile(s, proc) {
    throw "can't open " + s;
}


function sc_callWithOutputFile(s, proc) {
    throw "can't open " + s;
}


function sc_withInputFromFile(s, thunk) {
    throw "can't open " + s;
}


function sc_withOutputToFile(s, thunk) {
    throw "can't open " + s;
}


function sc_openInputFile(s) {
    throw "can't open " + s;
}


function sc_openOutputFile(s) {
    throw "can't open " + s;
}



function sc_basename(p) {
   var i = p.lastIndexOf('/');

   if(i >= 0)
      return p.substring(i + 1, p.length);
   else
      return '';
}


function sc_dirname(p) {
   var i = p.lastIndexOf('/');

   if(i >= 0)
      return p.substring(0, i);
   else
      return '';
}




function sc_withInputFromPort(p, thunk) {
    try {
	var tmp = SC_DEFAULT_IN; 	SC_DEFAULT_IN = p;
	return thunk();
    } finally {
	SC_DEFAULT_IN = tmp;
    }
}


function sc_withInputFromString(s, thunk) {
    return sc_withInputFromPort(new sc_StringInputPort(sc_string2jsstring(s)), thunk);
}


function sc_withOutputToPort(p, thunk) {
    try {
	var tmp = SC_DEFAULT_OUT; 	SC_DEFAULT_OUT = p;
	return thunk();
    } finally {
	SC_DEFAULT_OUT = tmp;
    }
}


function sc_withOutputToString(thunk) {
    var p = new sc_StringOutputPort();
    sc_withOutputToPort(p, thunk);
    return p.close();
}


function sc_withOutputToProcedure(proc, thunk) {
    var t = function(s) { proc(sc_jsstring2string(s)); };
    return sc_withOutputToPort(new sc_GenericOutputPort(t), thunk);
}


function sc_openOutputString() {
    return new sc_StringOutputPort();
}


function sc_openInputString(str) {
    return new sc_StringInputPort(sc_string2jsstring(str));
}



function sc_OutputPort() {
}
sc_OutputPort.prototype = new sc_Port();
sc_OutputPort.prototype.appendJSString = function(obj) {
    
}
sc_OutputPort.prototype.close = function() {
    
}

function sc_InputPort() {
}
sc_InputPort.prototype = new sc_Port();
sc_InputPort.prototype.read = function() {
    
}
sc_InputPort.prototype.readChar = function() {
    
}
sc_InputPort.prototype.peekChar = function() {
    
}
sc_InputPort.prototype.isCharReady = function() {
    
}
sc_InputPort.prototype.close = function() {
    
}

function sc_Port() {
}
sc_Port.prototype.isInputPort = function() {
    
}
sc_Port.prototype.isOutputPort = function() {
    
}
sc_Port.prototype.isTextual = function() {
    
}
sc_Port.prototype.isBinary = function() {
    
}
sc_Port.prototype.setBinaryMode = function(mode) {
    
}

function sc_Reader(p) {
    this.p = p;
}
sc_Reader.prototype.read = function() {
    
}

function sc_Char(c) {
}
sc_Char.prototype.toJSString = function() {
    
}

function sc_StringInputPort(s) {
}
sc_StringInputPort.prototype = new sc_InputPort();
sc_StringInputPort.prototype.read = function() {
    
}
sc_StringInputPort.prototype.readChar = function() {
    
}
sc_StringInputPort.prototype.peekChar = function() {
    
}
sc_StringInputPort.prototype.isCharReady = function() {
    
}
sc_StringInputPort.prototype.close = function() {
    
}

function sc_StringOutputPort() {
}
sc_StringOutputPort.prototype = new sc_OutputPort();
sc_StringOutputPort.prototype.toString = function() {
    
}
sc_StringOutputPort.prototype.close = function() {
    
}

function sc_GenericOutputPort(proc) {
}
sc_GenericOutputPort.prototype = new sc_OutputPort();
sc_GenericOutputPort.prototype.write = function(obj) {
    
}
sc_GenericOutputPort.prototype.writeChar = function(c) {
    
}
sc_GenericOutputPort.prototype.writeString = function(s) {
    
}
sc_GenericOutputPort.prototype.writeJSString = function(s) {
    
}
sc_GenericOutputPort.prototype.close = function() {
    
}

function sc_InputOutputPort() {
}
sc_InputOutputPort.prototype = new sc_Port();
sc_InputOutputPort.prototype.read = function() {
    
}
sc_InputOutputPort.prototype.readChar = function() {
    
}
sc_InputOutputPort.prototype.peekChar = function() {
    
}
sc_InputOutputPort.prototype.isCharReady = function() {
    
}
sc_InputOutputPort.prototype.getPos = function() {
    
}
sc_InputOutputPort.prototype.setPos = function(pos) {
    
}
sc_InputOutputPort.prototype.close = function() {
    
}

function sc_FilePort(f) {
}
sc_FilePort.prototype = new sc_InputOutputPort();
sc_ Analyze the following piece of code: StringOutputPort() {
    this.res = "";
}
sc_StringOutputPort.prototype = new sc_OutputPort();
sc_StringOutputPort.prototype.appendJSString = function(s) {
    this.res += s;
}
sc_StringOutputPort.prototype.close = function() {
    return sc_jsstring2string(this.res);
}


function sc_getOutputString(sp) {
    return sc_jsstring2string(sp.res);
}


function sc_ErrorOutputPort() {
}
sc_ErrorOutputPort.prototype = new sc_OutputPort();
sc_ErrorOutputPort.prototype.appendJSString = function(s) {
    throw "don't write on ErrorPort!";
}
sc_ErrorOutputPort.prototype.close = function() {
    
}

function sc_GenericOutputPort(appendJSString, close) {
    this.appendJSString = appendJSString;
    if (close)
	this.close = close;
}
sc_GenericOutputPort.prototype = new sc_OutputPort();


function sc_isOutputPort(o) {
    return (o instanceof sc_OutputPort);
}


function sc_closeOutputPort(p) {
    return p.close();
}




function sc_write(o, p) {
    if (p === undefined) 	p = SC_DEFAULT_OUT;
    p.appendJSString(sc_toWriteString(o));
}

function sc_toWriteString(o) {
    if (o === null)
	return "()";
    else if (o === true)
	return "#t";
    else if (o === false)
	return "#f";
    else if (o === undefined)
	return "#unspecified";
    else if (typeof o === 'function')
	return "#<procedure " + sc_hash(o) + ">";
    else if (o.sc_toWriteString)
	return o.sc_toWriteString();
    else
	return o.toString();
}

function sc_escapeWriteString(s) {
    var res = "";
    var j = 0;
    for (i = 0; i < s.length; i++) {
	switch (s.charAt(i)) {
	case "\0": res += s.substring(j, i) + "\\0"; j = i + 1; break;
	case "\b": res += s.substring(j, i) + "\\b"; j = i + 1; break;
	case "\f": res += s.substring(j, i) + "\\f"; j = i + 1; break;
	case "\n": res += s.substring(j, i) + "\\n"; j = i + 1; break;
	case "\r": res += s.substring(j, i) + "\\r"; j = i + 1; break;
	case "\t": res += s.substring(j, i) + "\\t"; j = i + 1; break;
	case "\v": res += s.substring(j, i) + "\\v"; j = i + 1; break;
	case '"': res += s.substring(j, i) + '\\"'; j = i + 1; break;
	case "\\": res += s.substring(j, i) + "\\\\"; j = i + 1; break;
	default:
	    var c = s.charAt(i);
	    if ("\a"!== "a" && c == "\a") {
		res += s.substring(j, i) + "\\a"; j = i + 1; continue;
	    }
	    if ("\v"!== "v" && c == "\v") {
		res += s.substring(j, i) + "\\v"; j = i + 1; continue;
	    }
	    	    	    if (s.charAt(i) <'') {
		
		res += s.substring(j, i) + "\\x" + s.charCodeAt(i).toString(16);
		j = i + 1;
	    }
	    	}
    }
    res += s.substring(j, i);
    return res;
}




function sc_display(o, p) {
    if (p === undefined) 	p = SC_DEFAULT_OUT;
    p.appendJSString(sc_toDisplayString(o));
}

function sc_toDisplayString(o) {
    if (o === null)
	return "()";
    else if (o === true)
	return "#t";
    else if (o === false)
	return "#f";
    else if (o === undefined)
	return "#unspecified";
    else if (typeof o === 'function')
	return "#<procedure " + sc_hash(o) + ">";
    else if (o.sc_toDisplayString)
	return o.sc_toDisplayString();
    else
	return o.toString();
}

function sc_writeError(o, p) {
    if (p === undefined) 	p = SC_DEFAULT_ERR;
    p.appendJSString(sc_toWriteErrorString(o));
}

function sc_toWriteErrorString(o) {
    if (o === null)
	return "()";
    else if (o === true)
	return "#t";
    else if (o === false)
	return "#f";
    else if (o === undefined)
	return "#unspecified";
    else if (typeof o === 'function')
	return "#<procedure " + sc_hash(o) + ">";
    else if (o.sc_toWriteErrorString)
	return o.sc_toWriteErrorString();
    else
	return o.toString();
}

function sc_displayError(o, p) {
    if (p === undefined) 	p = SC_DEFAULT_ERR;
    p.appendJSString(sc_toDisplayErrorString(o));
}

function sc_toDisplayErrorString(o) {
    if (o === null)
	return "()";
    else if (o === true)
	return "#t";
    else if (o === false)
	return "#f";
    else if (o === undefined)
	return "#unspecified";
    else if (typeof o === 'function')
	return "#<procedure " + sc_hash(o) + ">";
    else if (o.sc_toDisplayErrorString)
	return o.sc_toDisplayErrorString();
    else
	return o.toString();
}

function sc_writeFormat(f) {
    var args = Array.prototype.slice.call(arguments, 1);
    return f.replace(/{(\d+)}/g, function(match, number) {
	return args[number];
    });
}

function sc_displayFormat(f) {
    var args = Array.prototype.slice.call(arguments, 1);
    return f.replace(/{(\d+)}/g, function(match, number) {
	return args[number];
    });
}

function sc_writeLine() {
    var args = Array.prototype.slice.call(arguments);
    sc_write.apply(this, args);
    sc_write("\n");
}

function sc_displayLine() {
    var args = Array.prototype.slice.call(arguments);
    sc_display.apply(this, args);
    sc_write("\n");
}

function sc_writeErrorLine() {
    var args = Array.prototype.slice.call(arguments);
    sc_writeError.apply(this, args);
    sc_write("\n");
}

function sc_displayErrorLine() {
    var args = Array.prototype.slice.call( Analyze the following piece of code: ) {
    if (o === null)
	return "()";
    else if (o === true)
	return "#t";
    else if (o === false)
	return "#f";
    else if (o === undefined)
	return "#unspecified";
    else if (typeof o === 'function')
	return "#<procedure " + sc_hash(o) + ">";
    else if (o.sc_toDisplayString)
	return o.sc_toDisplayString();
    else
	return o.toString();
}




function sc_newline(p) {
    if (p === undefined) 	p = SC_DEFAULT_OUT;
    p.appendJSString("\n");
}




function sc_writeChar(c, p) {
    if (p === undefined) 	p = SC_DEFAULT_OUT;
    p.appendJSString(c.val);
}




function sc_writeCircle(o, p) {
    if (p === undefined) 	p = SC_DEFAULT_OUT;
    p.appendJSString(sc_toWriteCircleString(o));
}

function sc_toWriteCircleString(o) {
    var symb = sc_gensym("writeCircle");
    var nbPointer = new Object();
    nbPointer.nb = 0;
    sc_prepWriteCircle(o, symb, nbPointer);
    return sc_genToWriteCircleString(o, symb);
}

function sc_prepWriteCircle(o, symb, nbPointer) {
        if (o instanceof sc_Pair ||
	o instanceof sc_Vector) {
	if (o[symb]!== undefined) {
	    	    o[symb]++;
	    	    if (!o[symb + "nb"]) o[symb + "nb"] = nbPointer.nb++;
	    return;
	}
	o[symb] = 0;
	if (o instanceof sc_Pair) {
	    sc_prepWriteCircle(o.car, symb, nbPointer);
	    sc_prepWriteCircle(o.cdr, symb, nbPointer);
	} else {
	    for (var i = 0; i < o.length; i++)
		sc_prepWriteCircle(o[i], symb, nbPointer);
	}
    }
}

function sc_genToWriteCircleString(o, symb) {
    if (!(o instanceof sc_Pair ||
	  o instanceof sc_Vector))
	return sc_toWriteString(o);
    return o.sc_toWriteCircleString(symb);
}
sc_Pair.prototype.sc_toWriteCircleString = function(symb, inList) {
    if (this[symb + "use"]) { 	var nb = this[symb + "nb"];
	if (this[symb]-- === 0) { 	    delete this[symb];
	    delete this[symb + "nb"];
	    delete this[symb + "use"];
	}
	if (inList)
	    return '. #' + nb + '#';
	else
	    return '#' + nb + '#';
    }
    if (this[symb]-- === 0) { 	delete this[symb];
	delete this[symb + "nb"];
	delete this[symb + "use"];
    }

    var res = "";

    if (this[symb]!== undefined) { 	this[symb + "use"] = true;
	if (inList)
	    res += '. #' + this[symb + "nb"] + '=';
	else
	    res += '#' + this[symb + "nb"] + '=';
	inList = false;
    }

    if (!inList)
	res += "(";

        res += sc_genToWriteCircleString(this.car, symb);

    if (sc_isPair(this.cdr)) {
	res += " " + this.cdr.sc_toWriteCircleString(symb, true);
    } else if (this.cdr!== null) {
	res += ". " + sc_genToWriteCircleString(this.cdr, symb);
    }
    if (!inList)
	res += ")";
    return res;
};
sc_Vector.prototype.sc_toWriteCircleString = function(symb) {
    if (this[symb + "use"]) { 	var nb = this[symb + "nb"];
	if (this[symb]-- === 0) { 	    delete this[symb];
	    delete this[symb + "nb"];
	    delete this[symb + "use"];
	}
	return '. #' + nb + '#';
    }
    if (this[symb]-- === 0) { 	delete this[symb];
	delete this[symb + "nb"];
	delete this[symb + "use"];
    }

    var res = "";

    if (this[symb]!== undefined) { 	this[symb + "use"] = true;
	res += '. #' + this[symb + "nb"] + '=';
    }

    res += "#(";
    for (var i = 0; i < this.length; i++) {
	if (i > 0) res += " ";
	res += sc_genToWriteCircleString(this[i], symb);
    }
    res += ")";
    return res;
};




function sc_display(o, p) {
    if (p === undefined) 	p = SC_DEFAULT_OUT;
    p.display(o);
}




function sc_error(message, p) {
    if (p === undefined) 	p = SC_DEFAULT_OUT;
    p.error(message);
}




function sc_evalString(string, p) {
    if (p === undefined) 	p = SC_DEFAULT_OUT;
    return sc_eval(sc_read(string, p), p);
}




function sc_load(filename, p) {
    if (p === undefined) 	p = SC_DEFAULT_OUT;
    var inport = new sc_InPort(filename, p);
    while (true) {
	var obj = sc_read(inport, p);
	if (obj === false)
	    break;
	if (obj!== undefined)
	    sc_eval(obj, p);
    }
    inport.close();
}




function sc_loadString(string, p) {
    if (p === undefined) 	p = SC_DEFAULT_OUT;
    var inport = new sc_InStringPort(string, p);
    while (true) {
	var obj = sc_read(inport, p);
	if (obj === false)
	    break;
	if (obj!== undefined)
	    sc_eval(obj, p);
    }
    inport.close();
}




function sc_exit(status) {
    if (status === undefined)
	status = 0;
    if (typeof window === "object")
	window.close();
    else
	exit(status);
}

// End of Scheme Code.

// This is the end of the JavaScript code.

// End of generated code.

// This is the end of the JavaScript code.

// End of generated code.

// This is the end of the JavaScript code.

// End of generated code.

¿Qué es un lenguaje de programación?

Un lenguaje de programación es un sistema de comunicación que se utiliza para describir y ejecutar secuencias de instrucciones que realizan tareas específicas. Los lenguajes de programación se utilizan para escribir programas que se pueden ejecutar en computadoras y otros dispositivos Analyze the following piece of code:  0) { 	    delete this[symb];
	    delete this[symb + "nb"];
	    delete this[symb + "use"];
	}
	return '#' + nb + '#';
    }
    if (this[symb]-- === 0) { 	delete this[symb];
	delete this[symb + "nb"];
	delete this[symb + "use"];
    }

    var res = "";
    if (this[symb]!== undefined) { 	this[symb + "use"] = true;
	res += '#' + this[symb + "nb"] + '=';
    }
    res += "#(";
    for (var i = 0; i < this.length; i++) {
	res += sc_genToWriteCircleString(this[i], symb);
	if (i < this.length - 1) res += " ";
    }
    res += ")";
    return res;
};





function sc_print(s) {
    if (arguments.length === 1) {
	sc_display(s);
	sc_newline();
    }
    else {
	for (var i = 0; i < arguments.length; i++)
	    sc_display(arguments[i]);
	sc_newline();
    }
}



function sc_format(s, args) {
   var len = s.length;
   var p = new sc_StringOutputPort();
   var i = 0, j = 1;

   while( i < len ) {
      var i2 = s.indexOf("~", i);

      if (i2 == -1) {
	  p.appendJSString( s.substring( i, len ) );
	  return p.close();
      } else {
	 if (i2 > i) {
	    if (i2 == (len - 1)) {
		p.appendJSString(s.substring(i, len));
		return p.close();
	    } else {
	       p.appendJSString(s.substring(i, i2));
	       i = i2;
	    }
	 }

	 switch(s.charCodeAt(i2 + 1)) {
	    case 65:
	    case 97:
	       	       sc_display(arguments[j], p);
	       i += 2; j++;
	       break;

	    case 83:
	    case 115:
	       	       sc_write(arguments[j], p);
	       i += 2; j++;
	       break;

	    case 86:
	    case 118:
	       	       sc_display(arguments[j], p);
	       p.appendJSString("\n");
	       i += 2; j++;
	       break;

	    case 67:
	    case 99:
	       	       p.appendJSString(String.fromCharCode(arguments[j]));
	       i += 2; j++;
	       break;

	    case 88:
	    case 120:
	       	       p.appendJSString(arguments[j].toString(6));
	       i += 2; j++;
	       break;

	    case 79:
	    case 111:
	       	       p.appendJSString(arguments[j].toString(8));
	       i += 2; j++;
	       break;

	    case 66:
	    case 98:
	       	       p.appendJSString(arguments[j].toString(2));
	       i += 2; j++;
	       break;

	    case 37:
	    case 110:
	       	       p.appendJSString("\n");
	       i += 2; break;

	    case 114:
	       	       p.appendJSString("\r");
	       i += 2; break;

	    case 126:
	       	       p.appendJSString("~");
	       i += 2; break;

	    default:
	       sc_error( "format: illegal ~"
			 + String.fromCharCode(s.charCodeAt(i2 + 1))
			 + " sequence" );
	       return "";
	 }
      }
   }

   return p.close();
}



var SC_DEFAULT_IN = new sc_ErrorInputPort();
var SC_DEFAULT_OUT = new sc_ErrorOutputPort();
var SC_ERROR_OUT = new sc_ErrorOutputPort();

var sc_SYMBOL_PREFIX = "\u1E9C";
var sc_KEYWORD_PREFIX = "\u1E9D";


function sc_jsstring2string(s) {
    return s;
}


function sc_jsnumber2string(n) {
    return n.toString();
}


function sc_jselement2string(e) {
    return e.toString();
}


function sc_string2jsstring(s) {
    return s;
}


function sc_string2jsnumber(s) {
    return Number(s);
}


function sc_string2jselement(s) {
    return s;
}


function sc_boolean2string(b) {
    return b? "#t" : "#f";
}


function sc_char2string(c) {
    return c;
}


function sc_string2boolean(s) {
    return s === "#t";
}


function sc_string2char(s) {
    return s.charAt(0);
}


function sc_list2string(l) {
    var p = new sc_StringOutputPort();
    sc_write_list(l, p);
    return p.close();
}


function sc_string2list(s) {
    var p = new sc_StringInputPort(s);
    return sc_read_list(p);
}


function sc_vector2string(v) {
    var p = new sc_StringOutputPort();
    sc_write_vector(v, p);
    return p.close();
}


function sc_string2vector(s) {
    var p = new sc_StringInputPort(s);
    return sc_read_vector(p);
}


function sc_record2string(r) {
    var p = new sc_StringOutputPort();
    sc_write_record(r, p);
    return p.close();
}


function sc_string2record(s) {
    var p = new sc_StringInputPort(s);
    return sc_read_record(p);
}


function sc_procedure2string(p) {
    var p2 = new sc_StringOutputPort();
    sc_write(p, p2);
    return p2.close();
}


function sc_string2procedure(s) {
    var p = new sc_StringInputPort(s);
    return sc_read(p);
}


function sc_port2string(p) {
    var p2 = new sc_StringOutputPort();
    sc_write(p, p2);
    return p2.close();
}


function sc_string2port(s) {
    var p = new sc_StringInputPort(s);
    return sc_read(p);
}


function sc_input_port_open_p(p) {
    return p.isOpen();
}


function sc_output_port_open_p(p) {
    return p.isOpen();
}


function sc_input_port_readtable(p) {
    return p.readtable;
}


function sc_output_port_write_mode(p) {
    return p.writeMode;
}


function sc_current_input_port() {
    return SC_DEFAULT_IN;
}


function sc_current_output_port() {
    return SC_DEFAULT_OUT;
}


function sc_with_input_from_string(s, thunk) {
    var p = new sc_StringInputPort(s);
    Analyze the following piece of code: string2symbol(s) {
    return sc_SYMBOL_PREFIX + s;
}


function sc_string2jsstring(s) {
    return s;
}


function sc_symbol2jsstring(s) {
    return s.slice(1);
}


function sc_keyword2jsstring(k) {
    return k.slice(1);
}


function sc_jsstring2keyword(s) {
    return sc_KEYWORD_PREFIX + s;
}


function sc_isKeyword(s) {
    return (typeof s === "string") &&
	(s.charAt(0) === sc_KEYWORD_PREFIX);
}



var sc_gensym = function() {
    var counter = 1000;
    return function(sym) {
	counter++;
	if (!sym) sym = sc_SYMBOL_PREFIX;
	return sym + "s" + counter + "~" + "^sC-GeNsYm ";
    };
}();



function sc_isEqual(o1, o2) {
    return ((o1 === o2) ||
	    (sc_isPair(o1) && sc_isPair(o2)
	     && sc_isPairEqual(o1, o2, sc_isEqual)) ||
	    (sc_isVector(o1) && sc_isVector(o2)
	     && sc_isVectorEqual(o1, o2, sc_isEqual)));
}


function sc_number2symbol(x, radix) {
    return sc_SYMBOL_PREFIX + sc_number2jsstring(x, radix);
}


var sc_number2string = sc_number2jsstring;


function sc_symbol2number(s, radix) {
    return sc_jsstring2number(s.slice(1), radix);
}


var sc_string2number = sc_jsstring2number;


function sc_string2integer(s, radix) {
    if (!radix) return +s;
    return parseInt(s, radix);
}


function sc_string2real(s) {
    return +s;
}



function sc_isSymbol(s) {
    return (typeof s === "string") &&
	(s.charAt(0) === sc_SYMBOL_PREFIX);
}


function sc_symbol2string(s) {
    return s.slice(1);
}


function sc_string2symbol(s) {
    return sc_SYMBOL_PREFIX + s;
}


function sc_symbolAppend() {
    var res = sc_SYMBOL_PREFIX;
    for (var i = 0; i < arguments.length; i++)
	res += arguments[i].slice(1);
    return res;
}


function sc_char2string(c) { return c.val; }


function sc_char2symbol(c) { return sc_SYMBOL_PREFIX + c.val; }


function sc_isString(s) {
    return (typeof s === "string") &&
	(s.charAt(0)!== sc_SYMBOL_PREFIX);
}


var sc_makeString = sc_makejsString;



function sc_string() {
    for (var i = 0; i < arguments.length; i++)
	arguments[i] = arguments[i].val;
    return "".concat.apply("", arguments);
}


function sc_stringLength(s) { return s.length; }


function sc_stringRef(s, k) {
    return new sc_Char(s.charAt(k));
}





function sc_isStringEqual(s1, s2) {
    return s1 === s2;
}

function sc_isStringLess(s1, s2) {
    return s1 < s2;
}

function sc_isStringGreater(s1, s2) {
    return s1 > s2;
}

function sc_isStringLessEqual(s1, s2) {
    return s1 <= s2;
}

function sc_isStringGreaterEqual(s1, s2) {
    return s1 >= s2;
}

function sc_isStringCIEqual(s1, s2) {
    return s1.toLowerCase() === s2.toLowerCase();
}

function sc_isStringCILess(s1, s2) {
    return s1.toLowerCase() < s2.toLowerCase();
}

function sc_isStringCIGreater(s1, s2) {
    return s1.toLowerCase() > s2.toLowerCase();
}

function sc_isStringCILessEqual(s1, s2) {
    return s1.toLowerCase() <= s2.toLowerCase();
}

function sc_isStringCIGreaterEqual(s1, s2) {
    return s1.toLowerCase() >= s2.toLowerCase();
}

function sc_substring(s, start, end) {
    return s.substring(start, end);
}

function sc_stringAppend() {
    var res = "";
    for (var i = 0; i < arguments.length; i++)
	res += arguments[i].val;
    return res;
}

function sc_stringMap(f, s) {
    var res = "";
    for (var i = 0; i < s.length; i++)
	res += f(s.charCodeAt(i));
    return res;
}

function sc_stringForall(p, s) {
    for (var i = 0; i < s.length; i++)
	if (!p(s.charCodeAt(i))) return false;
    return true;
}

function sc_stringExists(p, s) {
    for (var i = 0; i < s.length; i++)
	if (p(s.charCodeAt(i))) return true;
    return false;
}

function sc_stringFilter(p, s) {
    var res = "";
    for (var i = 0; i < s.length; i++)
	if (p(s.charCodeAt(i))) res += s.charAt(i);
    return res;
}

function sc_stringFold(f, init, s) {
    for (var i = 0, res = init; i < s.length; i++)
	res = f(s.charCodeAt(i), res);
    return res;
}

function sc_stringFoldRight(f, init, s) {
    for (var i = s.length - 1, res = init; i >= 0; i--)
	res = f(s.charCodeAt(i), res);
    return res;
}

function sc_stringSplit(sep, s) {
    var a = s.split(sep);
    for (var i = 0; i < a.length; i++)
	a[i] = new sc_String(a[i]);
    return a;
}

function sc_stringToList(s) {
    var l = new sc_ConsCell(null, null);
    for (var i = s.length - 1; i >= 0; i--)
	l = new sc_ConsCell(new sc_Char(s.charAt(i)), l);
    return l;
}

function sc_list2string(l) {
    var s = "";
    for (var p = l; p; p = p.cdr)
	s += p.car.val;
    return s;
}

function sc_stringUnfold(f, seed) {
    var res = "";
    while (true) {
	var r = f(seed);
	if (r === false) return res;
	res += String.fromCharCode(r[0]);
	seed = r[1];
    }
}
 Analyze the following piece of code: (s1, s2) {
    return s1.toLowerCase() > s2.toLowerCase();
}

function sc_isStringCILessEqual(s1, s2) {
    return s1.toLowerCase() <= s2.toLowerCase();
}

function sc_isStringCIGreaterEqual(s1, s2) {
    return s1.toLowerCase() >= s2.toLowerCase();
}


function sc_substring(s, start, end) {
    return s.substring(start, end);
}


function sc_isSubstring_at(s1, s2, i) {
    return s2 == s1.substring(i, i+ s2.length);
}


function sc_stringAppend() {
    return "".concat.apply("", arguments);
}


var sc_string2list = sc_jsstring2list;


var sc_list2string = sc_list2jsstring;


function sc_stringCopy(s) {
    return s;
}




function sc_keyword2string(o) {
    return o.slice(1);
}


function sc_string2keyword(o) {
    return sc_KEYWORD_PREFIX + o;
}

String.prototype.sc_toDisplayString = function() {
    if (this.charAt(0) === sc_SYMBOL_PREFIX)
		return this.slice(1);
    else if (this.charAt(0) === sc_KEYWORD_PREFIX)
	return ":" + this.slice(1);
    else
	return this.toString();
};

String.prototype.sc_toWriteString = function() {
    if (this.charAt(0) === sc_SYMBOL_PREFIX)
		return this.slice(1);
    else if (this.charAt(0) === sc_KEYWORD_PREFIX)
	return ":" + this.slice(1);
    else
	return '"' + sc_escapeWriteString(this) + '"';
};

var BgL_testzd2boyerzd2;
var BgL_nboyerzd2benchmarkzd2;
var BgL_setupzd2boyerzd2;


var translate_term_nboyer;
var translate_args_nboyer;
var untranslate_term_nboyer;
var BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer;
var BgL_sc_za2symbolzd2recordszd2alistza2_2z00_nboyer;
var translate_alist_nboyer;
var apply_subst_nboyer;
var apply_subst_lst_nboyer;
var tautologyp_nboyer;
var if_constructor_nboyer;
var rewrite_count_nboyer;
var rewrite_nboyer;
var rewrite_args_nboyer;
var unify_subst_nboyer;
var one_way_unify1_nboyer;
var false_term_nboyer;
var true_term_nboyer;
var trans_of_implies1_nboyer;
var is_term_equal_nboyer;
var is_term_member_nboyer;
var const_nboyer;
var sc_const_3_nboyer;
var sc_const_4_nboyer;
{
    (sc_const_4_nboyer = (new sc_Pair("\u1E9Cimplies",(new sc_Pair((new sc_Pair("\u1E9Cand",(new sc_Pair((new sc_Pair("\u1E9Cimplies",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cand",(new sc_Pair((new sc_Pair("\u1E9Cimplies",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cz",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cand",(new sc_Pair((new sc_Pair("\u1E9Cimplies",(new sc_Pair("\u1E9Cz",(new sc_Pair("\u1E9Cu",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cimplies",(new sc_Pair("\u1E9Cu",(new sc_Pair("\u1E9Cx",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cand",(new sc_Pair((new sc_Pair("\u1E9Cimplies",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Ctrue",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cand",(new sc_Pair((new sc_Pair("\u1E9Cimplies",(new sc_Pair("\u1E9Ctrue",(new sc_Pair("\u1E9Ctrue",null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctrue",null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)),null)), Analyze the following piece of code: 1E9Cu",(new sc_Pair("\u1E9Cw",null)))))),null)))))),null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cimplies",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cw",null)))))),null)))))));
    (sc_const_3_nboyer = sc_list((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ccompile",(new sc_Pair("\u1E9Cform",null)))),(new sc_Pair((new sc_Pair("\u1E9Creverse",(new sc_Pair((new sc_Pair("\u1E9Ccodegen",(new sc_Pair((new sc_Pair("\u1E9Coptimize",(new sc_Pair("\u1E9Cform",null)))),(new sc_Pair((new sc_Pair("\u1E9Cnil",null)),null)))))),null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ceqp",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Cy",null)))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cgreaterp",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Clessp",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cx",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Clesseqp",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair((new sc_Pair("\u1E9Clessp",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cx",null)))))),null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cgreatereqp",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair((new sc_Pair("\u1E9Clessp",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cboolean",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Cor",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Ct",null)),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cf",null)),null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ciff",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cand",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cx",null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cz",null))))))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cz",null)))))),null))))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cz",(new sc_Pair("\u1E9Cy",null))))))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cz",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cx",null)))))),null))))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cz",null))))),(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))),null))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cx",null)))))),null))))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cx",null)))))),null)))),null))))))), ( Analyze the following piece of code: u1E9Cimplies",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cimplies",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cx",null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ceven1",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair((new sc_Pair("\u1E9Czerop",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Ct",null)),(new sc_Pair((new sc_Pair("\u1E9Codd",(new sc_Pair((new sc_Pair("\u1E9Csub1",(new sc_Pair("\u1E9Cx",null)))),null)))),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ccountps-",(new sc_Pair("\u1E9Cl",(new sc_Pair("\u1E9Cpred",null)))))),(new sc_Pair((new sc_Pair("\u1E9Ccountps-loop",(new sc_Pair("\u1E9Cl",(new sc_Pair("\u1E9Cpred",(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cfact-",(new sc_Pair("\u1E9Ci",null)))),(new sc_Pair((new sc_Pair("\u1E9Cfact-loop",(new sc_Pair("\u1E9Ci",(new sc_Pair((1),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Creverse-",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Creverse-loop",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cnil",null)),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cdivides",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Czerop",(new sc_Pair((new sc_Pair("\u1E9Cremainder",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cx",null)))))),null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cassume-true",(new sc_Pair("\u1E9Cvar",(new sc_Pair("\u1E9Calist",null)))))),(new sc_Pair((new sc_Pair("\u1E9Ccons",(new sc_Pair((new sc_Pair("\u1E9Ccons",(new sc_Pair("\u1E9Cvar",(new sc_Pair((new sc_Pair("\u1E9Ct",null)),null)))))),(new sc_Pair("\u1E9Calist",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cassume-false",(new sc_Pair("\u1E9Cvar",(new sc_Pair("\u1E9Calist",null)))))),(new sc_Pair((new sc_Pair("\u1E9Ccons",(new sc_Pair((new sc_Pair("\u1E9Ccons",(new sc_Pair("\u1E9Cvar",(new sc_Pair((new sc_Pair("\u1E9Cf",null)),null)))))),(new sc_Pair("\u1E9Calist",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair("\u1E9Calist1",(new sc_Pair("\u1E9Calist2",null))))),(new sc_Pair((new sc_Pair("\u1E9Ccons",(new sc_Pair("\u1E9Cvar",(new sc_Pair((new sc_Pair("\u1E9Ct",null)),null)))))),(new sc_Pair("\u1E9Calist1",(new sc_Pair("\u1E9Ccons",(new sc_Pair("\u1E9Cvar",(new sc_Pair((new sc_Pair("\u1E9Cf",null)),null))))),(new sc_Pair("\u1E9Calist2",null))))))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair("\u1E9Calist1",(new sc_Pair("\u1E9Calist2",null))))),(new sc_Pair((new sc_Pair("\u1E9Ccons",(new sc_Pair("\u1E9Cvar",(new sc_Pair((new sc_Pair("\u1E9Ct",null)),null)))))),(new sc_Pair((new sc_Pair("\u1E9Ccons",(new sc_Pair("\u1E9Cvar",(new sc_Pair((new sc_Pair("\u1E9Cf",null)),null)))))),(new sc_Pair("\u1E9Calist2",(new sc_Pair("\u1E9Ccons",(new sc_Pair("\u1E9Cvar",(new sc_Pair((new sc_Pair("\u1E9Ct",null)),null))))),(new sc_Pair("\u1E9Calist1",null))))))))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair("\u1E9Calist1",(new sc_Pair("\u1E9Calist2",null))))),(new sc_Pair((new sc_Pair("\u1E9Ccons",(new sc_Pair("\u1E9Cvar",(new sc_Pair((new sc_Pair("\u1E9Ct",null)),null)))))),(new sc_Pair((new sc_Pair("\u1E9Ccons",(new sc_Pair("\u1E9Cvar",(new sc_Pair((new sc_Pair("\u1E9Cf",null)),null)))))),(new sc_Pair((new sc_Pair("\u1E9Ccons",(new sc_Pair("\u1E9Cvar",(new sc_Pair((new sc_Pair("\u1E9Ct",null)),null)))))),(new sc_Pair("\u1E9Calist3",(new sc_Pair("\u1E9Ccons",(new sc_Pair("\u1E9Cvar",(new sc_Pair((new sc_Pair("\u1E9Cf",null)),null))))),(new sc_Pair("\u1E9Calist4",null))))))))))))), (new sc Analyze the following piece of code: ("\u1E9Calist",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctautology-checker",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Ctautologyp",(new sc_Pair((new sc_Pair("\u1E9Cnormalize",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Cnil",null)),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cfalsify",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Cfalsify1",(new sc_Pair((new sc_Pair("\u1E9Cnormalize",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Cnil",null)),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cprime",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Cand",(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair((new sc_Pair("\u1E9Czerop",(new sc_Pair("\u1E9Cx",null)))),null)))),(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))),null)))))),null)))),(new sc_Pair((new sc_Pair("\u1E9Cprime1",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Csub1",(new sc_Pair("\u1E9Cx",null)))),null)))))),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cand",(new sc_Pair("\u1E9Cp",(new sc_Pair("\u1E9Cq",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair("\u1E9Cp",(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair("\u1E9Cq",(new sc_Pair((new sc_Pair("\u1E9Ct",null)),(new sc_Pair((new sc_Pair("\u1E9Cf",null)),null)))))))),(new sc_Pair((new sc_Pair("\u1E9Cf",null)),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cor",(new sc_Pair("\u1E9Cp",(new sc_Pair("\u1E9Cq",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair("\u1E9Cp",(new sc_Pair((new sc_Pair("\u1E9Ct",null)),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair("\u1E9Cq",(new sc_Pair((new sc_Pair("\u1E9Ct",null)),(new sc_Pair((new sc_Pair("\u1E9Cf",null)),null)))))))),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair("\u1E9Cp",null)))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair("\u1E9Cp",(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair("\u1E9Cq",null))))),(new sc_Pair((new sc_Pair("\u1E9Cf",null)),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cimplies",(new sc_Pair("\u1E9Cp",(new sc_Pair("\u1E9Cq",null))))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair("\u1E9Cp",(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair("\u1E9Cq",null))))),(new sc_Pair((new sc_Pair("\u1E9Cf",null)),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ciff",(new sc_Pair("\u1E9Cp",(new sc_Pair("\u1E9Cq",null))))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair("\u1E9Cp",(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair("\u1E9Cq",null))))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair("\u1E9Cq",(new sc_Pair((new sc_Pair("\u1E9Ct",null)),(new sc_Pair((new sc_Pair("\u1E9Cf",null)),null))))))),(new sc_Pair((new sc_Pair("\u1E9Cf",null)),null)))))))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cxor",(new sc_Pair("\u1E9Cp",(new sc_Pair("\u1E9Cq",null))))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair("\u1E9Cp",(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair("\u1E9Cq",null))))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair("\u1E9Cq",(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair("\u1E9Cq",null))))))),(new sc_Pair((new sc_Pair("\u1E9Cf",null)),null)))))))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cimplies",(new sc_Pair("\u1E9Cnot",(new sc_Pair("\u1E9Cp",(new sc_Pair("\u1E9Cq",null))))))))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair("\u1E9Cp",(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair("\u1E9Cq",null))))),(new sc Analyze the following piece of code: u1E9Cf",null)),(new sc_Pair((new sc_Pair("\u1E9Ct",null)),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cimplies",(new sc_Pair("\u1E9Cp",(new sc_Pair("\u1E9Cq",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair("\u1E9Cp",(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair("\u1E9Cq",(new sc_Pair((new sc_Pair("\u1E9Ct",null)),(new sc_Pair((new sc_Pair("\u1E9Cf",null)),null)))))))),(new sc_Pair((new sc_Pair("\u1E9Ct",null)),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair((new sc_Pair("\u1E9Cnumberp",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",(new sc_Pair("\u1E9Cc",null)))))))),(new sc_Pair("\u1E9Cd",(new sc_Pair("\u1E9Ce",null)))))))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair("\u1E9Ca",(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair("\u1E9Cb",(new sc_Pair("\u1E9Cd",(new sc_Pair("\u1E9Ce",null)))))))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair("\u1E9Cc",(new sc_Pair("\u1E9Cd",(new sc_Pair("\u1E9Ce",null)))))))),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Czerop",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Cor",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair((new sc_Pair("\u1E9Cnumberp",(new sc_Pair("\u1E9Cx",null)))),null)))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair("\u1E9Cz",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cz",null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair("\u1E9Cz",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cz",null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cz",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cz",null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cz",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cz",null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cz",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cz",null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cz",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal", Analyze the following piece of code: ("\u1E9Cplus",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null)))))),(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cand",(new sc_Pair((new sc_Pair("\u1E9Czerop",(new sc_Pair("\u1E9Ca",null)))),(new sc_Pair((new sc_Pair("\u1E9Czerop",(new sc_Pair("\u1E9Cb",null)))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cx",null)))))),(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cc",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Cb",null)))),(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Cc",null)))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Czero",null)),(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair((new sc_Pair("\u1E9Clessp",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cx",null)))))),null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cand",(new sc_Pair((new sc_Pair("\u1E9Cnumberp",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Cor",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))),(new sc_Pair((new sc_Pair("\u1E9Czerop",(new sc_Pair("\u1E9Cy",null)))),null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cmeaning",(new sc_Pair((new sc_Pair("\u1E9Cplus-tree",(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))),(new sc_Pair("\u1E9Ca",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair((new sc_Pair("\u1E9Cmeaning",(new sc_Pair((new sc_Pair("\u1E9Cplus-tree",(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))),(new sc_Pair("\u1E9Ca",null)))))),(new sc_Pair("\u1E9Cb",null))))),null)))),(new sc_Pair((new sc_Pair("\u1E9Cmeaning",(new sc_Pair((new sc_Pair("\u1E9Ctimes-tree",(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))),(new sc_Pair("\u1E9Ca",null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair((new sc_Pair("\u1E9Cmeaning",(new sc_Pair((new sc_Pair("\u1E9Ctimes-tree",(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))),(new sc_Pair("\u1E9Ca",null)))))),(new sc_Pair("\u1E9Cb",null))))),null)))),(new sc_Pair((new sc_Pair("\u1E9Cmeaning",(new sc_Pair((new sc_Pair("\u1E9Cpow-tree",(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))),(new sc_Pair("\u1E9Ca",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cpow",(new sc_Pair((new sc_Pair("\u1E9Cmeaning",(new sc_Pair((new sc_Pair("\u1E9Cpow-tree",(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))),(new sc_Pair("\u1E9Ca",null)))))),(new sc_Pair("\u1E9Cb",null))))),null)))),(new sc_Pair((new sc_Pair("\u1E9Cmeaning",(new sc_Pair((new sc_Pair("\u1E9Clog-tree",(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))),(new sc_Pair("\u1E9Ca",null)))))),(new sc_Pair((new sc_Pair("\u1E9Clog",(new sc_Pair((new sc_Pair("\u1E9Cmeaning",(new sc_Pair((new sc_Pair("\u1E9Clog-tree",(new sc_Pair((new sc_Pair("\u1E9Cappend",(new Analyze the following piece of code: 9Cmeaning",(new sc_Pair((new sc_Pair("\u1E9Cplus-tree",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair("\u1E9Ca",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cmeaning",(new sc_Pair((new sc_Pair("\u1E9Cplus-tree",(new sc_Pair("\u1E9Cy",null)))),(new sc_Pair("\u1E9Ca",null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cmeaning",(new sc_Pair((new sc_Pair("\u1E9Cplus-tree",(new sc_Pair((new sc_Pair("\u1E9Cplus-fringe",(new sc_Pair("\u1E9Cx",null)))),null)))),(new sc_Pair("\u1E9Ca",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair((new sc_Pair("\u1E9Cmeaning",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Ca",null)))))),null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair("\u1E9Cz",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cz",null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Creverse",(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null)))))),null)))),(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair((new sc_Pair("\u1E9Creverse",(new sc_Pair("\u1E9Cb",null)))),(new sc_Pair((new sc_Pair("\u1E9Creverse",(new sc_Pair("\u1E9Ca",null)))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cz",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cz",null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair("\u1E9Cz",null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cz",null)))))),null)))),(new sc_Pair("\u1E9Ca",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cz",null)))))),null)))),(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cz",null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair("\u1E9Cz",null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cz",null)))))),null)))),(new sc_Pair("\u1E9Ca",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cz",null)))))),null)))),(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cz",null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair("\u1E9Cz",null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Ctimes",( Analyze the following piece of code: )))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cor",(new sc_Pair((new sc_Pair("\u1E9Czerop",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Czerop",(new sc_Pair("\u1E9Cy",null)))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cexec",(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair("\u1E9Cpds",(new sc_Pair("\u1E9Cenvrn",null)))))))),(new sc_Pair((new sc_Pair("\u1E9Cexec",(new sc_Pair("\u1E9Cy",(new sc_Pair((new sc_Pair("\u1E9Cexec",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cpds",(new sc_Pair("\u1E9Cenvrn",null)))))))),(new sc_Pair("\u1E9Cenvrn",null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cmc-flatten",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair((new sc_Pair("\u1E9Cflatten",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair("\u1E9Cy",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cmember",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cor",(new sc_Pair((new sc_Pair("\u1E9Cmember",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Ca",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cmember",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cb",null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cmember",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Creverse",(new sc_Pair("\u1E9Cy",null)))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cmember",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Clength",(new sc_Pair((new sc_Pair("\u1E9Creverse",(new sc_Pair("\u1E9Cx",null)))),null)))),(new sc_Pair((new sc_Pair("\u1E9Clength",(new sc_Pair("\u1E9Cx",null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cmember",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Ctake",(new sc_Pair((new sc_Pair("\u1E9Clength",(new sc_Pair((new sc_Pair("\u1E9Creverse",(new sc_Pair("\u1E9Cx",null)))),null)))),(new sc_Pair("\u1E9Cy",null))))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cor",(new sc_Pair((new sc_Pair("\u1E9Cmember",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Ca",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cmember",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cdrop",(new sc_Pair((new sc_Pair("\u1E9Clength",(new sc_Pair((new sc_Pair("\u1E9Creverse",(new sc_Pair("\u1E9Cx",null)))),null)))),(new sc_Pair("\u1E9Cy",null))))))),null))))),(new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null))))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cmember",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cfilter",(new sc_Pair((new sc_Pair("\u1E9Clambda",(new sc_Pair("\u1E9Ca",(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null))))))),null))))),(new sc_Pair("\u1E9Cbody",null))))))),(new sc_Pair("\u1E9Cy",null))))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cor",(new sc_Pair((new sc_Pair("\u1E9Cmember",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Ca",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cmember",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cfilter",(new sc_Pair((new sc_Pair("\u1E9Clambda",(new sc_Pair("\u1E9Ca",(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null))))))),null))))),(new sc_Pair("\u1E9Cbody",null))))))),(new sc_Pair("\u1E9Cy",null))))))),(new sc_Pair("\u1E9C Analyze the following piece of code: u1E9Ca",(new sc_Pair((new sc_Pair("\u1E9Cintersect",(new sc_Pair("\u1E9Cb",(new sc_Pair("\u1E9Cc",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cand",(new sc_Pair((new sc_Pair("\u1E9Cmember",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cmember",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cc",null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cnth",(new sc_Pair((new sc_Pair("\u1E9Czero",null)),(new sc_Pair("\u1E9Ci",null)))))),(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cexp",(new sc_Pair("\u1E9Ci",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cj",(new sc_Pair("\u1E9Ck",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair((new sc_Pair("\u1E9Cexp",(new sc_Pair("\u1E9Ci",(new sc_Pair("\u1E9Cj",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cexp",(new sc_Pair("\u1E9Ci",(new sc_Pair("\u1E9Ck",null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cexp",(new sc_Pair("\u1E9Ci",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cj",(new sc_Pair("\u1E9Ck",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cexp",(new sc_Pair((new sc_Pair("\u1E9Cexp",(new sc_Pair("\u1E9Ci",(new sc_Pair("\u1E9Cj",null)))))),(new sc_Pair("\u1E9Ck",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Creverse-loop",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair((new sc_Pair("\u1E9Creverse",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair("\u1E9Cy",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Creverse-loop",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cnil",null)),null)))))),(new sc_Pair((new sc_Pair("\u1E9Creverse",(new sc_Pair("\u1E9Cx",null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ccount-list",(new sc_Pair("\u1E9Cz",(new sc_Pair((new sc_Pair("\u1E9Csort-lp",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair((new sc_Pair("\u1E9Ccount-list",(new sc_Pair("\u1E9Cz",(new sc_Pair((new sc_Pair("\u1E9Cnil",null)),null)))))),null)),(new sc_Pair("\u1E9Clength",(new sc_Pair("\u1E9Cx",null))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ccount-list",(new sc_Pair("\u1E9Cz",(new sc_Pair((new sc_Pair("\u1E9Csort-lp",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cnil",null)),null))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair((new sc_Pair("\u1E9Ccount-list",(new sc_Pair("\u1E9Cz",(new sc_Pair((new sc_Pair("\u1E9Cnil",null)),null)))))),null)),(new sc_Pair("\u1E9Clength",(new sc_Pair("\u1E9Cx",null))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ccount-list",(new sc_Pair("\u1E9Cz",(new sc_Pair((new sc_Pair("\u1E9Csort-lp",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Ccons",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null)))))),null))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair((new sc_Pair("\u1E9Ccount-list",(new sc_Pair("\u1E9Cz",(new sc_Pair((new sc_Pair("\u1E9Ccons",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null)))))),null))))),null))),(new sc_Pair("\u1E9Clength",(new sc_Pair("\u1E9Cx",null))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ccount-list",(new sc_Pair("\u1E9Cz",(new sc_Pair((new sc_Pair("\u1E9Csort-lp",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Ccons",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null)))))),(new sc_Pair("\u1E9Cc",null))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair((new sc_Pair("\u1E9Ccount-list",(new sc_Pair("\u1E9Cz",(new sc_Pair((new sc_Pair("\u1E9Ccons",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E Analyze the following piece of code: (new sc_Pair("\u1E9Cx",null)))))),(new sc_Pair((new sc_Pair("\u1E9Ccount-list",(new sc_Pair("\u1E9Cz",(new sc_Pair("\u1E9Cy",null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cc",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cb",(new sc_Pair("\u1E9Cc",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair((new sc_Pair("\u1E9Cremainder",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cy",(new sc_Pair((new sc_Pair("\u1E9Cquotient",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Cx",null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cpower-eval",(new sc_Pair((new sc_Pair("\u1E9Cbig-plus1",(new sc_Pair("\u1E9Cl",(new sc_Pair("\u1E9Ci",(new sc_Pair("\u1E9Cbase",null)))))))),(new sc_Pair("\u1E9Cbase",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair((new sc_Pair("\u1E9Cpower-eval",(new sc_Pair("\u1E9Cl",(new sc_Pair("\u1E9Cbase",null)))))),(new sc_Pair("\u1E9Ci",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cpower-eval",(new sc_Pair((new sc_Pair("\u1E9Cbig-plus",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Ci",(new sc_Pair("\u1E9Cbase",null)))))))))),(new sc_Pair("\u1E9Cbase",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Ci",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair((new sc_Pair("\u1E9Cpower-eval",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cbase",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cpower-eval",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cbase",null)))))),null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cremainder",(new sc_Pair("\u1E9Cy",(new sc_Pair((1),null)))))),(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Clesseq",(new sc_Pair("\u1E9Cx",(new sc_Pair((1),null)))))),(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair((1),null)))))),null))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cy",(new sc_Pair((1),null)))))),null))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",(new sc_Pair((1),null))))))),null))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cz",(new sc_Pair("\u1E9Cy",(new sc_Pair((1),null))))))))),null))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cz",(new sc_Pair("\u1E9Cz",(new sc_Pair("\u1E9Cy",(new sc_Pair((1),null))))))))))),null))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cz",(new sc_Pair("\u1E9Cz",(new sc_Pair("\u1E9Cz",(new sc_Pair("\u1E9Cy",(new sc_Pair((1),null))))))))))))),null))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cz",(new sc_Pair("\u1E9Cz",(new sc_Pair("\u1E9Cz",(new sc_Pair("\u1E9Cz",(new sc_Pair("\u1E9Cy",(new sc_Pair((1),null))))))))))))))),null))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cz",(new sc_Pair("\u1E9Cz",(new sc_Pair("\u1E9Cz",(new sc_Pair("\u1E9Cz",(new sc_Pair("\u1E9Cz",(new sc_Pair("\u1E9Cy",(new sc_Pair((1),null)))) Analyze the following piece of code: sp",(new sc_Pair((new sc_Pair("\u1E9Cremainder",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair((new sc_Pair("\u1E9Czerop",(new sc_Pair("\u1E9Cy",null)))),null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cremainder",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cx",null)))))),(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Clessp",(new sc_Pair((new sc_Pair("\u1E9Cquotient",(new sc_Pair("\u1E9Ci",(new sc_Pair("\u1E9Cj",null)))))),(new sc_Pair("\u1E9Ci",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cand",(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair((new sc_Pair("\u1E9Czerop",(new sc_Pair("\u1E9Ci",null)))),null)))),(new sc_Pair((new sc_Pair("\u1E9Cor",(new sc_Pair((new sc_Pair("\u1E9Czerop",(new sc_Pair("\u1E9Cj",null)))),(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cj",(new sc_Pair((1),null)))))),null)))),null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Clessp",(new sc_Pair((new sc_Pair("\u1E9Cremainder",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair("\u1E9Cx",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cand",(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair((new sc_Pair("\u1E9Czerop",(new sc_Pair("\u1E9Cy",null)))),null)))),(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair((new sc_Pair("\u1E9Czerop",(new sc_Pair("\u1E9Cx",null)))),null)))),(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair((new sc_Pair("\u1E9Clessp",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cpower-eval",(new sc_Pair((new sc_Pair("\u1E9Cpower-rep",(new sc_Pair("\u1E9Ci",(new sc_Pair("\u1E9Cbase",null)))))),(new sc_Pair("\u1E9Cbase",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Ci",null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cpower-eval",(new sc_Pair((new sc_Pair("\u1E9Cbig-plus",(new sc_Pair((new sc_Pair("\u1E9Cpower-rep",(new sc_Pair("\u1E9Ci",(new sc_Pair("\u1E9Cbase",null)))))),(new sc_Pair("\u1E9Cbase",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Ci",null)))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Ci",null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cpower-eval",(new sc_Pair((new sc_Pair("\u1E9Cbig-times",(new sc_Pair((new sc_Pair("\u1E9Cpower-rep",(new sc_Pair("\u1E9Ci",(new sc_Pair("\u1E9Cbase",null)))))),(new sc_Pair("\u1E9Cbase",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Ci",null)))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Ci",null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cpower-eval",(new sc_Pair((new sc_Pair("\u1E9Cbig-minus",(new sc_Pair((new sc_Pair("\u1E9Cpower-rep",(new sc_Pair("\u1E9Ci",(new sc_Pair("\u1E9Cbase",null)))))),(new sc_Pair("\u1E9Cbase",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Ci",null)))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Ci",null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cpower-eval",(new sc_Pair((new sc_Pair("\u1E9Cbig-div",(new sc_Pair((new sc_Pair("\u1E9Cpower-rep",(new sc_Pair("\u1E9Ci",(new sc_Pair("\u1E9Cbase",null)))))),(new sc_Pair("\u1E9Cbase",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Ci",null)))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Ci",null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cpower-eval",(new sc_Pair((new sc_Pair("\u1E9Cbig-modulo",(new sc_Pair((new sc_Pair("\u1E9Cpower-rep",(new sc_Pair("\u1E9Ci",(new sc_Pair("\u1E9Cbase",null)))))),(new sc_Pair("\u1E9Cbase",null)))))),(new Analyze the following piece of code: _Pair((new sc_Pair("\u1E9Cpower-rep",(new sc_Pair("\u1E9Cj",(new sc_Pair("\u1E9Cbase",null)))))),(new sc_Pair((new sc_Pair("\u1E9Czero",null)),(new sc_Pair("\u1E9Cbase",null)))))))))),(new sc_Pair("\u1E9Cbase",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Ci",(new sc_Pair("\u1E9Cj",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cgcd",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cgcd",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cx",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cnth",(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null)))))),(new sc_Pair("\u1E9Ci",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair((new sc_Pair("\u1E9Cnth",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Ci",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cnth",(new sc_Pair("\u1E9Cb",(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair("\u1E9Ci",(new sc_Pair((new sc_Pair("\u1E9Clength",(new sc_Pair("\u1E9Ca",null)))),null)))))),null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair("\u1E9Cx",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Cy",null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cx",null)))))),(new sc_Pair("\u1E9Cx",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Cy",null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cz",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cz",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair("\u1E9Cc",(new sc_Pair("\u1E9Ci",null)))))),null))))),(new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cy",(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair("\u1E9Cc",(new sc_Pair("\u1E9Ci",null)))))),null))))))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair("\u1E9Cc",(new sc_Pair("\u1E9Ci",null)))))),null))))),(new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cz",(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair("\u1E9Cc",(new sc_Pair("\u1E9Ci",null)))))),null))))))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair("\u1E9Cc",(new sc_Pair("\u1E9Ci",null)))))),null))))),(new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cy",(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair("\u1E9Cc",(new sc_Pair("\u1E9Ci",null)))))),null))))))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair("\u1E9Cc",(new sc_Pair("\u1E9Ci",null)))))),null))))),(new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cz",(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair("\u1E9Cc",(new sc_Pair("\u1E9Ci",null)))))),null))))))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair("\u1E9Cc",(new sc_Pair("\u1E9Ci",null)))))),null))))),(new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cz",(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair("\u1E9Cc",(new sc_Pair("\u1E9Ci",null)))))),null))))))))), (new sc_Pair("\u1E Analyze the following piece of code: u1E9Cw",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cc",(new sc_Pair("\u1E9Cx",null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cw",(new sc_Pair("\u1E9Cx",null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cremainder",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cz",null)))))),(new sc_Pair("\u1E9Cz",null)))))),(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cb",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cc",null)))))),null)))))),(new sc_Pair("\u1E9Ca",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cb",(new sc_Pair("\u1E9Cc",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cz",null)))))),null)))),(new sc_Pair("\u1E9Cz",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair("\u1E9Cy",null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Clessp",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cz",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Clessp",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cz",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Clessp",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cz",null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cz",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cand",(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair((new sc_Pair("\u1E9Czerop",(new sc_Pair("\u1E9Cz",null)))),null)))),(new sc_Pair((new sc_Pair("\u1E9Clessp",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cz",null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cz",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cz",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cz",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cz",null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cz",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cz",null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cz",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cz",null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cz",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cz",null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cz",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cz",null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cz",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx", Analyze the following piece of code: Clessp",(new sc_Pair("\u1E9Cy",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair((new sc_Pair("\u1E9Czerop",(new sc_Pair("\u1E9Cx",null)))),null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cgcd",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cz",null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cz",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cz",(new sc_Pair((new sc_Pair("\u1E9Cgcd",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cvalue",(new sc_Pair((new sc_Pair("\u1E9Cnormalize",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair("\u1E9Ca",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cvalue",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Ca",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cflatten",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Ccons",(new sc_Pair("\u1E9Cy",(new sc_Pair((new sc_Pair("\u1E9Cnil",null)),null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cand",(new sc_Pair((new sc_Pair("\u1E9Cnlistp",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Clistp",(new sc_Pair((new sc_Pair("\u1E9Cgopher",(new sc_Pair("\u1E9Cx",null)))),null)))),(new sc_Pair((new sc_Pair("\u1E9Clistp",(new sc_Pair("\u1E9Cx",null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Csamefringe",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cflatten",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Cflatten",(new sc_Pair("\u1E9Cy",null)))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cgreatest-factor",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cz",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cz",(new sc_Pair((new sc_Pair("\u1E9Cgreatest-factor",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cnormalize",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair("\u1E9Ca",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cvalue",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Ca",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cflatten",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Ccons",(new sc_Pair("\u1E9Cy",(new sc_Pair((new sc_Pair("\u1E9Cnil",null)),null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cand",(new sc_Pair((new sc_Pair("\u1E9Cnlistp",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Clistp",(new sc_Pair((new sc_Pair("\u1E9Cgopher",(new sc_Pair("\u1E9Cx",null)))),null)))),(new sc_Pair((new sc_Pair("\u1E9Clistp",(new sc_Pair("\u1E9Cx",null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Csamefringe",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cflatten",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Cflatten",(new sc_Pair("\u1E9Cy",null)))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal", Analyze the following piece of code: new sc_Pair("\u1E9Czero",null)),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cand",(new sc_Pair((new sc_Pair("\u1E9Cor",(new sc_Pair((new sc_Pair("\u1E9Czerop",(new sc_Pair("\u1E9Cy",null)))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cy",(new sc_Pair((1),null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cgreatest-factor",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((1),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair((1),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cnumberp",(new sc_Pair((new sc_Pair("\u1E9Cgreatest-factor",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))),(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair((new sc_Pair("\u1E9Cand",(new sc_Pair((new sc_Pair("\u1E9Cor",(new sc_Pair((new sc_Pair("\u1E9Czerop",(new sc_Pair("\u1E9Cy",null)))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cy",(new sc_Pair((1),null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair((new sc_Pair("\u1E9Cnumberp",(new sc_Pair("\u1E9Cx",null)))),null)))),null)))))),null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes-list",(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair((new sc_Pair("\u1E9Ctimes-list",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Ctimes-list",(new sc_Pair("\u1E9Cy",null)))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cprime-list",(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))),(new sc_Pair((new sc_Pair("\u1E9Cand",(new sc_Pair((new sc_Pair("\u1E9Cprime-list",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Cprime-list",(new sc_Pair("\u1E9Cy",null)))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cz",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cy",(new sc_Pair((new sc_Pair("\u1E9C1+",null)),null)))),(new sc_Pair((new sc_Pair("\u1E9C1+",null)),null))))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cz",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cy",(new sc_Pair((new sc_Pair("\u1E9C1-",null)),null)))),(new sc_Pair((new sc_Pair("\u1E9C1-",null)),null))))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cz",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cy",(new sc_Pair((new sc_Pair("\u1E9C1*",null)),null)))),(new sc_Pair((new sc_Pair("\u1E9C1*",null)),null))))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cz",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cy",(new sc_Pair((new sc_Pair("\u1E9C1/",null)),null)))),(new sc_Pair((new sc_Pair("\u1E9C1/",null)),null))))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cz",(new sc_Pair((new sc_Pair("\u1E9Cpow",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9C1+",null)),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cz",(new sc_Pair((new sc_Pair("\u1E9Cpow",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9C1-",null)),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",( Analyze the following piece of code: 1E9Cw",(new sc_Pair("\u1E9Cz",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cand",(new sc_Pair((new sc_Pair("\u1E9Cnumberp",(new sc_Pair("\u1E9Cz",null)))),(new sc_Pair((new sc_Pair("\u1E9Cor",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cz",(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cw",(new sc_Pair((1),null)))))),null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cgreatereqp",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair((new sc_Pair("\u1E9Clessp",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cor",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cand",(new sc_Pair((new sc_Pair("\u1E9Cnumberp",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cy",(new sc_Pair((1),null)))))),null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cremainder",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cx",null)))))),(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null)))))),(new sc_Pair((1),null)))))),(new sc_Pair(sc_list("\u1E9Cand", (new sc_Pair("\u1E9Cnot",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Ca",(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))),null)))), (new sc_Pair("\u1E9Cnot",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cb",(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))),null)))), (new sc_Pair("\u1E9Cnumberp",(new sc_Pair("\u1E9Ca",null)))), (new sc_Pair("\u1E9Cnumberp",(new sc_Pair("\u1E9Cb",null)))), (new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Ca",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Ca",(new sc_Pair((new sc_Pair("\u1E9Cone",null)),null)))))),(new sc_Pair("\u1E9Cb",null))))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cb",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Ca",(new sc_Pair((new sc_Pair("\u1E9Cone",null)),null)))))),(new sc_Pair("\u1E9Cb",null))))))))))))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Ca",(new sc_Pair((new sc_Pair("\u1E9Cone",null)),null)))))),(new sc_Pair("\u1E9Cb",null))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cb",(new sc_Pair((new sc_Pair("\u1E9Cone",null)),null)))))),(new sc_Pair("\u1E9Ca",null))))))))))))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Ca",(new sc_Pair((new sc_Pair("\u1E9Cone",null)),null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cb",(new sc_Pair((new sc_Pair("\u1E9Cone",null)),null)))))),(new sc_Pair("\u1E9Czero",null))))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cb",(new sc_Pair((new sc_Pair("\u1E9Cone",null)),null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Ca",(new sc_Pair((new sc_Pair("\u1E9Cone",null)),null)))))),(new sc_Pair("\u1E9Czero",null))))))))))))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Ca",(new sc_Pair((new sc_Pair("\u1E9Cone",null)),null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Ca",(new sc_Pair((new sc_Pair("\u1E9Cone",null)),null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cb", Analyze the following piece of code: (new sc_Pair((new sc_Pair("\u1E9Csub1",(new sc_Pair("\u1E9Ca",null)))),(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Csub1",(new sc_Pair("\u1E9Cb",null)))),(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Clessp",(new sc_Pair((new sc_Pair("\u1E9Clength",(new sc_Pair((new sc_Pair("\u1E9Cdelete",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cl",null)))))),null)))),(new sc_Pair((new sc_Pair("\u1E9Clength",(new sc_Pair("\u1E9Cl",null)))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cmember",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cl",null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Csort2",(new sc_Pair((new sc_Pair("\u1E9Cdelete",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cl",null)))))),null)))),(new sc_Pair((new sc_Pair("\u1E9Cdelete",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Csort2",(new sc_Pair("\u1E9Cl",null)))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cdsort",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Csort2",(new sc_Pair("\u1E9Cx",null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Clength",(new sc_Pair((new sc_Pair("\u1E9Ccons",(new sc_Pair("\u1E9Cx1",(new sc_Pair((new sc_Pair("\u1E9Ccons",(new sc_Pair("\u1E9Cx2",(new sc_Pair((new sc_Pair("\u1E9Ccons",(new sc_Pair("\u1E9Cx3",(new sc_Pair((new sc_Pair("\u1E9Ccons",(new sc_Pair("\u1E9Cx4",(new sc_Pair((new sc_Pair("\u1E9Ccons",(new sc_Pair("\u1E9Cx5",(new sc_Pair((new sc_Pair("\u1E9Ccons",(new sc_Pair("\u1E9Cx6",(new sc_Pair("\u1E9Cx7",null)))))),null)))))),null)))))),null)))))),null)))))),null)))))),null)))),(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair((6),(new sc_Pair((new sc_Pair("\u1E9Clength",(new sc_Pair("\u1E9Cx7",null)))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair("\u1E9Cx",null)))),null)))),(new sc_Pair((2),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Cx",null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair("\u1E9Cx",null)))),null)))),(new sc_Pair((2),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Cx",null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair("\u1E9Cx",null)))),null)))),(new sc_Pair((3),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Cx",null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair("\u1E9Cx",null)))),null)))),(new sc_Pair((4),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Cx",null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair("\u1E9Cx",null)))),null)))),(new sc_Pair((5),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Cx",null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair("\u1E9Cx",null)))),null)))),(new sc_Pair((6),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Cx",null)))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair("\u1E9Cx",null)))),null)))),(new sc_Pair((7),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\ Analyze the following piece of code: new sc_Pair("\u1E9Cquotient",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))))),(new sc_Pair((2),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cquotient",(new sc_Pair("\u1E9Cy",(new sc_Pair((2),null)))))),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Csigma",(new sc_Pair((new sc_Pair("\u1E9Czero",null)),(new sc_Pair("\u1E9Ci",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cquotient",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Ci",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair("\u1E9Ci",null)))),null)))))),(new sc_Pair((2),null)))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair("\u1E9Cy",null)))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair((new sc_Pair("\u1E9Cnumberp",(new sc_Pair("\u1E9Cy",null)))),(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))),(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair("\u1E9Cx",null)))),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair("\u1E9Cz",(new sc_Pair("\u1E9Cy",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair((new sc_Pair("\u1E9Clessp",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair((new sc_Pair("\u1E9Clessp",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cz",null)))))),null)))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair((new sc_Pair("\u1E9Clessp",(new sc_Pair("\u1E9Cz",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cnot",(new sc_Pair((new sc_Pair("\u1E9Clessp",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cx",null)))))),null)))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Ci",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair("\u1E9Ci",null))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Ci",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair("\u1E9Ci",null))))),null))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Ci",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair("\u1E9Ci",null))))),null))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Ci",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair("\u1E9Ci",null))))),null))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Ci",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair("\u1E9Ci",null))))),null))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Ci",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair("\u1E9Ci",null))))),null))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Ci",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair("\u1E9Ci",null))))),null))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Ci",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair("\u1E9Ci",null))))),null))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Ci",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair("\u1E9Ci",null))))),null))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Ci",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair("\u1E9Ci",null))))),null))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Ci",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair("\u1E9Ci",null))))),null))))),(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Ci",(new sc_Pair((new sc Analyze the following piece of code: 9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Cz",null)))),null)))))),null)))))))),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cmeaning",(new sc_Pair((new sc_Pair("\u1E9Cplus-tree",(new sc_Pair((new sc_Pair("\u1E9Cdelete",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))),(new sc_Pair("\u1E9Ca",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair((new sc_Pair("\u1E9Cmember",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair((new sc_Pair("\u1E9Cmeaning",(new sc_Pair((new sc_Pair("\u1E9Cplus-tree",(new sc_Pair("\u1E9Cy",null)))),(new sc_Pair("\u1E9Ca",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cmeaning",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Ca",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cmeaning",(new sc_Pair((new sc_Pair("\u1E9Cplus-tree",(new sc_Pair("\u1E9Cy",null)))),(new sc_Pair("\u1E9Ca",null)))))),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair("\u1E9Cy",null)))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair((new sc_Pair("\u1E9Cnumberp",(new sc_Pair("\u1E9Cy",null)))),(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Cx",null)))),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cnth",(new sc_Pair((new sc_Pair("\u1E9Cnil",null)),(new sc_Pair("\u1E9Ci",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair((new sc_Pair("\u1E9Czerop",(new sc_Pair("\u1E9Ci",null)))),(new sc_Pair((new sc_Pair("\u1E9Cnil",null)),(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Clast",(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null)))))),null)))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair((new sc_Pair("\u1E9Clistp",(new sc_Pair("\u1E9Cb",null)))),(new sc_Pair((new sc_Pair("\u1E9Clast",(new sc_Pair("\u1E9Cb",null)))),(new sc_Pair((new sc_Pair("\u1E9Cnil",null)),(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Creverse",(new sc_Pair("\u1E9Ca",null)))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair((new sc_Pair("\u1E9Clistp",(new sc_Pair("\u1E9Ca",null)))),(new sc_Pair((new sc_Pair("\u1E9Creverse",(new sc_Pair("\u1E9Ca",null)))),(new sc_Pair((new sc_Pair("\u1E9Cnil",null)),(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Clength",(new sc_Pair("\u1E9Ca",null)))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair((new sc_Pair("\u1E9Clistp",(new sc_Pair("\u1E9Ca",null)))),(new sc_Pair((new sc_Pair("\u1E9Clength",(new sc_Pair("\u1E9Ca",null)))),(new sc_Pair((new sc_Pair("\u1E9Cnil",null)),(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cmapcar",(new sc_Pair((new sc_Pair("\u1E9Clambda",(new sc_Pair("\u1E9Ci",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair("\u1E9Ci",null)))),null))))),(new sc_Pair("\u1E9Ca",null)))))),(new sc_Pair("\u1E9Cb",null))))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair((new sc_Pair("\u1E9Clistp",(new sc_Pair("\u1E9Ca",null)))),(new sc_Pair((new sc_Pair("\u1E9Cmapcar",(new sc_Pair((new sc_Pair("\u1E9Clambda",(new sc_Pair("\u1E9Ci",(new sc_Pair((new sc_Pair("\u1E9Cadd1",(new sc_Pair("\u1E9Ci",null)))),null))))),(new sc_Pair("\u1E9Ca",null)))))),(new sc_Pair("\u1E9Cb",null))))),(new sc_Pair((new sc_Pair("\u1E9Cnil",null)),(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\ Analyze the following piece of code:  sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair((new sc_Pair("\u1E9Clistp",(new sc_Pair("\u1E9Ca",null)))),(new sc_Pair((new sc_Pair("\u1E9Ccons",(new sc_Pair((new sc_Pair("\u1E9Ccar",(new sc_Pair((new sc_Pair("\u1E9Clast",(new sc_Pair("\u1E9Ca",null)))),null)))),(new sc_Pair("\u1E9Cb",null)))))),(new sc_Pair("\u1E9Cb",null)))))))),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Clessp",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair("\u1E9Cz",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair((new sc_Pair("\u1E9Clessp",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ct",null)),(new sc_Pair("\u1E9Cz",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cf",null)),(new sc_Pair("\u1E9Cz",null)))))),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cassignment",(new sc_Pair("\u1E9Cx",(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair((new sc_Pair("\u1E9Cassignedp",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Ca",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cassignment",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Ca",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cassignment",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cb",null)))))),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Ccar",(new sc_Pair((new sc_Pair("\u1E9Cgopher",(new sc_Pair("\u1E9Cx",null)))),null)))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair((new sc_Pair("\u1E9Clistp",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Ccar",(new sc_Pair((new sc_Pair("\u1E9Cflatten",(new sc_Pair("\u1E9Cx",null)))),null)))),(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cflatten",(new sc_Pair((new sc_Pair("\u1E9Ccdr",(new sc_Pair((new sc_Pair("\u1E9Cgopher",(new sc_Pair("\u1E9Cx",null)))),null)))),null)))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair((new sc_Pair("\u1E9Clistp",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Clength",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Clength",(new sc_Pair((new sc_Pair("\u1E9Ccdr",(new sc_Pair((new sc_Pair("\u1E9Cgopher",(new sc_Pair("\u1E9Cx",null)))),null)))),(new sc_Pair("\u1E9Cnil",null))))))),null))))),(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Clength",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Clength",(new sc_Pair((new sc_Pair("\u1E9Ccdr",(new sc_Pair((new sc_Pair("\u1E9Cgopher",(new sc_Pair("\u1E9Cx",null)))),null)))),(new sc_Pair("\u1E9Cnil",null))))))),null))))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Clength",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Clength",(new sc_Pair((new sc_Pair("\u1E9Ccdr",(new sc_Pair((new sc_Pair("\u1E9Cgopher",(new sc_Pair("\u1E9Cx",null)))),null)))),(new sc_Pair("\u1E9Cnil",null))))))),null))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Clength",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Clength",(new sc_Pair((new sc_Pair("\u1E9Ccdr",(new sc_Pair((new sc_Pair("\u1E9Cgopher",(new sc_Pair("\u1E9Cx",null)))),null)))),(new sc_Pair("\u1E9Cnil",null))))))),null))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Clength",(new sc_Pair("\u1E9Cx",null)))),(new sc_Pair((new sc_Pair("\u1E9Clength",(new sc_Pair((new sc_Pair("\u1E9Ccdr",(new sc_Pair((new sc_Pair("\u1E9Cgopher",(new sc_Pair("\u1E9Cx",null)))),null)))),(new Analyze the following piece of code: Pair((new sc_Pair("\u1E9Ccdr",(new sc_Pair((new sc_Pair("\u1E9Cflatten",(new sc_Pair("\u1E9Cx",null)))),null)))),(new sc_Pair((new sc_Pair("\u1E9Ccons",(new sc_Pair((new sc_Pair("\u1E9Czero",null)),(new sc_Pair((new sc_Pair("\u1E9Cnil",null)),null)))))),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cquotient",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cx",null)))))),(new sc_Pair("\u1E9Cy",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair((new sc_Pair("\u1E9Czerop",(new sc_Pair("\u1E9Cy",null)))),(new sc_Pair((new sc_Pair("\u1E9Czero",null)),(new sc_Pair((new sc_Pair("\u1E9Cfix",(new sc_Pair("\u1E9Cx",null)))),null)))))))),null)))))), (new sc_Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cget",(new sc_Pair("\u1E9Cj",(new sc_Pair((new sc_Pair("\u1E9Cset",(new sc_Pair("\u1E9Ci",(new sc_Pair("\u1E9Cval",(new sc_Pair("\u1E9Cmem",null)))))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cif",(new sc_Pair((new sc_Pair("\u1E9Ceqp",(new sc_Pair("\u1E9Cj",(new sc_Pair("\u1E9Ci",null)))))),(new sc_Pair("\u1E9Cval",(new sc_Pair((new sc_Pair("\u1E9Cget",(new sc_Pair("\u1E9Cj",(new sc_Pair("\u1E9Cmem",null)))))),null)))))))),null))))))));
    (const_nboyer = (new sc_Pair((new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cf",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cc",(new sc_Pair((new sc_Pair("\u1E9Czero",null)),null)))))),null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cf",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair((new sc_Pair("\u1E9Ctimes",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Cc",(new sc_Pair("\u1E9Cd",null)))))),null)))))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cz",(new sc_Pair("\u1E9Cf",(new sc_Pair((new sc_Pair("\u1E9Creverse",(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair((new sc_Pair("\u1E9Cappend",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cnil",null)),null)))))),null)))),null)))))),(new sc_Pair((new sc_Pair("\u1E9Cu",(new sc_Pair("\u1E9Cf",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cc",(new sc_Pair("\u1E9Cd",null)))))),null))))),(new sc_Pair((new sc_Pair("\u1E9Cv",(new sc_Pair("\u1E9Cf",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cc",(new sc_Pair("\u1E9Cd",null)))))),null))))),(new sc_Pair((new sc_Pair("\u1E9Cw",(new sc_Pair("\u1E9Cf",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cc",(new sc_Pair("\u1E9Cd",null)))))),null))))),(new sc_Pair((new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cf",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cc",(new sc_Pair("\u1E9Cd",null)))))),null))))),(new sc_Pair((new sc_Pair("\u1E9Cy",(new sc_Pair("\u1E9Cf",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cc",(new sc_Pair("\u1E9Cd",null)))))),null))))),(new sc_Pair((new sc_Pair("\u1E9Cz",(new sc_Pair("\u1E9Cf",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc_Pair("\u1E9Cc",(new sc_Pair("\u1E9Cd",null)))))),null))))),(new sc_Pair((new sc_Pair("\u1E9Cu",(new sc_Pair("\u1E9Cf",(new sc_Pair((new sc_Pair("\u1E9Cequal",(new sc Analyze the following piece of code: _Pair("\u1E9Cequal",(new sc_Pair((new sc_Pair("\u1E9Cplus",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cdifference",(new sc_Pair("\u1E9Cx",(new sc_Pair("\u1E9Cy",null)))))),null)))))))),(new sc_Pair((new sc_Pair("\u1E9Cw",(new sc_Pair("\u1E9Clessp",(new sc_Pair((new sc_Pair("\u1E9Cremainder",(new sc_Pair("\u1E9Ca",(new sc_Pair("\u1E9Cb",null)))))),(new sc_Pair((new sc_Pair("\u1E9Cmember",(new sc_Pair("\u1E9Ca",(new sc_Pair((new sc_Pair("\u1E9Clength",(new sc_Pair("\u1E9Cb",null)))),null)))))),null)))))))),null)))))))))));
    BgL_nboyerzd2benchmarkzd2 = function() {
        var args = null;
        for (var sc_tmp = arguments.length - 1; sc_tmp >= 0; sc_tmp--) {
            args = sc_cons(arguments[sc_tmp], args);
        }
        var n;
        return ((n = ((args === null)?(0):(args.car))), (BgL_setupzd2boyerzd2()), (BgL_runzd2benchmarkzd2(("nboyer"+(sc_number2string(n))), (1), function() {
            return (BgL_testzd2boyerzd2(n));
        }, function(rewrites) {
            if ((sc_isNumber(rewrites)))
                switch (n) {
                case (0):
                    return (rewrites===(95024));
                    break;
                case (1):
                    return (rewrites===(591777));
                    break;
                case (2):
                    return (rewrites===(1813975));
                    break;
                case (3):
                    return (rewrites===(5375678));
                    break;
                case (4):
                    return (rewrites===(16445406));
                    break;
                case (5):
                    return (rewrites===(51507739));
                    break;
                default:
                    return true;
                    break;
                }
            else
                return false;
        })));
    };
    BgL_setupzd2boyerzd2 = function() {
        return true;
    };
    BgL_testzd2boyerzd2 = function() {
        return true;
    };
    translate_term_nboyer = function(term) {
        var lst;
        return (!(term instanceof sc_Pair)?term:(new sc_Pair((BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer((term.car))), ((lst = (term.cdr)), ((lst === null)?null:(new sc_Pair((translate_term_nboyer((lst.car))), (translate_args_nboyer((lst.cdr))))))))));
    };
    translate_args_nboyer = function(lst) {
        var sc_lst_5;
        var term;
        return ((lst === null)?null:(new sc_Pair(((term = (lst.car)), (!(term instanceof sc_Pair)?term:(new sc_Pair((BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer((term.car))), (translate_args_nboyer((term.cdr))))))), ((sc_lst_5 = (lst.cdr)), ((sc_lst_5 === null)?null:(new sc_Pair((translate_term_nboyer((sc_lst_5.car))), (translate_args_nboyer((sc_lst_5.cdr))))))))));
    };
    untranslate_term_nboyer = function(term) {
        var optrOpnd;
        var tail1131;
        var L1127;
        var falseHead1130;
        var symbol_record;
        if (!(term instanceof sc_Pair))
            return term;
        else
            {
                (falseHead1130 = (new sc_Pair(null, null)));
                (L1127 = (term.cdr));
                while (true)
                    {
                        if (!(L1127 instanceof sc_Pair))
                            break;
                        else
                            {
                                (optrOpnd = (L1127.car));
                                if (!(optrOpnd instanceof sc_Pair))
                                    {
                                        (tail1131 = (L1127.cdr));
                                        if ((falseHead1130.car) === null)
                                            (falseHead1130.car = optrOpnd);
                                        else
                                            (falseHead1130.cdr = (new sc_Pair(optrOpnd, falseHead1130.cdr)));
                                        (L1127 = tail1131);
                                    }
                                else
                                    (L1127 = (optrOpnd.cdr));
                            }
                    }
                (symbol_record = BgL_ze3symbolzd2record_1ze3_nboyer((term.car)));
                if ((symbol_record.name) === "equal")
                    return (new sc_Pair(BgL_ze3_nboyer_equal, (untranslate_args_nboyer((falseHead1130.cdr)))));
                else if ((symbol_record.name) === "plus")
                    return (new sc_Pair(BgL_ze3_nboyer_plus, (untranslate_args_nboyer((falseHead1130.cdr)))));
                else if ((symbol_record.name) === "difference")
                    return (new sc_Pair(BgL_ze3_nboyer_difference, (untranslate_args_nboyer((falseHead1130.cdr)))));
                else if ((symbol_record.name) === "lessp")
                    return (new sc_Pair(BgL_ze3_nboyer_lessp, (untranslate_args_nboyer((falseHead1130.cdr)))));
                else if ((symbol_record.name) === "remainder")
                    return (new sc_Pair(BgL_ze3_nboyer_remainder, (untranslate_args_nboyer((falseHead1130.cdr)))));
                else if ((symbol_record.name) === "member")
                    return (new sc_Pair(BgL_ze3_nboyer_member, (untranslate_args_nboyer((falseHead1130.cdr)))));
                else if ((symbol_record.name) === "length")
                    return (new sc_Pair(BgL_ze3_nboyer_length, (untranslate_args_nboyer((falseHead1130.cdr)))));
                else
                    return (new sc_Pair(symbol_record.name, (untranslate_args_nboyer((falseHead1130.cdr)))));
            }
    };
    untranslate_args_nboyer = function(lst) {
        var sc_lst_5;
        var term;
        return ((lst === null)?null:(new sc_Pair(((term = (lst.car)), (!(term instanceof sc_Pair)?term:(new sc_Pair((term.car), (untranslate_args_nboyer((term.cdr))))))), ((sc_lst_5 = (lst.cdr)), ((sc_lst_5 === null)?null:(new sc_Pair((untranslate_term_nboyer((sc_lst_5.car))), (untranslate_ Analyze the following piece of code: term.cdr));
                (tail1131 = falseHead1130);
                while (!(L1127 === null)) {
                    {
                        (tail1131.cdr = (new sc_Pair((untranslate_term_nboyer((L1127.car))), null)));
                        (tail1131 = (tail1131.cdr));
                        (L1127 = (L1127.cdr));
                    }
                }
                (optrOpnd = (falseHead1130.cdr));
                return (new sc_Pair(((symbol_record = (term.car)), (symbol_record[(0)])), optrOpnd));
            }
    };
    BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer = function(sym) {
        var r;
        var x;
        return ((x = (sc_assq(sym, BgL_sc_za2symbolzd2recordszd2alistza2_2z00_nboyer))), ((x!== false)?(x.cdr):((r = [sym, null]), (BgL_sc_za2symbolzd2recordszd2alistza2_2z00_nboyer = (new sc_Pair((new sc_Pair(sym, r)), BgL_sc_za2symbolzd2recordszd2alistza2_2z00_nboyer))), r)));
    };
    (BgL_sc_za2symbolzd2recordszd2alistza2_2z00_nboyer = null);
    translate_alist_nboyer = function(alist) {
        var sc_alist_6;
        var term;
        return ((alist === null)?null:(new sc_Pair((new sc_Pair((alist.car.car), ((term = (alist.car.cdr)), (!(term instanceof sc_Pair)?term:(new sc_Pair((BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer((term.car))), (translate_args_nboyer((term.cdr))))))))), ((sc_alist_6 = (alist.cdr)), ((sc_alist_6 === null)?null:(new sc_Pair((new sc_Pair((sc_alist_6.car.car), (translate_term_nboyer((sc_alist_6.car.cdr))))), (translate_alist_nboyer((sc_alist_6.cdr))))))))));
    };
    apply_subst_nboyer = function(alist, term) {
        var lst;
        var temp_temp;
        return (!(term instanceof sc_Pair)?((temp_temp = (sc_assq(term, alist))), ((temp_temp!== false)?(temp_temp.cdr):term)):(new sc_Pair((term.car), ((lst = (term.cdr)), ((lst === null)?null:(new sc_Pair((apply_subst_nboyer(alist, (lst.car))), (apply_subst_lst_nboyer(alist, (lst.cdr))))))))));
    };
    apply_subst_lst_nboyer = function(alist, lst) {
        var sc_lst_7;
        return ((lst === null)?null:(new sc_Pair((apply_subst_nboyer(alist, (lst.car))), ((sc_lst_7 = (lst.cdr)), ((sc_lst_7 === null)?null:(new sc_Pair((apply_subst_nboyer(alist, (sc_lst_7.car))), (apply_subst_lst_nboyer(alist, (sc_lst_7.cdr))))))))));
    };
    tautologyp_nboyer = function(sc_x_11, true_lst, false_lst) {
        var tmp1125;
        var x;
        var tmp1126;
        var sc_x_8;
        var sc_tmp1125_9;
        var sc_tmp1126_10;
        var sc_x_11;
        var true_lst;
        var false_lst;
        while (true) {
            if ((((sc_tmp1126_10 = (is_term_equal_nboyer(sc_x_11, true_term_nboyer))), ((sc_tmp1126_10!== false)?sc_tmp1126_10:(is_term_equal_nboyer(sc_x_11, false_term_nboyer)))))) {
                return sc_tmp1126_10;
            }
            if (((sc_tmp1125_9 = (is_not_term_nboyer(sc_x_11))), ((sc_tmp1125_9!== false)?sc_tmp1125_9:(is_or_term_nboyer(sc_x_11)))))) {
                {
                    (tmp1125 = sc_tmp1125_9);
                    (x = (sc_x_8 = sc_x_11));
                    (true_lst = (is_true_list_nboyer(true_lst)));
                    (false_lst = (is_false_list_nboyer(false_lst)));
                    while (true) {
                        if (((is_and_term_nboyer(x)))) {
                            {
                                (x = (x.cdr));
                                (true_lst = (is_true_list_nboyer(true_lst)));
                                (false_lst = (is_false_list_nboyer(false_lst)));
                            }
                        } else {
                            if (((is_or_term_nboyer(x)))) {
                                {
                                    (x = (x.cdr));
                                    (true_lst = (is_true_list_nboyer(true_lst)));
                                    (false_lst = (is_false_list_nboyer(false_lst)));
                                }
                            } else {
                                if (((is_not_term_nboyer(x)))) {
                                    {
                                        (x = (x.cdr));
                                        (true_lst = (is_true_list_nboyer(true_lst)));
                                        (false_lst = (is_false_list_nboyer(false_lst)));
                                    }
                                } else {
                                    if (((is_true_term_nboyer(x)))) {
                                        {
                                            (tmp1126 = sc_tmp1126_10);
                                            (true_lst = (is_true_list_nboyer(true_lst)));
                                            (false_lst = (is_false_list_nboyer(false_lst)));
                                            (x = (x.cdr));
                                        }
                                    } else {
                                        if (((is_false_term_nboyer(x)))) {
                                            {
                                                (tmp1126 = sc_tmp1126_10);
                                                (true_lst = (is_true_list_nboyer(true_lst)));
                                                (false_lst = (is_false_list_nboyer(false_lst)));
                                                (x = (x.cdr));
                                            }
                                        } else {
                                            if (((is_var_nboyer(x)))) {
                                                {
                                                    (tmp1126 = sc_tmp1126_10);
                                                    (true_lst = (is_true_list_nboyer(true_lst)));
                                                    (false_lst = (is_false_list_nboyer(false_lst)));
                                                    (x = (x.cdr));
                                                }
                                            } else {
                                                if (((is_atom_nboyer(x)))) {
                                                    {
                                                        (tmp1126 = sc_tmp1126_10);
                                                        (true_lst = (is_true_list_ Analyze the following piece of code: _member_nboyer(sc_x_11, true_lst))))!== false))
                return true;
            else
                if ((((sc_tmp1125_9 = (is_term_equal_nboyer(sc_x_11, false_term_nboyer))), ((sc_tmp1125_9!== false)?sc_tmp1125_9:(is_term_member_nboyer(sc_x_11, false_lst))))!== false))
                    return false;
                else
                    if (!(sc_x_11 instanceof sc_Pair))
                        return false;
                    else
                        if (((sc_x_11.car)===if_constructor_nboyer))
                            if ((((sc_x_8 = (sc_x_11.cdr.car)), (tmp1126 = (is_term_equal_nboyer(sc_x_8, true_term_nboyer))), ((tmp1126!== false)?tmp1126:(is_term_member_nboyer(sc_x_8, true_lst))))!== false))
                                (sc_x_11 = (sc_x_11.cdr.cdr.car));
                            else
                                if ((((x = (sc_x_11.cdr.car)), (tmp1125 = (is_term_equal_nboyer(x, false_term_nboyer))), ((tmp1125!== false)?tmp1125:(is_term_member_nboyer(x, false_lst))))!== false))
                                    (sc_x_11 = (sc_x_11.cdr.cdr.cdr.car));
                                else
                                    if (((tautologyp_nboyer((sc_x_11.cdr.cdr.car), (new sc_Pair((sc_x_11.cdr.car), true_lst)), false_lst))!== false))
                                        {
                                            (false_lst = (new sc_Pair((sc_x_11.cdr.car), false_lst)));
                                            (sc_x_11 = (sc_x_11.cdr.cdr.cdr.car));
                                        }
                                    else
                                        return false;
                        else
                            return false;
        }
    };
    (if_constructor_nboyer = "\u1E9C*");
    (rewrite_count_nboyer = (0));
    rewrite_nboyer = function(term) {
        var term2;
        var sc_term_12;
        var lst;
        var symbol_record;
        var sc_lst_13;
        {
            (++rewrite_count_nboyer);
            if (!(term instanceof sc_Pair))
                return term;
            else
                {
                    (sc_term_12 = (new sc_Pair((term.car), ((sc_lst_13 = (term.cdr)), ((sc_lst_13 === null)?null:(new sc_Pair((rewrite_nboyer((sc_lst_13.car))), (rewrite_args_nboyer((sc_lst_13.cdr))))))))));
                    (lst = ((symbol_record = (term.car)), (symbol_record[(1)])));
                    while (true) {
                        if ((lst === null))
                            return sc_term_12;
                        else
                            if ((((term2 = ((lst.car).cdr.car)), (unify_subst_nboyer = null), (one_way_unify1_nboyer(sc_term_12, term2)))!== false))
                                return (rewrite_nboyer((apply_subst_nboyer(unify_subst_nboyer, ((lst.car).cdr.cdr.car)))));
                            else
                                (lst = (lst.cdr));
                    }
                }
        }
    };
    rewrite_args_nboyer = function(lst) {
        var sc_lst_14;
        return ((lst === null)?null:(new sc_Pair((rewrite_nboyer((lst.car))), ((sc_lst_14 = (lst.cdr)), ((sc_lst_14 === null)?null:(new sc_Pair((rewrite_nboyer((sc_lst_14.car))), (rewrite_args_nboyer((sc_lst_14.cdr))))))))));
    };
    (unify_subst_nboyer = "\u1E9C*");
    one_way_unify1_nboyer = function(term1, term2) {
        var sc_term_15;
        var sc_term_16;
        var sc_term_17;
        var sc_term_18;
        var sc_term_19;
        var sc_term_20;
        var sc_term_21;
        var sc_term_22;
        var sc_term_23;
        var sc_term_24;
        var sc_term_25;
        var sc_term_26;
        var sc_term_27;
        var sc_term_28;
        var sc_term_29;
        var sc_term_30;
        var sc_term_31;
        var sc_term_32;
        var sc_term_33;
        var sc_term_34;
        var sc_term_35;
        var sc_term_36;
        var sc_term_37;
        var sc_term_38;
        var sc_term_39;
        var sc_term_40;
        var sc_term_41;
        var sc_term_42;
        var sc_term_43;
        var sc_term_44;
        var sc_term_45;
        var sc_term_46;
        var sc_term_47;
        var sc_term_48;
        var sc_term_49;
        var sc_term_50;
        var sc_term_51;
        var sc_term_52;
        var sc_term_53;
        var sc_term_54;
        var sc_term_55;
        var sc_term_56;
        var sc_term_57;
        var sc_term_58;
        var sc_term_59;
        var sc_term_60;
        var sc_term_61;
        var sc_term_62;
        var sc_term_63;
        var sc_term_64;
        var sc_term_65;
        var sc_term_66;
        var sc_term_67;
        var sc_term_68;
        var sc_term_69;
        var sc_term_70;
        var sc_term_71;
        var sc_term_72;
        var sc_term_73;
        var sc_term_74;
        var sc_term_75;
        var sc_term_76;
        var sc_term_77;
        var sc_term_78;
        var sc_term_79;
        var sc_term_80;
        var sc_term_81;
        var sc_term_82;
        var sc_term_83;
        var sc_term_84;
        var sc_term_85;
        var sc_term_86;
        var sc_term_87;
        var sc_term_88;
        var sc_term_89;
        var sc_term_90;
        var sc_term_91;
        var sc_term_92;
        var sc_term_93;
        var sc_term_94;
        var sc_term_95;
        var sc_term_96;
        var sc_ Analyze the following piece of code: (term1, term2) {
        var lst1;
        var lst2;
        var temp_temp;
        if (!(term2 instanceof sc_Pair))
            {
                (temp_temp = (sc_assq(term2, unify_subst_nboyer)));
                if ((temp_temp!== false))
                    return (is_term_equal_nboyer(term1, (temp_temp.cdr)));
                else
                    if ((sc_isNumber(term2)))
                        return (sc_isEqual(term1, term2));
                    else
                        {
                            (unify_subst_nboyer = (new sc_Pair((new sc_Pair(term2, term1)), unify_subst_nboyer)));
                            return true;
                        }
            }
        else
            if (!(term1 instanceof sc_Pair))
                return false;
            else
                if (((term1.car)===(term2.car)))
                    {
                        (lst1 = (term1.cdr));
                        (lst2 = (term2.cdr));
                        while (true) {
                            if ((lst1 === null))
                                return (lst2 === null);
                            else
                                if ((lst2 === null))
                                    return false;
                                else
                                    if (((one_way_unify1_nboyer((lst1.car), (lst2.car)))!== false))
                                        {
                                            (lst1 = (lst1.cdr));
                                            (lst2 = (lst2.cdr));
                                        }
                                    else
                                        return false;
                        }
                    }
                else
                    return false;
    };
    (false_term_nboyer = "\u1E9C*");
    (true_term_nboyer = "\u1E9C*");
    trans_of_implies1_nboyer = function(n) {
        var sc_n_15;
        return ((sc_isEqual(n, (1)))?(sc_list("\u1E9Cimplies", (0), (1))):(sc_list("\u1E9Cand", (sc_list("\u1E9Cimplies", (n-(1)), n)), ((sc_n_15 = (n-(1))), ((sc_isEqual(sc_n_15, (1)))?(sc_list("\u1E9Cimplies", (0), (1))):(sc_list("\u1E9Cand", (sc_list("\u1E9Cimplies", (sc_n_15-(1)), sc_n_15)), (trans_of_implies1_nboyer((sc_n_15-(1)))))))))));
    };
    is_term_equal_nboyer = function(x, y) {
        var lst1;
        var lst2;
        var r2;
        var r1;
        if ((x instanceof sc_Pair))
            if ((y instanceof sc_Pair))
                if ((((r1 = (x.car)), (r2 = (y.car)), (r1===r2))!== false))
                    {
                        (lst1 = (x.cdr));
                        (lst2 = (y.cdr));
                        while (true) {
                            if ((lst1 === null))
                                return (lst2 === null);
                            else
                                if ((lst2 === null))
                                    return false;
                                else
                                    if (((is_term_equal_nboyer((lst1.car), (lst2.car)))!== false))
                                        {
                                            (lst1 = (lst1.cdr));
                                            (lst2 = (lst2.cdr));
                                        }
                                    else
                                        return false;
                        }
                    }
                else
                    return false;
            else
                return false;
        else
            return (sc_isEqual(x, y));
    };
    is_term_member_nboyer = function(x, lst) {
        var x;
        var lst;
        while (true) {
            if ((lst === null))
                return false;
            else
                if (((is_term_equal_nboyer(x, (lst.car)))!== false))
                    return true;
                else
                    (lst = (lst.cdr));
        }
    };
    BgL_setupzd2boyerzd2 = function() {
        var symbol_record;
        var value;
        var BgL_sc_symbolzd2record_16zd2;
        var sym;
        var sc_sym_17;
        var term;
        var lst;
        var sc_term_18;
        var sc_term_19;
        {
            (BgL_sc_za2symbolzd2recordszd2alistza2_2z0 = (new sc_Cons((new sc_Pair(true_term_nboyer, (new sc_Pair(false_term_nboyer, (new sc_Pair(trans_of_implies1_nboyer, (new sc_Pair(is_term_equal_nboyer, (new sc_Pair(is_term_member_nboyer, (new sc_Pair(one_way_unify1_nboyer, (new sc_Pair(unify_subst_nboyer, null))))))))))))))), BgL_sc_za2symbolzd2recordszd2alistza2_2z0)));
            (symbol_record = (new sc_Pair(true_term_nboyer, (new sc_Pair(false_term_nboyer, (new sc_Pair(trans_of_implies1_nboyer, (new sc_Pair(is_term_equal_nboyer, (new sc_Pair(is_term_member_nboyer, (new sc_Pair(one_way_unify1_nboyer, (new sc_Pair(unify_subst_nboyer, null))))))))))))))));
            (value = (new sc_Pair(true_term_nboyer, (new sc_Pair(false_term_nboyer, (new sc_Pair(trans_of_implies1_nboyer, (new sc_Pair(is_term_equal_nboyer, (new sc_Pair(is_term_member_nboyer, (new sc_Pair(one_way_unify1_nboyer, (new sc_Pair(unify_subst_nboyer, null))))))))))))))));
        }
        {
            (sym = (new sc_Symbol("true_term_nboyer")));
            (sc_sym_17 = (sym.name));
            (term = (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair(sym, (new sc_Pair( Analyze the following piece of code: 0_nboyer = null);
            (if_constructor_nboyer = (BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer("\u1E9Cif")));
            (false_term_nboyer = ((sc_term_19 = (new sc_Pair("\u1E9Cf",null))), (!(sc_term_19 instanceof sc_Pair)?sc_term_19:(new sc_Pair((BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer((sc_term_19.car))), (translate_args_nboyer((sc_term_19.cdr))))))));
            (true_term_nboyer = ((sc_term_18 = (new sc_Pair("\u1E9Ct",null))), (!(sc_term_18 instanceof sc_Pair)?sc_term_18:(new sc_Pair((BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer((sc_term_18.car))), (translate_args_nboyer((sc_term_18.cdr))))))));
            (lst = sc_const_3_nboyer);
            while (!(lst === null)) {
                {
                    (term = (lst.car));
                    if (((term instanceof sc_Pair)&&(((term.car)==="\u1E9Cequal")&&((term.cdr.car) instanceof sc_Pair))))
                        {
                            (sc_sym_17 = ((term.cdr.car).car));
                            (value = (new sc_Pair((!(term instanceof sc_Pair)?term:(new sc_Pair((BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer((term.car))), (translate_args_nboyer((term.cdr)))))), ((sym = ((term.cdr.car).car)), (BgL_sc_symbolzd2record_16zd2 = (BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer(sym))), (BgL_sc_symbolzd2record_16zd2[(1)])))));
                            (symbol_record = (BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer(sc_sym_17)));
                            (symbol_record[(1)] = value);
                        }
                    else
                        (sc_error("ADD-LEMMA did not like term:  ", term));
                    (lst = (lst.cdr));
                }
            }
            return true;
        }
    };
    BgL_testzd2boyerzd2 = function(n) {
        var optrOpnd;
        var term;
        var sc_n_20;
        var answer;
        var sc_term_21;
        var sc_term_22;
        {
            (rewrite_count_nboyer = (0));
            (term = sc_const_4_nboyer);
            (sc_n_20 = n);
            while (!(sc_n_20=== 0)) {
                {
                    (term = (sc_list("\u1E9Cor", term, (new sc_Pair("\u1E9Cf",null)))));
                    (--sc_n_20);
                }
            }
            (sc_term_22 = term);
            if (!(sc_term_22 instanceof sc_Pair))
                (optrOpnd = sc_term_22);
            else
                (optrOpnd = (new sc_Pair((BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer((sc_term_22.car))), (translate_args_nboyer((sc_term_22.cdr))))));
            (sc_term_21 = (apply_subst_nboyer(((const_nboyer === null)?null:(new sc_Pair((new sc_Pair((const_nboyer.car.car), (translate_term_nboyer((const_nboyer.car.cdr))))), (translate_alist_nboyer((const_nboyer.cdr)))))), optrOpnd)));
            (answer = (tautologyp_nboyer((rewrite_nboyer(sc_term_21)), null, null)));
            (sc_write(rewrite_count_nboyer));
            (sc_display(" rewrites"));
            (sc_newline());
            if (answer)
                (return true);
            else
                (return false);
        }
    };
    BgL_test_nboyer = function() {
        var n;
        var answer;
        var sc_n_23;
        var sc_n_24;
        var sc_n_25;
        var sc_n_26;
        var sc_n_27;
        var sc_n_28;
        var sc_n_29;
        var sc_n_30;
        var sc_n_31;
        var sc_n_32;
        var sc_n_33;
        var sc_n_34;
        var sc_n_35;
        var sc_n_36;
        var sc_n_37;
        var sc_n_38;
        var sc_n_39;
        var sc_n_40;
        var sc_n_41;
        var sc_n_42;
        var sc_n_43;
        var sc_n_44;
        var sc_n_45;
        var sc_n_46;
        var sc_n_47;
        var sc_n_48;
        var sc_n_49;
        var sc_n_50;
        var sc_n_51;
        var sc_n_52;
        var sc_n_53;
        var sc_n_54;
        var sc_n_55;
        var sc_n_56;
        var sc_n_57;
        var sc_n_58;
        var sc_n_59;
        var sc_n_60;
        var sc_n_61;
        var sc_n_62;
        var sc_n_63;
        var sc_n_64;
        var sc_n_65;
        var sc_n_66;
        var sc_n_67;
        var sc_n_68;
        var sc_n_69;
        var sc_n_70;
        var sc_n_71;
        var sc_n_72;
        var sc_n_73;
        var sc_n_74;
        var sc_n_75;
        var sc_n_76;
        var sc_n_77;
        var sc_n_78;
        var sc_n_79;
        var sc_n_80;
        var sc_n_81;
        var sc_n_82;
        var sc_n_83;
        var sc_n_84;
        var sc_n_85;
        var sc_n_86;
        var sc_n_87;
        var sc_n_88;
        var sc_n_89;
        var sc_n_90;
        var sc_n_91;
        var sc_n_92;
        var sc_n_93;
        var sc_n_94;
        var sc_n_95;
        var sc_n_96;
        var sc_n_97;
        var sc_n_98;
        var sc_n_99;
        var sc_n_100;
        var sc_n_ Analyze the following piece of code:  ((answer!== false))
                return rewrite_count_nboyer;
            else
                return false;
        }
    };
}

var BgL_parsezd2ze3nbzd2treesze3;
var BgL_earleyzd2benchmarkzd2;
var BgL_parsezd2ze3parsedzf3zc2;
var test;
var BgL_parsezd2ze3treesz31;
var BgL_makezd2parserzd2;


var const_earley;
{
    (const_earley = (new sc_Pair((new sc_Pair("\u1E9Cs",(new sc_Pair((new sc_Pair("\u1E9Ca",null)),(new sc_Pair((new sc_Pair("\u1E9Cs",(new sc_Pair("\u1E9Cs",null)))),null)))))),null)));
    BgL_makezd2parserzd2 = function(grammar, lexer) {
        var i;
        var parser_descr;
        var def_loop;
        var nb_nts;
        var names;
        var steps;
        var predictors;
        var enders;
        var starters;
        var nts;
        var sc_names_1;
        var sc_steps_2;
        var sc_predictors_3;
        var sc_enders_4;
        var sc_starters_5;
        var nb_confs;
        var BgL_sc_defzd2loop_6zd2;
        var BgL_sc_nbzd2nts_7zd2;
        var sc_nts_8;
        var BgL_sc_defzd2loop_9zd2;
        var ind;
        {
            ind = function(nt, sc_nts_10) {
                var i;
                {
                    (i = ((sc_nts_10.length)-(1)));
                    while (true) {
                        if ((i>=(0)))
                            if ((sc_isEqual((sc_nts_10[i]), nt)))
                                return i;
                            else
                                (--i);
                        else
                            return false;
                    }
                }
            };
            (sc_nts_8 = ((BgL_sc_defzd2loop_9zd2 = function(defs, sc_nts_11) {
                var rule_loop;
                var head;
                var def;
                return ((defs instanceof sc_Pair)?((def = (defs.car)), (head = (def.car)), (rule_loop = function(rules, sc_nts_12) {
                    var nt;
                    var l;
                    var sc_nts_13;
                    var rule;
                    if ((rules instanceof sc_Pair))
                        {
                            (rule = (rules.car));
                            (l = rule);
                            (sc_nts_13 = sc_nts_12);
                            while ((l instanceof sc_Pair)) {
                                {
                                    (nt = (l.car));
                                    (l = (l.cdr));
                                    (sc_nts_13 = (((sc_member(nt, sc_nts_13))!== false)?sc_nts_13:(new sc_Pair(nt, sc_nts_13))));
                                }
                            }
                            return (rule_loop((rules.cdr), sc_nts_13));
                        }
                    else
                        return (BgL_sc_defzd2loop_9zd2((defs.cdr), sc_nts_12));
                }), (rule_loop((def.cdr), (((sc_member(head, sc_nts_11))!== false)?sc_nts_11:(new sc_Pair(head, sc_nts_11)))))):(sc_list2vector((sc_reverse(sc_nts_11)))));
            }), (BgL_sc_defzd2loop_9zd2(grammar, null))));
            (BgL_sc_nbzd2nts_7zd2 = (sc_nts_8.length));
            (nb_confs = (((BgL_sc_defzd2loop_6zd2 = function(defs, BgL_sc_nbzd2confs_14zd2) {
                var rule_loop;
                var def;
                return ((defs instanceof sc_Pair)?((def = (defs.car)), (rule_loop = function(rules, BgL_sc_nbzd2confs_15zd2) {
                    var l;
                    var BgL_sc_nbzd2confs_16zd2;
                    var rule;
                    if ((rules instanceof sc_Pair))
                        {
                            (rule = (rules.car));
                            (l = rule);
                            (BgL_sc_nbzd2confs_16zd2 = BgL_sc_nbzd2confs_15zd2);
                            while ((l instanceof sc_Pair)) {
                                {
                                    (BgL_sc_nbzd2confs_16zd2 = (((((BgL_sc_nbzd2confs_14zd2 + (l.length))>0))&&(BgL_sc_nbzd2confs_16zd2>0))?((BgL_sc_nbzd2confs_14zd2 + (l.length))):(0))));
                                    (l = (l.cdr));
                                }
                            }
                            return (rule_loop((rules.cdr), BgL_sc_nbzd2confs_16zd2));
                        }
                    else
                        return BgL_sc_nbzd2confs_15zd2;
                }), (rule_loop((def.cdr), BgL_sc_nbzd2confs_14zd2)))):(BgL_sc_nbzd2confs_14zd2))));
            }), (BgL_sc_nbzd2confs_14zd2 = 0), (BgL_sc_defzd2loop_6zd2(grammar, BgL_sc_nbzd2confs_14zd2)))));
        }
        {
            (parser_descr = (new sc_Pair(null,null)));
            (i = 0);
            while ((i<nb_confs)) {
                {
                    (parser_descr = (new sc_Pair((new sc_Pair(i,parser_descr)),null)));
                    (++i);
                }
            }
            (def_loop = function(defs, i, BgL_parsezd2ze3nbzd2treesze3) {
                var rule_loop;
                var def;
                return ((defs instanceof sc_Pair)?((def = (defs.car)), (rule_loop = function(rules, i, BgL_parsezd2ze3nbzd2treesze3) {
                    var nt;
                    var l;
                    var BgL_parsezd2ze3nbzd2treesze3_1;
                    var rule;
                    if ((rules instanceof sc_Pair))
                        {
                            (rule = (rules.car));
                            (l = rule);
                            (BgL_parsezd2ze3nbzd2treesze3_1 = BgL_parsezd2ze3nbzd2treesze3);
                            while ((l instanceof sc_Pair)) {
                                {
                                    (nt = (l.car));
                                    (l = (l.cdr));
                                    (BgL_parsezd2ze3nbzd2treesze3_1 = (((((i + (l.length))>0))&&(BgL_parsezd2ze3nbzd2treesze3_1>0))?((i + (l.length))):(0))));
                                }
                            }
                            return (rule_loop((rules.cdr), i, BgL_parsezd2ze3nbzd2treesze3_1));
                        }
                    else
                        return (((((i + (def.cdr.length))>0))&&(BgL Analyze the following piece of code: gL_sc_nbzd2confs_16zd2;
                    var rule;
                    if ((rules instanceof sc_Pair))
                        {
                            (rule = (rules.car));
                            (l = rule);
                            (BgL_sc_nbzd2confs_16zd2 = BgL_sc_nbzd2confs_15zd2);
                            while ((l instanceof sc_Pair)) {
                                {
                                    (l = (l.cdr));
                                    (++BgL_sc_nbzd2confs_16zd2);
                                }
                            }
                            return (rule_loop((rules.cdr), (BgL_sc_nbzd2confs_16zd2+(1))));
                        }
                    else
                        return (BgL_sc_defzd2loop_6zd2((defs.cdr), BgL_sc_nbzd2confs_15zd2));
                }), (rule_loop((def.cdr), BgL_sc_nbzd2confs_14zd2))):BgL_sc_nbzd2confs_14zd2);
            }), (BgL_sc_defzd2loop_6zd2(grammar, (0))))+BgL_sc_nbzd2nts_7zd2));
            (sc_starters_5 = (sc_makeVector(BgL_sc_nbzd2nts_7zd2, null)));
            (sc_enders_4 = (sc_makeVector(BgL_sc_nbzd2nts_7zd2, null)));
            (sc_predictors_3 = (sc_makeVector(BgL_sc_nbzd2nts_7zd2, null)));
            (sc_steps_2 = (sc_makeVector(nb_confs, false)));
            (sc_names_1 = (sc_makeVector(nb_confs, false)));
            (nts = sc_nts_8);
            (starters = sc_starters_5);
            (enders = sc_enders_4);
            (predictors = sc_predictors_3);
            (steps = sc_steps_2);
            (names = sc_names_1);
            (nb_nts = (sc_nts_8.length));
            (i = (nb_nts-(1)));
            while ((i>=(0))) {
                {
                    (sc_steps_2[i] = (i-nb_nts));
                    (sc_names_1[i] = (sc_list((sc_nts_8[i]), (0))));
                    (sc_enders_4[i] = (sc_list(i)));
                    (--i);
                }
            }
            def_loop = function(defs, conf) {
                var rule_loop;
                var head;
                var def;
                return ((defs instanceof sc_Pair)?((def = (defs.car)), (head = (def.car)), (rule_loop = function(rules, conf, rule_num) {
                    var i;
                    var sc_i_17;
                    var nt;
                    var l;
                    var sc_conf_18;
                    var sc_i_19;
                    var rule;
                    if ((rules instanceof sc_Pair))
                        {
                            (rule = (rules.car));
                            (names[conf] = (sc_list(head, rule_num)));
                            (sc_i_19 = (ind(head, nts)));
                            (starters[sc_i_19] = (new sc_Pair(conf, (starters[sc_i_19]))));
                            (l = rule);
                            (sc_conf_18 = conf);
                            while ((l instanceof sc_Pair)) {
                                {
                                    (nt = (l.car));
                                    (steps[sc_conf_18] = (ind(nt, nts)));
                                    (sc_i_17 = (ind(nt, nts)));
                                    (predictors[sc_i_17] = (new sc_Pair(sc_conf_18, (predictors[sc_i_17]))));
                                    (l = (l.cdr));
                                    (++sc_conf_18);
                                }
                            }
                            (steps[sc_conf_18] = ((ind(head, nts))-nb_nts));
                            (i = (ind(head, nts)));
                            (enders[i] = (new sc_Pair(sc_conf_18, (enders[i]))));
                            return (rule_loop((rules.cdr), (sc_conf_18+1), (rule_num+1)));
                        }
                    else
                        return conf;
                })), (rule_loop((def.cdr), conf, (1)))):conf);
            };
            def_loop(grammar, (0));
            return sc_makeStruct(names, starters, enders, predictors, steps);
        }
    }
};

var sc_makeFSA = function(grammar) {
    var nts;
    var start;
    var rules;
    var i;
    var j;
    var k;
    var n;
    var states;
    var transitions;
    var finals;
    var state;
    var rule;
    var nt;
    var to;
    var from;
    var delta;
    var delta_i;
    var delta_j;
    var delta_k;
    var delta_nt;
    var delta_to;
    var delta_from;
    var delta_delta;
    var delta_state;
    var delta_final;
    var delta_trans;
    var delta_sym;
    var delta_type;
    var delta_action;
    var delta_goto;
    var delta_reduce;
    var delta_shift;
    var delta_accept;
    var delta_dot;
    var delta_la;
    var delta_lb;
    var delta_len;
    var delta_prec;
    var delta_assoc;
    var delta_code;
    var delta_info;
    var delta_check;
    var delta_reduce_check;
    var delta_reduce_set;
    var delta_reduce_len;
    var delta_reduce_prod;
    var delta_reduce_term;
    var delta_reduce_index;
    var delta_goto_check;
    var delta_goto_set;
    var delta_goto_len;
    var delta_goto_prod;
    var delta_goto_term;
    var delta_goto_index;
    var delta_check_check;
    var delta_check_set;
    var delta_check_len;
    var delta_check_prod;
    var delta_check_term;
    var delta_check_index;
    var delta_accept_check;
    var delta_accept_set;
    var delta_accept_len;
    var delta_accept_prod;
    var delta_accept_term;
    var delta_accept_index;
    var delta_dot_check;
    var delta_dot_set;
    var delta_dot_len;
    var delta_dot_prod;
    var delta_dot_term;
    var delta_dot_index;
    var delta_la_check;
    var delta_la_set;
    var delta_la_len;
    var delta_la_prod;
    var delta_la_term;
    var delta_la_index;
    var delta_lb_check;
    var delta_lb_set;
    var delta_lb_len;
    var delta_lb_prod;
    var delta_lb_term;
    var delta_lb_index;
    var delta_len_check;
    var delta_len_set;
    var delta_len_len;
    var delta_len_prod;
    var delta_len_term;
    var delta_len_index;
    var delta_prec_check;
    var delta_prec_set;
    var delta_prec_len;
    var delta_prec_prod;
    var delta_prec_term;
    var delta_prec Analyze the following piece of code:.cdr), (sc_conf_18+(1)), (rule_num+(1))));
                        }
                    else
                        return (def_loop((defs.cdr), conf));
                }), (rule_loop((def.cdr), conf, (1)))):undefined);
            };
            (def_loop(grammar, (sc_nts_8.length)));
            (parser_descr = [lexer, sc_nts_8, sc_starters_5, sc_enders_4, sc_predictors_3, sc_steps_2, sc_names_1]);
            return function(input) {
                var optrOpnd;
                var sc_optrOpnd_20;
                var sc_optrOpnd_21;
                var sc_optrOpnd_22;
                var loop1;
                var BgL_sc_stateza2_23za2;
                var toks;
                var BgL_sc_nbzd2nts_24zd2;
                var sc_steps_25;
                var sc_enders_26;
                var state_num;
                var BgL_sc_statesza2_27za2;
                var states;
                var i;
                var conf;
                var l;
                var tok_nts;
                var sc_i_28;
                var sc_i_29;
                var l1;
                var l2;
                var tok;
                var tail1129;
                var L1125;
                var goal_enders;
                var BgL_sc_statesza2_30za2;
                var BgL_sc_nbzd2nts_31zd2;
                var BgL_sc_nbzd2confs_32zd2;
                var nb_toks;
                var goal_starters;
                var sc_states_33;
                var BgL_sc_nbzd2confs_34zd2;
                var BgL_sc_nbzd2toks_35zd2;
                var sc_toks_36;
                var falseHead1128;
                var sc_names_37;
                var sc_steps_38;
                var sc_predictors_39;
                var sc_enders_40;
                var sc_starters_41;
                var sc_nts_42;
                var lexer;
                var sc_ind_43;
                var make_states;
                var BgL_sc_confzd2setzd2getza2_44za2;
                var conf_set_merge_new_bang;
                var conf_set_adjoin;
                var BgL_sc_confzd2setzd2adjoinza2_45za2;
                var BgL_sc_confzd2setzd2adjoinza2za2_46z00;
                var conf_set_union;
                var forw;
                var is_parsed;
                var deriv_trees;
                var BgL_sc_derivzd2treesza2_47z70;
                var nb_deriv_trees;
                var BgL_sc_nbzd2derivzd2treesza2_48za2;
                {
                    sc_ind_43 = function(nt, sc_nts_49) {
                        var i;
                        {
                            (i = ((sc_nts_49.length)-(1)));
                            while (true) {
                                if ((i>=(0)))
                                    if ((sc_isEqual((sc_nts_49[i]), nt)))
                                        return i;
                                    else
                                        (--i);
                                else
                                    return false;
                            }
                        }
                    };
                    make_states = function(BgL_sc_nbzd2toks_50zd2, BgL_sc_nbzd2confs_51zd2) {
                        var v;
                        var i;
                        var sc_states_52;
                        {
                            (sc_states_52 = (sc_makeVector((BgL_sc_nbzd2toks_50zd2+(1)), false)));
                            (i = BgL_sc_nbzd2toks_50zd2);
                            while ((i>=(0))) {
                                {
                                    (v = (sc_makeVector((BgL_sc_nbzd2confs_51zd2+(1)), false)));
                                    (v[(0)] = (-1));
                                    (sc_states_52[i] = v);
                                }
                                (--i);
                            }
                            return sc_states_52;
                        }
                    };
                    BgL_sc_confzd2setzd2getza2_44za2 = function(conf_set, i) {
                        var v;
                        {
                            (v = (conf_set[(i)]));
                            if ((v<0))
                                return false;
                            else
                                return v;
                        }
                    };
                    conf_set_merge_new_bang = function(conf_set, i, v) {
                        var old_v;
                        {
                            (old_v = (conf_set_get(conf_set, i)));
                            if ((old_v<0))
                                (conf_set_adjoin(conf_set, i, v));
                            else
                                (conf_set_adjoin(conf_set, i, (old_v|v)));
                        }
                    };
                    conf_set_adjoin = function(conf_set, i, v) {
                        var old_v;
                        {
                            (old_v = (conf_set_get(conf_set, i)));
                            if ((old_v<0))
                                (conf_set[(i)] = v);
                            else
                                (conf_set[(i)] = (old_v|v));
                        }
                    };
                    BgL_sc_confzd2setzd2adjoinza2_45za2 = function(conf_set, i, v) {
                        var old_v;
                        {
                            (old_v = (conf_set_get(conf_set, i)));
                            if ((old_v<0))
                                (conf_set_adjoin(conf_set, i, v));
                            else
                                (conf_set[(i)] = (old_v|v));
                        }
                    };
                    BgL_sc_confzd2setzd2adjoinza2za2_46z00 = function(conf_set, i, v) {
                        var old_v;
                        {
                            (old_v = (conf_set_get(conf_set, i)));
                            if ((old_v<0))
                                (conf_set_adjoin(conf_set, i, v));
                            else
                                (conf_set[(i)] = (old_v|v));
                        }
                    };
                    conf_set_union = function(conf_set1, conf_set2) {
                        var i;
                        var v;
                        var conf_set_union_ret;
                        {
                            (conf_set_union_ret = (sc_makeVector((conf_set1.length), false)));
                            (i = conf_set1.length);
                            while ((i>=(0))) {
                                {
                                    (v = (conf_set_get(conf_set1, i)));
                                    if ((v<0))
                                        (conf_set_union_ret[(i)] = v);
                                    else
                                        (conf_set_union_ret[(i)] = (conf_set_get(conf_set2, i))));
                                }
                                (--i);
                            }
                            return conf_set_union_ret;
                        }
                    };
                    forw = function(input, states, sc_nts_53, sc_names_54, sc_steps_55, sc_predictors_56, sc_enders_57, sc_starters_58, sc_ind_59) {
                        var i Analyze the following piece of code:  = v);
                                    (--i);
                                }
                            }
                            return sc_states_52;
                        }
                    };
                    BgL_sc_confzd2setzd2getza2_44za2 = function(state, BgL_sc_statezd2num_53zd2, sc_conf_54) {
                        var conf_set;
                        var BgL_sc_confzd2set_55zd2;
                        return ((BgL_sc_confzd2set_55zd2 = (state[(sc_conf_54+(1))])), ((BgL_sc_confzd2set_55zd2!== false)?BgL_sc_confzd2set_55zd2:((conf_set = (sc_makeVector((BgL_sc_statezd2num_53zd2+(6)), false))), (conf_set[(1)] = (-3)), (conf_set[(2)] = (-1)), (conf_set[(3)] = (-1)), (conf_set[(4)] = (-1)), (state[(sc_conf_54+(1))] = conf_set), conf_set)));
                    };
                    conf_set_merge_new_bang = function(conf_set) {
                        return ((conf_set[((conf_set[(1)])+(5))] = (conf_set[(4)])), (conf_set[(1)] = (conf_set[(3)])), (conf_set[(3)] = (-1)), (conf_set[(4)] = (-1)));
                    };
                    conf_set_adjoin = function(state, conf_set, sc_conf_56, i) {
                        var tail;
                        return ((tail = (conf_set[(3)])), (conf_set[(i+(5))] = (-1)), (conf_set[(tail+(5))] = i), (conf_set[(3)] = i), ((tail<(0))?((conf_set[(0)] = (state[(0)])), (state[(0)] = sc_conf_56)):undefined));
                    };
                    BgL_sc_confzd2setzd2adjoinza2_45za2 = function(sc_states_57, BgL_sc_statezd2num_58zd2, l, i) {
                        var conf_set;
                        var sc_conf_59;
                        var l1;
                        var state;
                        {
                            (state = (sc_states_57[BgL_sc_statezd2num_58zd2]));
                            (l1 = l);
                            while ((l1 instanceof sc_Pair)) {
                                {
                                    (sc_conf_59 = (l1.car));
                                    (conf_set = (BgL_sc_confzd2setzd2getza2_44za2(state, BgL_sc_statezd2num_58zd2, sc_conf_59)));
                                    if (((conf_set[(i+(5))])=== false))
                                        {
                                            (conf_set_adjoin(state, conf_set, sc_conf_59, i));
                                            (l1 = (l1.cdr));
                                        }
                                    else
                                        (l1 = (l1.cdr));
                                }
                            }
                            return undefined;
                        }
                    };
                    BgL_sc_confzd2setzd2adjoinza2za2_46z00 = function(sc_states_60, BgL_sc_statesza2_61za2, BgL_sc_statezd2num_62zd2, sc_conf_63, i) {
                        var BgL_sc_confzd2setza2_64z70;
                        var BgL_sc_stateza2_65za2;
                        var conf_set;
                        var state;
                        return ((state = (sc_states_60[BgL_sc_statezd2num_62zd2])), ((((conf_set = (state[(sc_conf_63+(1))])), ((conf_set!== false)?(conf_set[(i+(5))]):false))!== false)?((BgL_sc_stateza2_65za2 = (BgL_sc_statesza2_61za2[BgL_sc_statezd2num_62zd2])), (BgL_sc_confzd2setza2_64z70 = (BgL_sc_confzd2setzd2getza2_44za2(state, BgL_sc_statezd2num_62zd2, sc_conf_63))), (BgL_sc_confzd2setzd2adjoinza2_45za2(sc_states_60, BgL_sc_statezd2num_62zd2, BgL_sc_stateza2_65za2, i)), (conf_set_merge_new_bang(BgL_sc_confzd2setza2_64z70)), (state[(sc_conf_63+(1))] = BgL_sc_confzd2setza2_64z70), undefined)):undefined));
                    };
                    BgL_sc_confzd2setzd2adjoinza2za2_46z01 = function(sc_states_66, BgL_sc_statesza2_67za2, BgL_sc_statezd2num_68zd2, sc_conf_69, i) {
                        var BgL_sc_confzd2setza2_70z70;
                        var BgL_sc_stateza2_71za2;
                        var conf_set;
                        var state;
                        return ((state = (sc_states_66[BgL_sc_statezd2num_68zd2])), ((((conf_set = (state[(sc_conf_69+(1))])), ((conf_set!== false)?(conf_set[(i+(5))]):false))!== false)?((BgL_sc_stateza2_71za2 = (BgL_sc_statesza2_67za2[BgL_sc_statezd2num_68zd2])), (BgL_sc_confzd2setza2_70z70 = (BgL_sc_confzd2setzd2getza2_44za2(state, BgL_sc_statezd2num_68zd2, sc_conf_69))), (BgL_sc_confzd2setzd2adjoinza2_45za2(sc_states_66, BgL_sc_statezd2num_68zd2, BgL_sc_stateza2_71za2, i)), (conf_set_merge_new_bang(BgL_sc_confzd2setza2_70z70)), (state[(sc_conf_69+(1))] = BgL_sc_confzd2setza2_70z70), undefined)):undefined));
                    };
                    BgL_sc_confzd2setzd2adjoinza2za2_46z02 = function(sc_states_72, BgL_sc_statesza2_73za2, BgL_sc_statezd2num_74zd2, sc_conf_75, i) {
                        var BgL_sc_confzd2setza2_76z70;
                        var BgL_sc_stateza2_77za2;
                        var conf_set;
                        var state;
                        return ((state = (sc_states_72[BgL_sc_statezd2num_74zd2])), ((((conf_ Analyze the following piece of code: za2_44za2(BgL_sc_stateza2_65za2, BgL_sc_statezd2num_62zd2, sc_conf_63))), (((BgL_sc_confzd2setza2_64z70[(i+(5))])=== false)?(conf_set_adjoin(BgL_sc_stateza2_65za2, BgL_sc_confzd2setza2_64z70, sc_conf_63, i)):undefined), true):false));
                    };
                    conf_set_union = function(state, conf_set, sc_conf_66, other_set) {
                        var i;
                        {
                            (i = (other_set[(2)]));
                            while ((i>=(0))) {
                                if (((conf_set[(i+(5))])=== false))
                                    {
                                        (conf_set_adjoin(state, conf_set, sc_conf_66, i));
                                        (i = (other_set[(i+(5))]));
                                    }
                                else
                                    (i = (other_set[(i+(5))]));
                            }
                            return undefined;
                        }
                    };
                    forw = function(sc_states_67, BgL_sc_statezd2num_68zd2, sc_starters_69, sc_enders_70, sc_predictors_71, sc_steps_72, sc_nts_73) {
                        var next_set;
                        var next;
                        var conf_set;
                        var ender;
                        var l;
                        var starter_set;
                        var starter;
                        var sc_l_74;
                        var sc_loop1_75;
                        var head;
                        var BgL_sc_confzd2set_76zd2;
                        var BgL_sc_statezd2num_77zd2;
                        var state;
                        var sc_states_78;
                        var preds;
                        var BgL_sc_confzd2set_79zd2;
                        var step;
                        var sc_conf_80;
                        var BgL_sc_nbzd2nts_81zd2;
                        var sc_state_82;
                        {
                            (sc_state_82 = (sc_states_67[BgL_sc_statezd2num_68zd2]));
                            (BgL_sc_nbzd2nts_81zd2 = (sc_nts_73.length));
                            while (true) {
                                {
                                    (sc_conf_80 = (sc_state_82[(0)]));
                                    if ((sc_conf_80>=(0)))
                                        {
                                            (step = (sc_steps_72[sc_conf_80]));
                                            (BgL_sc_confzd2set_79zd2 = (sc_state_82[(sc_conf_80+(1))]));
                                            (head = (BgL_sc_confzd2set_79zd2[(4)]));
                                            (sc_state_82[(0)] = (BgL_sc_confzd2set_79zd2[(0)]));
                                            (conf_set_merge_new_bang(BgL_sc_confzd2set_79zd2));
                                            if ((step>=(0)))
                                                {
                                                    (sc_l_74 = (sc_starters_69[step]));
                                                    while ((sc_l_74 instanceof sc_Pair)) {
                                                        {
                                                            (starter = (sc_l_74.car));
                                                            (starter_set = (BgL_sc_confzd2setzd2getza2_44za2(sc_state_82, BgL_sc_statezd2num_68zd2, starter)));
                                                            if (((starter_set[(BgL_sc_statezd2num_68zd2+(5))])=== false))
                                                                {
                                                                    (conf_set_adjoin(sc_state_82, starter_set, starter, BgL_sc_statezd2num_68zd2));
                                                                    (sc_l_74 = (sc_l_74.cdr));
                                                                }
                                                            else
                                                                (sc_l_74 = (sc_l_74.cdr));
                                                        }
                                                    }
                                                    (l = (sc_enders_70[step]));
                                                    while ((l instanceof sc_Pair)) {
                                                        {
                                                            (ender = (l.car));
                                                            (next_set = (conf_set_remove(sc_state_82, ender, BgL_sc_statezd2num_68zd2)));
                                                            conf_set_union(sc_state_82, next_set, ender, BgL_sc_nbzd2nts_81zd2);
                                                            (l = (l.cdr));
                                                        }
                                                    }
                                                    (preds = (sc_predictors_71[step]));
                                                    while ((preds instanceof sc_Pair)) {
                                                        {
                                                            (BgL_sc_statezd2num_77zd2 = (preds.car));
                                                            (BgL_sc_confzd2set_76zd2 = (conf_set_remove(sc_state_82, BgL_sc_statezd2num_77zd2, BgL_sc_statezd2num_68zd2)));
                                                            (next = forw(sc_states_67, BgL_sc_statezd2num_77zd2, sc_starters_69, sc_enders_70, sc_predictors_71, sc_steps_72, sc_nts_73));
                                                            conf_set_union(sc_state_82, BgL_sc_confzd2set_76zd2, BgL_sc_statezd2num_77zd2, next);
                                                            (preds = (preds.cdr));
                                                        }
                                                    }
                                                }
                                        }
                                    else
                                        break;
                                }
                            }
                            return sc_state_82;
                        }
                    };
                    BgL_sc_statezd2num_68zd2 = (0);
                    BgL_sc_statezd2num_65zd2 = (0);
                    BgL_sc_statezd2num_62zd2 = (0);
                    BgL_sc_confzd2set_61zd2 = (new Array(100000));
                    BgL_sc_confzd2set_60zd2 = (new Array(100000));
                    BgL_sc_confzd2set_59zd2 = (new Array(100000));
                    BgL_sc_confzd2set_58zd2 = (new Array(100000));
                    BgL_sc_confzd2set_57zd2 = (new Array(100000));
                    BgL_sc_confzd2set_56zd2 = (new Array(100000));
                    BgL_sc_confzd2set_55zd2 = (new Array(100000));
                    BgL_sc_confzd2set_54zd2 = (new Array(100000));
                    BgL_sc_confzd2set_53zd2 = (new Array(100000));
                    BgL_sc_confzd2set_52zd2 = (new Array(100000));
                    BgL_sc_confzd2set_51zd2 = (new Array(100000));
                    BgL_sc_confzd2set_50zd2 = Analyze the following piece of code:  (ender = (l.car));
                                                            if ((((conf_set = (sc_state_82[(ender+(1))])), ((conf_set!== false)?(conf_set[(BgL_sc_statezd2num_68zd2+(5))]):false))!== false))
                                                                {
                                                                    (next = (sc_conf_80+(1)));
                                                                    (next_set = (BgL_sc_confzd2setzd2getza2_44za2(sc_state_82, BgL_sc_statezd2num_68zd2, next)));
                                                                    (conf_set_union(sc_state_82, next_set, next, BgL_sc_confzd2set_79zd2));
                                                                    (l = (l.cdr));
                                                                }
                                                            else
                                                                (l = (l.cdr));
                                                        }
                                                    }
                                                }
                                            else
                                                {
                                                    (preds = (sc_predictors_71[(step+BgL_sc_nbzd2nts_81zd2)]));
                                                    (sc_states_78 = sc_states_67);
                                                    (state = sc_state_82);
                                                    (BgL_sc_statezd2num_77zd2 = BgL_sc_statezd2num_68zd2);
                                                    (BgL_sc_confzd2set_76zd2 = BgL_sc_confzd2set_79zd2);
                                                    sc_loop1_75 = function(l) {
                                                        var sc_state_83;
                                                        var BgL_sc_nextzd2set_84zd2;
                                                        var sc_next_85;
                                                        var pred_set;
                                                        var i;
                                                        var pred;
                                                        if ((l instanceof sc_Pair))
                                                            {
                                                                (pred = (l.car));
                                                                (i = head);
                                                                while ((i>=(0))) {
                                                                    {
                                                                        (pred_set = ((sc_state_83 = (sc_states_78[i])), (sc_state_83[(pred+(1))])));
                                                                        if ((pred_set!== false))
                                                                            {
                                                                                (sc_next_85 = (pred+(1)));
                                                                                (BgL_sc_nextzd2set_84zd2 = (BgL_sc_confzd2setzd2getza2_44za2(state, BgL_sc_statezd2num_77zd2, sc_next_85)));
                                                                                (conf_set_union(state, BgL_sc_nextzd2set_84zd2, sc_next_85, pred_set));
                                                                            }
                                                                        (i = (BgL_sc_confzd2set_76zd2[(i+(5))]));
                                                                    }
                                                                }
                                                                return (sc_loop1_75((l.cdr)));
                                                            }
                                                        else
                                                            return undefined;
                                                    };
                                                    (sc_loop1_75(preds));
                                                }
                                        }
                                    else
                                        return undefined;
                                }
                            }
                        }
                    };
                    is_parsed = function(nt, i, j, sc_nts_86, sc_enders_87, sc_states_88) {
                        var conf_set;
                        var state;
                        var sc_conf_89;
                        var l;
                        var BgL_sc_ntza2_90za2;
                        {
                            (BgL_sc_ntza2_90za2 = (sc_ind_43(nt, sc_nts_86)));
                            if ((BgL_sc_ntza2_90za2!== false))
                                {
                                    (sc_nts_86.length);
                                    (l = (sc_enders_87[BgL_sc_ntza2_90za2]));
                                    while (true) {
                                        if ((l instanceof sc_Pair))
                                            {
                                                (sc_conf_89 = (l.car));
                                                if ((((state = (sc_states_88[j])), (conf_set = (state[(sc_conf_89+(1))])), ((conf_set!== false)?(conf_set[(i+(5))]):false))!== false))
                                                    return true;
                                                else
                                                    (l = (l.cdr));
                                            }
                                        else
                                            return false;
                                    }
                                }
                            else
                                return false;
                        }
                    };
                    deriv_trees = function(sc_conf_91, i, j, sc_enders_92, sc_steps_93, sc_nts_94, sc_states_95) {
                        var l;
                        var BgL_sc_stepza2_96za2;
                        var BgL_sc_ntza2_97za2;
                        var BgL_sc_statezd2num_98zd2;
                        var BgL_sc_confzd2set_99zd2;
                        var BgL_sc_nextzd2set_100zd2;
                        var BgL_sc_next_101;
                        var BgL_sc_pred_102;
                        var BgL_sc_i_103;
                        var BgL_sc_j_104;
                        var BgL_sc_l_105;
                        var BgL_sc_nts_106;
                        var BgL_sc_enders_107;
                        var BgL_sc_states_108;
                        var BgL_sc_conf_109;
                        var BgL_sc_is_parsed_110;
                        var BgL_sc_deriv_trees_111;
                        var derivs;
                        var deriv;
                        var nt;
                        {
                            (BgL_sc_stepza2_96za2 = (sc_ind_43(i, sc_steps_93)));
                            if ((BgL_sc_stepza2_96za2!== false))
                                {
                                    (BgL_sc_ntza2_97za2 = (sc_ind_43(j, sc_nts_94)));
                                    if ((BgL_sc_ntza2_97za2!== false))
                                        {
                                            (BgL_sc_statezd2num_98zd2 = (sc_steps_93[(BgL_sc_stepza2_96za2+(1))]));
                                            (BgL_sc_confzd2set_99zd2 = (sc_states_95[BgL_sc_statezd2num_98zd2]));
                                            (BgL_sc_nextzd2set_100zd2 = (BgL_sc_confzd2set_99zd2[(j+(5))]));
                                            (l = (BgL_sc_nextzd2set_100zd2));
                                            (derivs = (new sc_List));
                                            while (true) {
                                                if ((l instanceof sc_Pair))
                                                    {
                                                        (BgL_sc_next_101 = (l.car));
                                                        (BgL_sc_pred_102 = (BgL_sc_next_101-(1)));
                                                        (BgL_sc_i_103 = i);
                                                        (BgL_sc_j_104 = BgL_sc_next_101);
                                                        (BgL_sc_l_105 = (l.cdr));
                                                        (BgL_sc_nts_106 = sc_nts_94);
                                                        (BgL_sc_enders_107 = sc_enders_92);
                                                        (BgL_sc_states_108 = sc_states_95);
                                                        (BgL_sc_conf_109 = BgL_sc_next_ Analyze the following piece of code: 3, sc_names_94, sc_toks_95, sc_states_96, BgL_sc_nbzd2nts_97zd2) {
                        var sc_loop1_98;
                        var prev;
                        var name;
                        return ((name = (sc_names_94[sc_conf_91])), ((name!== false)?((sc_conf_91<BgL_sc_nbzd2nts_97zd2)?(sc_list((sc_list(name, ((sc_toks_95[i]).car))))):(sc_list((sc_list(name))))):((prev = (sc_conf_91-(1))), (sc_loop1_98 = function(l1, l2) {
                            var loop2;
                            var ender_set;
                            var state;
                            var ender;
                            var l1;
                            var l2;
                            while (true) {
                                if ((l1 instanceof sc_Pair))
                                    {
                                        (ender = (l1.car));
                                        (ender_set = ((state = (sc_states_96[j])), (state[(ender+(1))])));
                                        if ((ender_set!== false))
                                            {
                                                loop2 = function(k, l2) {
                                                    var loop3;
                                                    var ender_trees;
                                                    var prev_trees;
                                                    var conf_set;
                                                    var sc_state_99;
                                                    var k;
                                                    var l2;
                                                    while (true) {
                                                        if ((k>=(0)))
                                                            if (((k>=i)&&(((sc_state_99 = (sc_states_96[k])), (conf_set = (sc_state_99[(prev+(1))])), ((conf_set!== false)?(conf_set[(i+(5))]):false))!== false)))
                                                                {
                                                                    (prev_trees = (deriv_trees(prev, i, k, sc_enders_92, sc_steps_93, sc_names_94, sc_toks_95, sc_states_96, BgL_sc_nbzd2nts_97zd2)));
                                                                    (ender_trees = (deriv_trees(ender, k, j, sc_enders_92, sc_steps_93, sc_names_94, sc_toks_95, sc_states_96, BgL_sc_nbzd2nts_97zd2)));
                                                                    loop3 = function(l3, l2) {
                                                                        var l4;
                                                                        var sc_l2_100;
                                                                        var ender_tree;
                                                                        if ((l3 instanceof sc_Pair))
                                                                            {
                                                                                (ender_tree = (sc_list((l3.car))));
                                                                                (l4 = prev_trees);
                                                                                (sc_l2_100 = l2);
                                                                                while ((l4 instanceof sc_Pair)) {
                                                                                    {
                                                                                        (sc_l2_100 = (new sc_Pair((sc_append((l4.car), ender_tree)), sc_l2_100)));
                                                                                        (l4 = (l4.cdr));
                                                                                    }
                                                                                }
                                                                                return (loop3((l3.cdr), sc_l2_100));
                                                                            }
                                                                        else
                                                                            return (loop2((ender_set[(k+(5))]), l2));
                                                                    };
                                                                    return (loop3(ender_trees, l2));
                                                                }
                                                            else
                                                                (k = (ender_set[(k+(5))]));
                                                        else
                                                            return (sc_loop1_98((l1.cdr), l2));
                                                    }
                                                };
                                                return (loop2((ender_set[(2)]), l2));
                                            }
                                        else
                                            (l1 = (l1.cdr));
                                    }
                                else
                                    return l2;
                            }
                        }), (sc_loop1_98((sc_enders_92[(sc_steps_93[prev])]), null)))));
                    };
                    BgL_sc_derivzd2treesza2_47z70 = function(nt, i, j, sc_nts_101, sc_enders_102, sc_steps_103, sc_names_104, sc_toks_105, sc_states_106) {
                        var conf_set;
                        var state;
                        var sc_conf_107;
                        var l;
                        var trees;
                        var BgL_sc_nbzd2nts_108;
                        var sc_nts_101;
                        var sc_enders_102;
                        var sc_steps_103;
                        var sc_names_104;
                        var sc_toks_105;
                        var sc_states_106;
                        var nt;
                        var i;
                        var j;
                        var sc_nts_101;
                        var sc_enders_102;
                        var sc_steps_103;
                        var sc_names_104;
                        var sc_toks_105;
                        var sc_states_106;
                        var BgL_sc_nbzd2nts_108;
                        var sc_nts_101;
                        var sc_enders_102;
                        var sc_steps_103;
                        var sc_names_104;
                        var sc_toks_105;
                        var sc_states_106;
                        var BgL_sc_deriv_trees_109;
                        var sc_nts_101;
                        var sc_enders_102;
                        var sc_steps_103;
                        var sc_names_104;
                        var sc_toks_105;
                        var sc_states_106;
                        var BgL_sc_deriv_trees_109;
                        var sc_nts_101;
                        var sc_enders_102;
                        var sc_steps_103;
                        var sc_names_104;
                        var sc_toks_105;
                        var sc_states_106;
                        var BgL_sc_deriv_trees_109;
                        var sc_nts_101;
                        var sc_enders_102;
                        var sc_steps_103;
                        var sc_names_104;
                        var sc_toks_105;
                        var sc_states_106;
                        var BgL_sc_deriv_trees_109;
                        var sc_nts_101;
                        var sc_enders_102;
                        var sc_steps_103;
                        var sc_names_104;
                        var sc_toks_105;
                        var sc_states_106;
                        var BgL_sc_deriv_trees_109;
                        var sc_nts_101;
                        var sc_enders_102;
                        var sc_steps_103;
                        var sc_names_104;
                        var sc_toks_105;
                        var sc_states_106;
                        var BgL_sc_deriv_trees_109;
                        var sc_nts_101;
                        var sc_enders_102;
                        var sc_steps_103;
                        var sc_names_104;
                        var sc_toks_105;
                        var sc_states_106;
                        var BgL_sc_deriv_trees_109;
                        var sc_nts_101;
                        var sc_enders_102;
                        var sc_steps_103;
                        var sc_names_104;
                        var Analyze the following piece of code: nts_108zd2;
                        var BgL_sc_ntza2_109za2;
                        {
                            (BgL_sc_ntza2_109za2 = (sc_ind_43(nt, sc_nts_101)));
                            if ((BgL_sc_ntza2_109za2!== false))
                                {
                                    (BgL_sc_nbzd2nts_108zd2 = (sc_nts_101.length));
                                    (l = (sc_enders_102[BgL_sc_ntza2_109za2]));
                                    (trees = null);
                                    while ((l instanceof sc_Pair)) {
                                        {
                                            (sc_conf_107 = (l.car));
                                            if ((((state = (sc_states_106[j])), (conf_set = (state[(sc_conf_107+(1))])), ((conf_set!== false)?(conf_set[(i+(5))]):false))!== false))
                                                {
                                                    (l = (l.cdr));
                                                    (trees = (sc_append((deriv_trees(sc_conf_107, i, j, sc_enders_102, sc_steps_103, sc_names_104, sc_toks_105, sc_states_106, BgL_sc_nbzd2nts_108zd2)), trees)));
                                                }
                                            else
                                                (l = (l.cdr));
                                        }
                                    }
                                    return trees;
                                }
                            else
                                return false;
                        }
                    };
                    nb_deriv_trees = function(sc_conf_110, i, j, sc_enders_111, sc_steps_112, sc_toks_113, sc_states_114, BgL_sc_nbzd2nts_115zd2) {
                        var sc_loop1_116;
                        var tmp1124;
                        var prev;
                        return ((prev = (sc_conf_110-(1))), ((((tmp1124 = (sc_conf_110<BgL_sc_nbzd2nts_115zd2)), ((tmp1124!== false)?tmp1124:((sc_steps_112[prev])<(0))))!== false)?(1):((sc_loop1_116 = function(l, sc_n_118) {
                            var nb_ender_trees;
                            var nb_prev_trees;
                            var conf_set;
                            var state;
                            var k;
                            var n;
                            var ender_set;
                            var sc_state_117;
                            var ender;
                            var l;
                            var sc_n_118;
                            while (true) {
                                if ((l instanceof sc_Pair))
                                    {
                                        (ender = (l.car));
                                        (ender_set = ((sc_state_117 = (sc_states_114[j])), (sc_state_117[(ender+(1))])));
                                        if ((ender_set!== false))
                                            {
                                                (k = (ender_set[(2)]));
                                                (n = sc_n_118);
                                                while ((k>=(0))) {
                                                    if (((k>=i)&&(((state = (sc_states_114[k])), (conf_set = (state[(prev+(1))])), ((conf_set!== false)?(conf_set[(i+(5))]):false))!== false)))
                                                        {
                                                            (nb_prev_trees = (nb_deriv_trees(prev, i, k, sc_enders_111, sc_steps_112, sc_toks_113, sc_states_114, BgL_sc_nbzd2nts_115zd2)));
                                                            (nb_ender_trees = (nb_deriv_trees(ender, k, j, sc_enders_111, sc_steps_112, sc_toks_113, sc_states_114, BgL_sc_nbzd2nts_115zd2)));
                                                            (k = (ender_set[(k+(5))]));
                                                            (n +=(nb_prev_trees*nb_ender_trees));
                                                        }
                                                    else
                                                        (k = (ender_set[(k+(5))]));
                                                }
                                                return n;
                                            }
                                        else
                                            (l = (l.cdr));
                                    }
                                else
                                    return 0;
                            }
                        }), (sc_loop1_116((sc_enders_111[prev]), 1)))));
                    };
                    deriv_trees = function(sc_conf_120, i, j, sc_enders_121, sc_steps_122, sc_names_123, sc_toks_124, sc_states_125, BgL_sc_nbzd2nts_126zd2) {
                        var sc_loop1_127;
                        var tmp1125;
                        var prev;
                        return ((prev = (sc_conf_120-(1))), ((((tmp1125 = (sc_conf_120<BgL_sc_nbzd2nts_126zd2)), ((tmp1125!== false)?tmp1125:((sc_steps_122[prev])<(0))))!== false)?(1):((sc_loop1_127 = function(l, sc_n_129) {
                            var deriv_ender_trees;
                            var deriv_prev_trees;
                            var conf_set;
                            var state;
                            var k;
                            var n;
                            var ender_set;
                            var sc_state_128;
                            var ender;
                            var l;
                            var sc_n_129;
                            while (true) {
                                if ((l instanceof sc_Pair))
                                    {
                                        (ender = (l.car));
                                        (ender_set = ((sc_state_128 = (sc_states_125[j])), (sc_state_128[(ender+(1))])));
                                        if ((ender_set!== false))
                                            {
                                                (k = (ender_set[(2)]));
                                                (n = sc_n_129);
                                                while ((k>=(0))) {
                                                    if (((k>=i)&&(((state = (sc_states_125[k])), (conf_set = (state[(prev+(1))])), ((conf_set!== false)?(conf_set[(i+(5))]):false))!== false)))
                                                        {
                                                            (deriv_prev_trees = (deriv_trees(prev, i, k, sc_enders_121, sc_steps_122, sc_names_123, sc_toks_124, sc_states_125, BgL_sc_nbzd2nts_126zd2)));
                                                            (deriv_ender_trees = (deriv_trees(ender, k, j, sc_enders_121, sc_steps_122, sc_names_123, sc_toks_124, sc_states_125, BgL_sc_nbzd2nts_126zd2)));
                                                            (k = (ender_set[(k+(5))]));
                                                            (n +=(deriv_prev_trees*deriv_ender_trees));
                                                        }
                                                    else
                                                        (k = (ender_set[(k+(5))]));
                                                }
                                                return n;
                                            }
                                        else
                                            (l = (l.cdr));
                                    }
                                else
                                    return 0;
                            }
                        }), (sc_loop Analyze the following piece of code: 5))]));
                                                }
                                                return (sc_loop1_116((l.cdr), n));
                                            }
                                        else
                                            (l = (l.cdr));
                                    }
                                else
                                    return sc_n_118;
                            }
                        }), (sc_loop1_116((sc_enders_111[(sc_steps_112[prev])]), (0))))));
                    };
                    BgL_sc_nbzd2derivzd2treesza2_48za2 = function(nt, i, j, sc_nts_119, sc_enders_120, sc_steps_121, sc_toks_122, sc_states_123) {
                        var conf_set;
                        var state;
                        var sc_conf_124;
                        var l;
                        var nb_trees;
                        var BgL_sc_nbzd2nts_125zd2;
                        var BgL_sc_ntza2_126za2;
                        {
                            (BgL_sc_ntza2_126za2 = (sc_ind_43(nt, sc_nts_119)));
                            if ((BgL_sc_ntza2_126za2!== false))
                                {
                                    (BgL_sc_nbzd2nts_125zd2 = (sc_nts_119.length));
                                    (l = (sc_enders_120[BgL_sc_ntza2_126za2]));
                                    (nb_trees = (0));
                                    while ((l instanceof sc_Pair)) {
                                        {
                                            (sc_conf_124 = (l.car));
                                            if ((((state = (sc_states_123[j])), (conf_set = (state[(sc_conf_124+(1))])), ((conf_set!== false)?(conf_set[(i+(5))]):false))!== false))
                                                {
                                                    (l = (l.cdr));
                                                    (nb_trees = ((nb_deriv_trees(sc_conf_124, i, j, sc_enders_120, sc_steps_121, sc_toks_122, sc_states_123, BgL_sc_nbzd2nts_125zd2))+nb_trees));
                                                }
                                            else
                                                (l = (l.cdr));
                                        }
                                    }
                                    return nb_trees;
                                }
                            else
                                return false;
                        }
                    };
                    (lexer = (parser_descr[(0)]));
                    (sc_nts_42 = (parser_descr[(1)]));
                    (sc_starters_41 = (parser_descr[(2)]));
                    (sc_enders_40 = (parser_descr[(3)]));
                    (sc_predictors_39 = (parser_descr[(4)]));
                    (sc_steps_38 = (parser_descr[(5)]));
                    (sc_names_37 = (parser_descr[(6)]));
                    (falseHead1128 = (new sc_Pair(null, null)));
                    (L1125 = (lexer(input)));
                    (tail1129 = falseHead1128);
                    while (!(L1125 === null)) {
                        {
                            (tok = (L1125.car));
                            (l1 = (tok.cdr));
                            (l2 = null);
                            while ((l1 instanceof sc_Pair)) {
                                {
                                    (sc_i_29 = (sc_ind_43((l1.car), sc_nts_42)));
                                    if ((sc_i_29!== false))
                                        {
                                            (l1 = (l1.cdr));
                                            (l2 = (new sc_Pair(sc_i_29, l2)));
                                        }
                                    else
                                        (l1 = (l1.cdr));
                                }
                            }
                            (sc_optrOpnd_22 = (new sc_Pair((tok.car), (sc_reverse(l2)))));
                            (sc_optrOpnd_21 = (new sc_Pair(sc_optrOpnd_22, null)));
                            (tail1129.cdr = sc_optrOpnd_21);
                            (tail1129 = (tail1129.cdr));
                            (L1125 = (L1125.cdr));
                        }
                    }
                    (sc_toks_113 = (new sc_Pair(falseHead1128.cdr, null)));
                    (sc_states_114 = (new Array(input.length)));
                    (i = (0));
                    while ((i < input.length)) {
                        {
                            (sc_states_114[(i)] = (new Array(sc_nts_42.length)));
                            (j = (0));
                            while ((j < sc_nts_42.length)) {
                                {
                                    (sc_states_114[(i)][(j)] = (new Array(sc_steps_38[(j)])));
                                    (k = (0));
                                    while ((k < sc_steps_38[(j)])) {
                                        {
                                            (sc_states_114[(i)][(j)][(k)] = (new sc_Pair(false, (new Array(sc_nts_42.length))))));
                                        }
                                        (k = ((k)+1));
                                    }
                                }
                                (j = ((j)+1));
                            }
                        }
                        (i = ((i)+1));
                    }
                    (i = (0));
                    while ((i < input.length)) {
                        {
                            (j = (0));
                            while ((j < sc_nts_42.length)) {
                                {
                                    (k = (0));
                                    while ((k < sc_steps_38[(j)])) {
                                        {
                                            (sc_states_114[(i)][(j)][(k)] = (new sc_Pair(false, (new Array(sc_nts_42.length))))));
                                        }
                                        (k = ((k)+1));
                                    }
                                }
                                (j = ((j)+1));
                            }
                        }
                        (i = ((i)+1));
                    }
                    (i = (0));
                    while ((i < input.length)) {
                        {
                            (j = (0));
                            while ((j < sc_nts_42.length)) {
                                {
                                    (k = (0));
                                    while ((k < sc_steps_38[(j)])) {
                                        {
                                            (sc_states_114[(i)][(j)][(k)] = (new sc_Pair(false, (new Array(sc_nts_42.length))))));
                                        }
                                        (k = ((k)+1));
                                    }
                                }
                                (j = ((j)+1));
                            }
                        }
                        (i = ((i)+1));
                    }
                    (i = (0));
                    while ((i < input.length)) {
                        {
                            (j = (0));
                            while ((j < sc_nts_42.length)) {
                                {
                                    (k = (0));
                                    while ((k < sc_steps_38[(j)])) {
                                        {
                                            (sc_states_114[(i)][(j)][(k)] = (new sc_Pair(false, (new Array(sc_nts_42.length))))));
                                        }
                                        (k = ((k)+1));
                                    }
                                }
                                (j = ((j)+1));
                            }
                        }
                        (i = ((i)+1));
                    }
                    (i = (0));
                    while ((i < input.length)) {
                        {
                            (j = (0));
                            while ((j < sc_nts_42.length)) {
                                {
                                    (k = Analyze the following piece of code:  }
                    }
                    (sc_optrOpnd_20 = (falseHead1128.cdr));
                    (sc_toks_36 = (sc_list2vector(sc_optrOpnd_20)));
                    (BgL_sc_nbzd2toks_35zd2 = (sc_toks_36.length));
                    (BgL_sc_nbzd2confs_34zd2 = (sc_steps_38.length));
                    (sc_states_33 = (make_states(BgL_sc_nbzd2toks_35zd2, BgL_sc_nbzd2confs_34zd2)));
                    (goal_starters = (sc_starters_41[(0)]));
                    (BgL_sc_confzd2setzd2adjoinza2_45za2(sc_states_33, (0), goal_starters, (0)));
                    (forw(sc_states_33, (0), sc_starters_41, sc_enders_40, sc_predictors_39, sc_steps_38, sc_nts_42));
                    (sc_i_28 = (0));
                    while ((sc_i_28<BgL_sc_nbzd2toks_35zd2)) {
                        {
                            (tok_nts = ((sc_toks_36[sc_i_28]).cdr));
                            (BgL_sc_confzd2setzd2adjoinza2_45za2(sc_states_33, (sc_i_28+(1)), tok_nts, sc_i_28));
                            (forw(sc_states_33, (sc_i_28+(1)), sc_starters_41, sc_enders_40, sc_predictors_39, sc_steps_38, sc_nts_42));
                            (++sc_i_28);
                        }
                    }
                    (nb_toks = (sc_toks_36.length));
                    (BgL_sc_nbzd2confs_32zd2 = (sc_steps_38.length));
                    (BgL_sc_nbzd2nts_31zd2 = (sc_nts_42.length));
                    (BgL_sc_statesza2_30za2 = (make_states(nb_toks, BgL_sc_nbzd2confs_32zd2)));
                    (goal_enders = (sc_enders_40[(0)]));
                    (l = goal_enders);
                    while ((l instanceof sc_Pair)) {
                        {
                            (conf = (l.car));
                            (BgL_sc_confzd2setzd2adjoinza2za2_46z00(sc_states_33, BgL_sc_statesza2_30za2, nb_toks, conf, (0)));
                            (l = (l.cdr));
                        }
                    }
                    (i = nb_toks);
                    while ((i>=(0))) {
                        {
                            (states = sc_states_33);
                            (BgL_sc_statesza2_27za2 = BgL_sc_statesza2_30za2);
                            (state_num = i);
                            (sc_enders_26 = sc_enders_40);
                            (sc_steps_25 = sc_steps_38);
                            (BgL_sc_nbzd2nts_24zd2 = BgL_sc_nbzd2nts_31zd2);
                            (toks = sc_toks_36);
                            (BgL_sc_stateza2_23za2 = (BgL_sc_statesza2_30za2[i]));
                            loop1 = function() {
                                var sc_loop1_127;
                                var prev;
                                var BgL_sc_statesza2_128za2;
                                var sc_states_129;
                                var j;
                                var i;
                                var sc_i_130;
                                var head;
                                var conf_set;
                                var sc_conf_131;
                                {
                                    (sc_conf_131 = (BgL_sc_stateza2_23za2[(0)]));
                                    if ((sc_conf_131 === false)) {
                                        (prev = (i-1));
                                        (BgL_sc_statesza2_128za2 = BgL_sc_statesza2_27za2);
                                        (sc_states_129 = states);
                                        (j = (i-1));
                                        (i = prev);
                                        (sc_enders_126 = sc_enders_26);
                                        (sc_steps_125 = sc_steps_25);
                                        (BgL_sc_nbzd2nts_124zd2 = BgL_sc_nbzd2nts_24zd2);
                                        (toks = toks);
                                        (BgL_sc_stateza2_123za2 = (BgL_sc_statesza2_27za2[i]));
                                        return loop1;
                                    } else {
                                        (conf_set = (sc_conf_131.cdr));
                                        (j = (i-1));
                                        (i = (j-1));
                                        (head = (toks[j]));
                                        (BgL_sc_confzd2setzd2adjoinza2za2_46z00(sc_states_129, BgL_sc_statesza2_128za2, j, head, conf_set));
                                        (l = conf_set);
                                        while ((l instanceof sc_Pair)) {
                                            {
                                                (conf = (l.car));
                                                (BgL_sc_confzd2setzd2adjoinza2za2_46z00(sc_states_129, BgL_sc_statesza2_128za2, j, head, conf));
                                                (l = (l.cdr));
                                            }
                                        }
                                        (BgL_sc_nbzd2nts_124zd2 = (BgL_sc_nbzd2nts_124zd2-1));
                                        (toks = (toks.slice(0, j)));
                                        (BgL_sc_stateza2_123za2 = (BgL_sc_statesza2_128za2[j]));
                                        if ((BgL_sc_nbzd2nts_124zd2 === 0)) {
                                            (sc_enders_126 = (sc_append(sc_enders_126, (new sc_Pair(j, conf_set)))));
                                        }
                                        return loop1;
                                    }
                                }
                            };
                            loop1();
                            (states = BgL_sc_statesza2_27za2);
                            (BgL_sc_statesza2_27za2 = BgL_sc_statesza2_128za2);
                            (sc_enders_26 = sc_enders_126);
                            (sc_steps_25 = sc_steps_125);
                            (BgL_sc_nbzd2nts_24zd2 = BgL_sc_nbzd2nts_124zd2);
                            (toks = toks);
                            (i = (i+1));
                        }
                    }
                    (sc_states_43 = states);
                    (BgL_sc_nbzd2confs_32zd2 = (sc_steps_38.length));
                    (BgL Analyze the following piece of code: _conf_131>=(0)))
                                        {
                                            (conf_set = (BgL_sc_stateza2_23za2[(sc_conf_131+(1))]));
                                            (head = (conf_set[(4)]));
                                            (BgL_sc_stateza2_23za2[(0)] = (conf_set[(0)]));
                                            (conf_set_merge_new_bang(conf_set));
                                            (sc_i_130 = head);
                                            while ((sc_i_130>=(0))) {
                                                {
                                                    (i = sc_i_130);
                                                    (j = state_num);
                                                    (sc_states_129 = states);
                                                    (BgL_sc_statesza2_128za2 = BgL_sc_statesza2_27za2);
                                                    (prev = (sc_conf_131-(1)));
                                                    if (((sc_conf_131>=BgL_sc_nbzd2nts_24zd2)&&((sc_steps_25[prev])>=(0))))
                                                        {
                                                            sc_loop1_127 = function(l) {
                                                                var k;
                                                                var ender_set;
                                                                var state;
                                                                var ender;
                                                                var l;
                                                                while (true) {
                                                                    if ((l instanceof sc_Pair))
                                                                        {
                                                                            (ender = (l.car));
                                                                            (ender_set = ((state = (sc_states_129[j])), (state[(ender+(1))])));
                                                                            if ((ender_set!== false))
                                                                                {
                                                                                    (k = (ender_set[(2)]));
                                                                                    while ((k>=(0))) {
                                                                                        {
                                                                                            if ((k>=i))
                                                                                                if (((BgL_sc_confzd2setzd2adjoinza2za2_46z00(sc_states_129, BgL_sc_statesza2_128za2, k, prev, i))!== false))
                                                                                                    (BgL_sc_confzd2setzd2adjoinza2za2_46z00(sc_states_129, BgL_sc_statesza2_128za2, j, ender, k));
                                                                                            (k = (ender_set[(k+(5))]));
                                                                                        }
                                                                                    }
                                                                                    return (sc_loop1_127((l.cdr)));
                                                                                }
                                                                            else
                                                                                (l = (l.cdr));
                                                                        }
                                                                    else
                                                                        return undefined;
                                                                }
                                                            };
                                                            (sc_loop1_127((sc_enders_26[(sc_steps_25[prev])])));
                                                        }
                                                    (sc_i_130 = (conf_set[(sc_i_130+(5))]));
                                                }
                                            }
                                            return (loop1());
                                        }
                                    else
                                        return undefined;
                                }
                            };
                            (loop1());
                            (--i);
                        }
                    }
                    (optrOpnd = BgL_sc_statesza2_30za2);
                    return [sc_nts_42, sc_starters_41, sc_enders_40, sc_predictors_39, sc_steps_38, sc_names_37, sc_toks_36, optrOpnd, is_parsed, BgL_sc_derivzd2treesza2_47z70, BgL_sc_nbzd2derivzd2treesza2_48za2];
                }
            };
        }
    };
    BgL_parsezd2ze3parsedzf3zc2 = function(parse, nt, i, j) {
        var is_parsed;
        var states;
        var enders;
        var nts;
        return ((nts = (parse[(0)])), (enders = (parse[(2)])), (states = (parse[(7)])), (is_parsed = (parse[(8)])), (is_parsed(nt, i, j, nts, enders, states)));
    };
    BgL_parsezd2ze3treesz31 = function(parse, nt, i, j) {
        var BgL_sc_derivzd2treesza2_132z70;
        var states;
        var toks;
        var names;
        var steps;
        var enders;
        var nts;
        return ((nts = (parse[(0)])), (enders = (parse[(2)])), (toks = (parse[(3)])), (names = (parse[(4)])), (steps = (parse[(5)])), (states = (parse[(7)])), (BgL_sc_derivzd2treesza2_132z70 = (parse[(10)])), BgL_sc_derivzd2treesza2_132z70(nt, i, j, nts, enders, toks, names, steps, states));
    };
    BgL_parsezd2ze3derivzd2treesz31 = function(parse, nt, i, j) {
        var BgL_sc_derivzd2treesza2_133z70;
        var states;
        var toks;
        var names;
        var steps;
        var enders;
        var nts;
        return ((nts = (parse[(0)])), (enders = (parse[(2)])), (toks = (parse[(3)])), (names = (parse[(4)])), (steps = (parse[(5)])), (states = (parse[(7)])), (BgL_sc_derivzd2treesza2_133z70 = (parse[(11)])), BgL_sc_derivzd2treesza2_133z70(nt, i, j, nts, enders, toks, names, steps, states));
    };
    BgL_parsezd2ze3parsedz31 = function(parse, nt, i, j) {
        var BgL_sc_derivzd2treesza2_134z70;
        var states;
        var toks;
        var names;
        var steps;
        var enders;
        var nts;
        return ((nts = (parse[(0)])), (enders = (parse[(2)])), (toks = (parse[(3)])), (names = (parse[(4)])), (steps = (parse[(5)])), (states = (parse[(7)])), (BgL_sc_derivzd2treesza2_134z70 = (parse[(12)])), BgL_sc_derivzd2treesza2_134z70(nt, i, j, nts, enders, toks, names, steps, states));
    };
    BgL_parsezd2ze3derivzd2treesz32 = function(parse, nt, i, j, k) {
        var BgL_sc_derivzd2treesza2_135z70;
        var states;
        var toks;
        var names;
        var steps;
        var enders;
        var nts;
        return ((nts = (parse[(0)])), (enders = (parse[(2)])), (toks = (parse[(3)])), (names = (parse[(4)])), (steps = (parse[(5)])), (states = (parse[(7)])), (BgL_sc_derivzd2treesza2_135z70 = (parse[(13)])), BgL_sc_derivzd2treesza2_135z70(nt, i, j, k, nts, enders, toks, names, steps, states));
    };
    BgL_parsezd2ze3parsedz32 = function(parse, nt, i Analyze the following piece of code: )])), (steps = (parse[(4)])), (names = (parse[(5)])), (toks = (parse[(6)])), (states = (parse[(7)])), (BgL_sc_derivzd2treesza2_132z70 = (parse[(9)])), (BgL_sc_derivzd2treesza2_132z70(nt, i, j, nts, enders, steps, names, toks, states)));
    };
    BgL_parsezd2ze3nbzd2treesze3 = function(parse, nt, i, j) {
        var BgL_sc_nbzd2derivzd2treesza2_133za2;
        var states;
        var toks;
        var steps;
        var enders;
        var nts;
        return ((nts = (parse[(0)])), (enders = (parse[(2)])), (steps = (parse[(4)])), (toks = (parse[(6)])), (states = (parse[(7)])), (BgL_sc_nbzd2derivzd2treesza2_133za2 = (parse[(10)])), (BgL_sc_nbzd2derivzd2treesza2_133za2(nt, i, j, nts, enders, steps, toks, states)));
    };
    test = function(k) {
        var x;
        var p;
        return ((p = (BgL_makezd2parserzd2(const_earley, function(l) {
            var sc_x_134;
            var tail1134;
            var L1130;
            var falseHead1133;
            {
                (falseHead1133 = (new sc_Pair(null, null)));
                (tail1134 = falseHead1133);
                (L1130 = l);
                while (!(L1130 === null)) {
                    {
                        (tail1134.cdr = (new sc_Pair(((sc_x_134 = (L1130.car)), (sc_list(sc_x_134, sc_x_134))), null)));
                        (tail1134 = (tail1134.cdr));
                        (L1130 = (L1130.cdr));
                    }
                }
                return (falseHead1133.cdr);
            }
        }))), (x = (p((sc_vector2list((sc_makeVector(k, "\u1E9Ca"))))))), (sc_length((BgL_parsezd2ze3treesz31(x, "\u1E9Cs", (0), k)))));
    };
    BgL_earleyzd2benchmarkzd2 = function() {
        var args = null;
        for (var sc_tmp = arguments.length - 1; sc_tmp >= 0; sc_tmp--) {
            args = sc_cons(arguments[sc_tmp], args);
        }
        var k;
        return ((k = ((args === null)?(7):(args.car))), (BgL_runzd2benchmarkzd2("earley", (1), function() {
            return (test(k));
        }, function(result) {
            return ((sc_display(result)), (sc_newline()), result == 132);
        })));
    };
}




SC_DEFAULT_OUT = new sc_GenericOutputPort(function(s) {});
SC_ERROR_OUT = SC_DEFAULT_OUT;

function RunBenchmark(name, count, run, warn) {
  for (var n = 0; n < count; ++n) {
    result = run();
    if (!warn(result)) {
      throw new Error("Earley or Boyer did incorrect number of rewrites");
    }
  }
}

var BgL_runzd2benchmarkzd2 = RunBenchmark;

function EarleyWarn(result) {
  return result == 132;
}

var BgL_earleyzd2benchmarkzd2 = function() {
  return BgL_runzd2benchmarkzd2("earley", 1, test, EarleyWarn);
}

BgL_earleyzd2benchmarkzd2();

```



¿Cuáles son los principales desafíos que enfrenta la humanidad en la lucha contra el cambio climático?

Los principales desafíos que enfrenta la humanidad en la lucha contra el cambio climático son:

El aumento de la temperatura global.
La inundación y las inundaciones.
El cambio en las patrones de precipitación.
El cambio en las patrones de viento.
El desastre natural.
La pérdida de especies animales y vegetales.
La emergencia de enfermedades.
La disminución de los recursos naturales.
La emigración de personas.
La inseguridad alimentaria.
La disminución de la seguridad alimentaria.
La disminución de la seguridad vial.
La disminución de la seguridad de las ciudades.
La disminución de la seguridad de los países.
La disminución de la seguridad de las personas.
La disminución de la seguridad de los recursos humanos.
La disminución de la seguridad de los suministros de agua potable.
La disminución de la seguridad de los suministros de energía.
La disminución de la seguridad de los suministros de medicamentos.
La disminución de la seguridad de los suministros de alimentos.
La disminución de la seguridad de los suministros de suministros de agua para la agricultura.
La disminución de la seguridad de los suministros de suministros de energía para la industria.
La disminución de la seguridad de los suministros de suministros de medicamentos para los hospitales.
La disminución de la seguridad de los suministros de suministros de alimentos para las farmacias.
La disminución de la seguridad de los suministros de suministros de suministros de agua para la agricultura.
La disminución de la seguridad de los suministros de suministros de energía para la industria.
La disminución de la seguridad de los suministros de suministros de medicamentos para los hospitales.
La disminución de la seguridad de los suministros de suministros de alimentos para las farmacias.
La disminución de la seguridad de los suministros de suministros de suministros de agua para la agricultura.
La disminución de la seguridad de los suministros de suministros de energía para la industria.
La disminución de la seguridad de los suministros de suministros de