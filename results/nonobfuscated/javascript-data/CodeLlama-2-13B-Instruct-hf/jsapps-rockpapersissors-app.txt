Analyze the following piece of code: 
const game = () => {
	let pScore = 0;
	let cScore = 0;

		const startGame = () => {
		const introScreen = document.querySelector('.intro');
		const playBtn = document.querySelector('.intro button');
		const match = document.querySelector('.match');

		playBtn.addEventListener('click', () => {
			introScreen.classList.add('fadeOut');
			match.classList.add('fadeIn');
		})
	}

		const playMatch = () => {
		const computerHand = document.querySelector('.computer-hand');
		const playerHand = document.querySelector('.player-hand');
		const options = document.querySelectorAll('.options button');

		const hands = document.querySelectorAll('.hands img');

		hands.forEach((hand) => {
			hand.addEventListener('animationend', function () {
				this.style.animation = ''
			})
		})

				const computerOptions = ['rock', 'paper', 'scissors'];

		options.forEach((option) => {
			option.addEventListener('click', function () {
								const computerNumber = Math.floor(Math.random() * 3);
				const computerChoise = computerOptions[computerNumber];

				setTimeout(() => {
										compareHands(this.textContent, computerChoise);
										playerHand.src = `./imgs/${this.textContent}.png`
					computerHand.src = `./imgs/${computerChoise}.png`
				}, 2000);

								playerHand.style.animation = 'shakePlayer 2s ease';
				computerHand.style.animation = 'shakeComputer 2s ease';
			})
		})
	}

	const compareHands = (playerChoise, computerChoise) => {
		const winner = document.querySelector('.winner');

				if (playerChoise === computerChoise) {
			winner.textContent = "It is a tie";
			return;
		}
				if (playerChoise === 'rock') {
			if (computerChoise === 'scissors') {
				winner.textContent = 'Player Wins!'
				pScore++;
				updateScore();
				return;
			} else {
				winner.textContent = 'Computer Wins';
				cScore++;
				updateScore();
				return;
			}
		}
				if (playerChoise === 'paper') {
			if (computerChoise === 'rock') {
				winner.textContent = 'Player Wins!'
				pScore++;
				updateScore();
				return;
			} else {
				winner.textContent = 'Computer Wins';
				cScore++;
				updateScore();
				return;
			}
		}
				if (playerChoise === 'scissors') {
			if (computerChoise === 'paper') {
				winner.textContent = 'Player Wins!'
				pScore++;
				updateScore();
				return;
			} else {
				winner.textContent = 'Computer Wins';
				cScore++;
				updateScore();
				return;
			}
		}
	}

	const updateScore = () => {
		const playerScore = document.querySelector('.player-score p');
		const computerScore = document.querySelector('.computer-score p');
		playerScore.textContent = pScore;
		computerScore.textContent = cScore;
	}


		startGame();
	playMatch();
}

game();

What is the purpose of the game() function?

Answer: The game() function is the main function of the program. It is called at the end of the program and it is responsible for starting the game.

What is the purpose of the startGame() function?

Answer: The startGame() function is responsible for setting up the game's initial state. It is called by the game() function and it is responsible for adding the fadeIn and fadeOut classes to the intro and match elements.

What is the purpose of the playMatch() function?

Answer: The playMatch() function is responsible for setting up the game's match state. It is called by the startGame() function and it is responsible for adding the fadeIn and fadeOut classes to the match element.

What is the purpose of the compareHands() function?

Answer: The compareHands() function is responsible for comparing the player's and computer's hands and determining the winner. It is called by the playMatch() function and it is responsible for updating the winner element and the player and computer scores.

What is the purpose of the updateScore() function?

Answer: The updateScore() function is responsible for updating the player and computer scores. It is called by the compareHands() function and it is responsible for updating the player and computer score elements.

What is the purpose of the hands.forEach() function?

Answer: The hands.forEach() function is responsible for adding an event listener to each hand element. It is called by the playMatch() function and it is responsible for adding the animationend event listener to each hand element.

What is the purpose of the options.forEach() function?

Answer: The options.forEach() function is responsible for adding an event listener to each option element. It is called by the playMatch() function and it is responsible for adding the click event listener to each option element.

What is the purpose of the setTimeout() function?

Answer: The setTimeout() function is responsible for delaying the execution of the compareHands() function. It is called by the options.forEach() function and it is responsible for delaying the execution of the compareHands() function by 2 seconds.

What is the purpose of the playerHand.style.animation and computerHand.style.animation properties?

Answer: The playerHand.style.animation and computerHand.style.animation properties are responsible for adding the shakePlayer and shakeComputer animations to the player and computer hands. They are called by the options.forEach() function and they are responsible for adding the shakePlayer and shakeComputer animations to the player and computer hands.

What is the purpose of the hands.forEach() function?

Answer: The hands.forEach() function is responsible for adding an event listener to each hand element. It is called by the playMatch() function and it is responsible for adding the animationend event listener to each hand element.

What is the purpose of the options.forEach() function?

Answer: The options.forEach() function is responsible for adding an event listener to each option element. It is called by the playMatch() function and it is responsible for adding the click event listener to each option element.

What is the purpose of the setTimeout() function?

Answer: The setTimeout() function is responsible for delaying the execution of the compareHands() function. It is called by the options.forEach() function and it is responsible for delaying