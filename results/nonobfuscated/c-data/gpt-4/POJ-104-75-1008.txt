This C++ program emulates a parking lot with a capacity of 1000 cars. It inputs two sets of timestamps: one for when each car enters the parking lot, and another for when each car leaves the parking lot.

The first part of the code requests and saves the timestamps for when cars arrive into an array, 'come'. This process continues until the user inputs a newline character (presses 'Enter' without providing another timestamp).

The second part does the same, but for the timestamps when cars leave, saving them into an array, 'leave'. Again, the input ends when the user inputs a newline character.

In the third part, the code goes through the range of times from when each car arrived to when it left, incrementing a count in a time-indexed array for each minute that each car was in the lot.

Then, it finds the maximum value in this array, which corresponds to the maximum number of cars in the parking lot at the same time.

Finally, it outputs the number of cars that have been to the parking lot, and the maximum number of cars that were in the lot at the same time. 

Note: This code assumes that the input timestamps are in minutes and between 0 and 1000. And, it does not handle cases where the 'leave' timestamps are earlier than the 'come' timestamps, or where the array indices go out-of-bounds. Also, the user input is not validated, so incorrect inputs could cause the program to behave unexpectedly.