This C program performs the following operations:

1. It allocates memory space for five character pointers, namely `p1`, `p2`, `p3`, `q1`, `q2`, each with a size of 256 bytes.

2. It then accepts three inputs from the user, storing them in `p1`, `p2` and `p3` respectively, using the `gets()` function.

3. The program then checks if the user input string `p2` is a substring of the user input string `p1`. 

4. If it is a substring, it splits the string `p1` into `q1` and `q2` at the start of the found substring `p2`. 

5. It then concatenates the string stored in `p3` between `q1` and `q2`. The combination of `q1`, `p3` and `q2` is printed on the screen.

6. If `p2` is not a substring of `p1`, then `p1` is printed on the screen as is.

In simple terms, the program is replacing the `p2` string in the `p1` string with the `p3` string, if `p2` is found in `p1`.

One thing to note is this program uses `gets()` function, which is unsafe as it can cause buffer overflow. It's generally recommended to use `fgets()` instead as that takes buffer size as a parameter, and can prevent buffer overflow from happening.