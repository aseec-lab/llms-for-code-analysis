The code appears to be performing the following tasks:

1. The function `read` takes in four integer pointers `pm`, `pn`, `p1`, and `p2`. It reads two integers from the user and assigns them to the values pointed by `pm` and `pn`, respectively. Then, it reads `*pm` integers and assigns them to the memory pointed by `p1`, and reads `*pn` integers and assigns them to the memory pointed by `p2`.

2. The function `sort` takes in four integer pointers `pm`, `pn`, `p1`, and `p2`. It sorts the array pointed by `p1` in ascending order using selection sort. It does the same for the array pointed by `p2`. The number of elements to be sorted is determined by `*pm` and `*pn`.

3. The function `combine` takes in five integer pointers `pm`, `pn`, `p1`, `p2`, and `pnew`. It copies the elements from the array pointed by `p1` to the array pointed by `pnew`. Then, it copies the elements from the array pointed by `p2` to the array pointed by `pnew` starting from the index `i`. It returns the total number of elements copied.

4. The function `print` takes in two integer pointers `pk` and `pnew`. It prints the elements from the array pointed by `pnew`. It prints a space after each element, except for the last element, where it prints a new line.

5. The `main` function initializes variables `m`, `n`, `k`, `a`, and `b`. It also declares and initializes integer pointers `pm`, `pn`, `pa`, `pb`, `pk`, and `pnew`. It calls the functions `read`, `sort`, `combine`, and `print` in the mentioned order, passing appropriate parameters.

Overall, the code reads arrays `a` and `b` with sizes `m` and `n`, sorts them, combines them into a new array `New`, and then prints the elements of `New`.