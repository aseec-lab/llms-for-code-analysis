Analyze the following piece of code: import varint

from .constants import NAME_TABLE, CODE_TABLE


def extract_prefix(bytes_):
    

    try:
        return varint.decode_bytes(bytes_)
    except TypeError:
        raise ValueError('incorrect varint provided')


def get_prefix(multicodec):
    

    try:
        prefix = varint.encode(NAME_TABLE[multicodec])
    except KeyError:
        raise ValueError('{} multicodec is not supported.'.format(multicodec))
    return prefix


def add_prefix(multicodec, bytes_):
    

    prefix = get_prefix(multicodec)
    return b''.join([prefix, bytes_])


def remove_prefix(bytes_):
    

    prefix_int = extract_prefix(bytes_)
    prefix = varint.encode(prefix_int)
    return bytes_[len(prefix):]


def get_codec(bytes_):
    

    prefix = extract_prefix(bytes_)
    try:
        return CODE_TABLE[prefix]
    except KeyError:
        raise ValueError('Prefix {} not present in the lookup table'.format(prefix))


def is_codec(name):
    

    return name in NAME_TABLE


def is_multicodec(bytes_):
    

    try:
        extract_prefix(bytes_)
        return True
    except ValueError:
        return False


def get_name(bytes_):
    

    prefix = extract_prefix(bytes_)
    try:
        return NAME_TABLE[prefix]
    except KeyError:
        raise ValueError('Prefix {} not present in the lookup table'.format(prefix))


def get_code(name):
    

    try:
        return NAME_TABLE[name]
    except KeyError:
        raise ValueError('{} is not a valid multicodec name'.format(name))


def get_code_varint(name):
    

    return varint.encode(get_code(name))


def get_name_varint(code):
    

    return varint.encode(code)


def get_code_from_varint(varint_):
    

    return varint.decode_bytes(varint_)


def get_name_from_varint(varint_):
    

    return NAME_TABLE[varint.decode_bytes(varint_)]


def get_varint_prefix(bytes_):
    

    return varint.encode(extract_prefix(bytes_))


def get_varint_code(name):
    

    return varint.encode(get_code(name))


def get_varint_name(code):
    

    return varint.encode(code)


def get_varint_code_from_varint(varint_):
    

    return varint.decode_bytes(varint_)


def get_varint_name_from_varint(varint_):
    

    return NAME_TABLE[varint.decode_bytes(varint_)]


def get_varint_prefix_from_varint(varint_):
    

    return varint.encode(extract_prefix(varint.decode_bytes(varint_)))


def get_varint_code_from_bytes(bytes_):
    

    return varint.encode(extract_prefix(bytes_))


def get_varint_name_from_bytes(bytes_):
    

    return varint.encode(NAME_TABLE[extract_prefix(bytes_)])


def get_varint_prefix_from_bytes(bytes_):
    

    return varint.encode(extract_prefix(bytes_))


def get_varint_code_from_name(name):
    

    return varint.encode(get_code(name))


def get_varint_name_from_code(code):
    

    return varint.encode(code)


def get_varint_prefix_from_name(name):
    

    return varint.encode(get_code(name))


def get_varint_prefix_from_code(code):
    

    return varint.encode(code)


def get_varint_code_from_prefix(prefix):