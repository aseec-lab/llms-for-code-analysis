This is a piece of C code. It may look cryptic due to the use of numerical offsets and indexing on string literals, but let's break it down:

1. Firstly, `&unix["\021%six\012\0"]` is an indirect way of creating a format string for use in the `printf` function.

2. `\021` is an octal constant, which equals 17 in decimal. Indexed into the string `unix`, it gives the 18th character, supposing that the `unix` contains enough characters.

3. `%six\012` is part of the format string. It includes a format specifier `%s` followed by 'ix'. The `\012` is a newline character in octal form. 

4. `(unix)["have"]+"fun"-0x60` this part again involves string indexing. The string literal `unix` is indexed by the string `have`, but since C doesn't support string indexing, it's hard to make sense of this without further context. The `+"fun"-0x60` part seems to try adding and subtracting constants.

Overall, it's hard to make a decisive conclusion about what this code exactly does without more context like what `unix` refers to. It seems to involve some esoteric usage of C programming language. If `unix` is a long enough string, it might try to print a part of the `unix` string in a formatted way.

Please note this is a guesswork based on the provided code. In general, it's highly recommended to write clear, understandable code, not like this potentially obfuscated code snippet.