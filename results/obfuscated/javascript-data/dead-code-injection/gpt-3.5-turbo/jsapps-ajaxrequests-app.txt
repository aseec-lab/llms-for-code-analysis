This code appears to be written in JavaScript. Here is an analysis of each chunk of code:

Chunk 1:
const a0_0x50a881=a0_0xe87a;
This code declares a constant variable named "a0_0x50a881" and assigns it the value of the "a0_0xe87a" function.

function a0_0xe87a(_0x490f65,_0x1c567e){
This code declares a function named "a0_0xe87a" with two parameters "_0x490f65" and "_0x1c567e".

const _0x214423=a0_0x2144();
This code declares a constant variable named "_0x214423" and assigns it the value returned from the "a0_0x2144" function.

return a0_0xe87a=function(_0xe87a7d,_0x502076){
This code reassigns the "a0_0xe87a" function to a new value. The function takes two parameters "_0xe87a7d" and "_0x502076".

_0xe87a7d=_0xe87a7d-0xe3;
This code subtracts the hex value 0xe3 from the "_0xe87a7d" parameter.

let _0x512216=_0x214423[_0xe87a7d];
This code assigns the value at index "_0xe87a7d" of the array "_0x214423" to the variable "_0x512216".

return _0x512216;
This code returns the value of "_0x512216".

a0_0xe87a(_0x490f65,_0x1c567e);
This code calls the "a0_0xe87a" function with the parameters "_0x490f65" and "_0x1c567e".

Chunk 2:
(function(_0x478f3d,_0x3045a4){
This code declares an immediately invoked function expression (IIFE) that takes two parameters "_0x478f3d" and "_0x3045a4".

const _0x1af694=a0_0xe87a,
This code assigns the value of the "a0_0xe87a" function to the constant variable "_0x1af694".

_0x3184fc=_0x478f3d();
This code assigns the value returned from the function "_0x478f3d" to the variable "_0x3184fc".

while(!![]){
This code begins a while loop that continues indefinitely.

const _0x33e7ba=parseInt(_0x1af694(0xf1))/0x1+-parseInt(_0x1af694(0xf6))/0x2*(parseInt(_0x1af694(0xe9))/0x3)+parseInt(_0x1af694(0xf2))/0x4*(-parseInt(_0x1af694(0xed))/0x5)+parseInt(_0x1af694(0xf7))/0x6+parseInt(_0x1af694(0xe8))/0x7+parseInt(_0x1af694(0xf0))/0x8+-parseInt(_0x1af694(0xea))/0x9*(parseInt(_0x1af694(0xee))/0xa);
This code calculates a value using various "parseInt" and arithmetic operations.

if(_0x33e7ba===_0x3045a4)
This code checks if the calculated value is equal to the value of "_0x3045a4".

break;
This code breaks out of the while loop if the condition is true.

else _0x3184fc['push'](_0x3184fc['shift']());
This code pushes the result of shifting the first element of the "_0x3184fc" array to the end of the array.

}catch(_0x32bc49){
This code catches any errors that occur during the execution of the try block.

_0x3184fc['push'](_0x3184fc['shift']());
This code pushes the result of shifting the first element of the "_0x3184fc" array to the end of the array.

Chunk 3:
let boton=document[a0_0x50a881(0xe7)]('#boton');
This code declares a variable "boton" and assigns it the result of calling the "querySelector" method on the "document" object with the argument "#boton". 

function a0_0x2144(){
This code declares a function named "a0_0x2144".

const _0x17f82d=['146676ZkpYIY','101792BdaIjZ','addEventListener','GET','ajax-text.txt','5998YLZviZ','771540clquXP','click','responseText','innerHTML','send','querySelector','1202985BGXXTz','249hiuZfH','261cVTRcm','log','status','25KjEWKN','10310EGfYCh','onreadystatechange','964688jRhPAS'];
This code declares a constant array named "_0x17f82d" and initializes it with multiple string values.

a0_0x2144=function(){
This code reassigns the "a0_0x2144" function to a new value.

return _0x17f82d;
This code returns the value of the "_0x17f82d" array.

boton[a0_0x50a881(0xf3)](a0_0x50a881(0xe3),traerDatos);
This code adds an event listener to the "boton" element. It listens for the "click" event and calls the "traerDatos" function when the event occurs.

function traerDatos(){
This code declares a function named "traerDatos".

const _0x427c12=a0_0x50a881,
This code assigns the value of "a0_0x50a881" to the constant variable "_0x427c12".

_0x47abe5=new XMLHttpRequest();
This code declares a new XMLHttpRequest object named "_0x47abe5".

_0x47abe5['open'](_0x427c12(0xf4),_0x427c12(0xf5),!![]);
This code opens a connection to a server using the HTTP method specified by "_0x427c12(0xf4)". The URL for the request is passed as the second argument.

_0x47abe5[_0x427c12(0xe6)]();
This code sends the XMLHttpRequest.

_0x47abe5[_0x427c12(0xef)]=function(){
This code assigns an event handler function to the "onreadystatechange" event of the XMLHttpRequest.

this['readyState']==0x4&&this[_0x5998c5(0xec)]==0xc8&&(console[_0x5998c5(0xeb)](this['responseText']),document[_0x5998c5(0xe7)]('#respuesta')[_0x5998c5(0xe5)]=this[_0x5998c5(0xe4)]);
This code checks if the readyState of the XMLHttpRequest is 4 and the status is 200. If true, it logs the "responseText" to the console and assigns it to the "innerHTML" property of an element with the ID "respuesta" in the document.