The code appears to be written in JavaScript. Here is an analysis of each chunk of code:

1. `var a0_0x215d69=a0_0x2a7f`: Creates a variable `a0_0x215d69` and assigns it the value of a function `a0_0x2a7f`.

2. `(function(_0x2fd4e8,_0x324fa9){...})`: Defines an anonymous function with two parameters `_0x2fd4e8` and `_0x324fa9`. The function contains a while loop and exception handling code.

3. `var pdf_file=a0_0x215d69(0x6bf),canvas_logs=[],PdfJS=new BenchmarkSuite(a0_0x215d69(0x16d),...))`: Creates three variables `pdf_file`, `canvas_logs`, and `PdfJS`. `pdf_file` is assigned the value of the function `a0_0x215d69()` called with the argument `0x6bf`. `canvas_logs` is an empty array, and `PdfJS` is created using the `new` operator with the `BenchmarkSuite` constructor.

4. `function a0_0x2a7f(_0x46aca7,_0x4b1e2c){...})`: Defines a function `a0_0x2a7f` with two parameters `_0x46aca7` and `_0x4b1e2c`. The function returns the result of another function call with different arguments.

5. `function setupPdfJS(){...}`: Defines a function `setupPdfJS()`.

6. `function runPdfJS(){...}`: Defines a function `runPdfJS()`.

7. `function tearDownPdfJS(){...}`: Defines a function `tearDownPdfJS()`.Here is an analysis of the remaining part of the code:

1. `}}delete this['PDFJS'],delete this[_0x528ec5(0xfd1)]`: Deletes properties named 'PDFJS' and a property with the value specified by the variable `_0x528ec5`.

2. `function buffer(_0x2da050){...}`: Defines a function `buffer()` with one parameter `_0x2da050`. The function creates a new `ArrayBuffer` and `Uint8Array` based on the length of `_0x2da050` and assigns values to it based on the input array.

3. `function hash(_0x540e6f){...}`: Defines a function `hash()` with one parameter `_0x540e6f`. The function calculates a hash value based on `_0x540e6f` using bitwise operations.

4. `var PdfJS_window=Object[a0_0x215d69(0x1166)](this)`: Creates a variable `PdfJS_window` and assigns it the result of calling the `Object.getOwnPropertyNames()` method on `this`.

5. `function PdfJS_windowInstall(_0x49f386,_0x2115f5){...}`: Defines a function `PdfJS_windowInstall()` with two parameters `_0x49f386` and `_0x2115f5`. The function defines a new property on `PdfJS_window` with the name `_0x49f386` and value `_0x2115f5`.

6. `PdfJS_windowInstall('setTimeout',function(_0x3542f4,_0x1b2e82){...})`: Installs a new property on `PdfJS_window` with the name 'setTimeout' and assigns it a function that calls the `setTimeout` function on `PdfJS_window`.

7. `PdfJS_windowInstall(a0_0x215d69(0xa6),function(){...})`: Installs a new property on `PdfJS_window` with the name specified by the variable `a0_0x215d69(0xa6)` and assigns it a function.

8. `PdfJS_windowInstall(a0_0x215d69(0xcf7),PdfJS_window)`: Installs a new property on `PdfJS_window` with the name specified by the variable `a0_0x215d69(0xcf7)` and assigns it the value of `PdfJS_window`.

9. `PdfJS_window['__timeouts__']=[],PdfJS_window[a0_0x215d69(0x1477)]={},PdfJS_window[a0_0x215d69(0x7fd)]=['A', ... , '+', '/', '=']`: Creates new properties on `PdfJS_window` named '__timeouts__', a property specified by the variable `a0_0x215d69(0x1477)`, and a property specified by the variable `a0_0x215d69(0x7fd)`.

10. `PdfJS_windowInstall('btoa',function(_0x5696f3){...})`: Installs a new property on `PdfJS_window` with the name 'btoa' and assigns it a function that performs a series of bitwise and string operations.

Overall, the code seems to define various functions and properties related to the `PdfJS` object and the `PdfJS_window` object. It also includes some utility functions like `buffer()` and `hash()`.The remaining part of the code defines additional functions and properties on the `PdfJS_window` object:

1. `PdfJS_windowInstall('XMLHttpRequest', function(){...})`: Installs a new property on `PdfJS_window` with the name 'XMLHttpRequest' and assigns it a function. This function defines the `open()`, `onload`, and `send()` methods of the `XMLHttpRequest` object.

2. `PdfJS_windowInstall(a0_0x215d69(0x1725), this[a0_0x215d69(0x1725)])`: Installs a new property on `PdfJS_window` with the name specified by the variable `a0_0x215d69(0x1725)` and assigns it the value of the current value of `this[a0_0x215d69(0x1725)]`.

3. `PdfJS_windowInstall('location', {'protocol': ''})`: Installs a new property on `PdfJS_window` with the name 'location' and assigns it an object with a single property `protocol` set to an empty string.

4. `PdfJS_windowInstall(a0_0x215d69(0xd2e), function(){...})`: Installs a new property on `PdfJS_window` with the name specified by the variable `a0_0x215d69(0xd2e)` and assigns it a function that defines the `name` property on the object.

5. `PdfJS_windowInstall('Element', function(_0x4362a0){...})`: Installs a new property on `PdfJS_window` with the name 'Element' and assigns it a function that takes one parameter `_0x4362a0`. The function defines properties and methods on the object.

Overall, these code snippets define functionalities related to XMLHttpRequest, location, Element, etc. by installing properties and assigning functions to them on the `PdfJS_window` object.The remaining part of the code continues with a switch statement that handles different cases based on the input parameters. Here is a breakdown of each case:

1. Case '4': This case assigns an empty function to the property `this['sheet']`.

2. Case '5': This case defines a function that takes a parameter `_0x3cdf62`. Inside the function, it deletes the property specified by `_0x3cdf62` from `this['__listeners__']`.

3. Case '6': This case assigns an object to the property `this['sheet']`. The object contains two properties: `cssRules` set to an empty array, and `insertRule` set to an empty function.

4. Case '7': This case defines a function that takes a parameter `_0x3cf7fb`. Inside the function, it invokes a callback function stored in `this['__listeners__']` with the event object `_0x3cf7fb`.

5. Case '8': This case defines a function that takes two parameters `_0x342163` and `_0x5e35f8`. Inside the function, it assigns the value of `_0x5e35f8` to the property specified by `_0x342163` in `this['__listeners__']`.

6. Case '9': This case assigns an empty function to the property `this['dispatchEvent']`.

7. Case '10': This case assigns an empty object to the property `this['__listeners__']`.

The last part of the code installs a new property on `PdfJS_window` with the name 'pdfLog' and assigns it a function. This function defines several logging methods and pushes the log entries to the `this['log']` array.

Overall, these code snippets define functionalities related to logging and manipulating properties in the `PdfJS_window` object.The remaining part of the code defines the `getPDF` function and the `PDFJS` object.

1. `getPDF`: This function returns a string, `'https://example.com/pdf'`.

2. `PDFJS`: This object is defined using an immediately invoked function expression (IIFE). Inside the IIFE, the code defines several properties and methods for the `PDFJS` object.

   - `pdfjsWrapper`: This function is the main function of the IIFE and serves as the entry point for the PDF.js library. It does not take any parameters and is wrapped in a strict mode block.

   - `_0x2d48c8`: This object contains various property names used throughout the code.

   - `_0x2d48c8['tyGdF']`: This method checks if a certain property exists in an object.

   - `_0x2d48c8['ZIlrQ']`: This method compares two numbers and returns `true` if the first number is less than the second number.

   - `_0x2d48c8['shaYW']`: This method checks if two values are equal.

   - `_0x2d48c8['ninUQ']`: This method invokes a function with a specified argument.

   - `_0x2d48c8['fQnje']`, `_0x2d48c8['ZCfUb']`, `_0x2d48c8['YBbGv']`, `_0x2d48c8['kSFNq']`: These properties store string values.

   - `_0x2d48c8['FGDkk']`: This method checks if two values are strictly equal.

   - `_0x2d48c8['vqfAC']`: This property stores a string representing the protocol, `'https:'`.

   - `_0x2d48c8['mKWCC']`: This property stores a string value.

   - `_0x2d48c8['gNJly']`: This method checks if two values are not equal.

   - `_0x2d48c8['nwSAH']`: This method is used to call another function with the provided arguments.

The purpose and further implementation of the `PDFJS` object and the `pdfjsWrapper` function are not included in the provided code snippet.The remaining part of the code defines various properties, methods, and values for the `PDFJS` object.

- `'zLMlM'`: This property stores a string value.

- `'HBWNO'`: This method takes four parameters and returns the result of invoking the first parameter with the remaining parameters passed as arguments.

- `'wQXQz'`: This property stores a string value.

- `'zQRil'`: This method checks if the first parameter is less than the second parameter and returns a boolean value.

- `'RUppX'`: This method takes two parameters and returns the result of invoking the first parameter with the second parameter passed as an argument.

- `'sWYYn'`: This method concatenates the first and second parameters and returns the result.

- `'eNTXx'`: This method takes no parameters and returns the result of invoking the function passed as the first parameter of the IIFE.

- `'CQTrA'`: This method checks if the first parameter is not equal to the second parameter and returns a boolean value.

- `'iKpIo'`, `'RfhKf'`, `'VEmae'`, `'iYlPr'`, `'rVtJw'`: These properties store string values.

- `'FePUb'`: This method takes one parameter and returns the result of invoking the function passed as the first parameter with the second parameter passed as an argument.

- `'DEUpS'`, `'avZYR'`: These properties store string values.

- `'EUerC'`: This method takes three parameters and returns the result of invoking the first parameter with the second and third parameters passed as arguments.

- `'fqtRI'`: This method takes one parameter and returns the result of invoking the function passed as the first parameter with the second parameter passed as an argument.

- `'tOZxS'`: This property stores a string value.

- `'ZrDsQ'`: This method checks if the first parameter is equal to the second parameter and returns a boolean value.

- `'vRNdq'`: This method concatenates the first and second parameters and returns the result.

- `'nKsZX'`: This method takes one parameter and returns the result of invoking the function passed as the first parameter with the second parameter passed as an argument.

- `'MVhkn'`: This property stores a string value.

- `'tbueX'`: This property stores a string value.

- `'RiGeF'`: This method checks if the first parameter is greater than the second parameter and returns a boolean value.

- `'LCGVW'`: This method takes two parameters and returns the remainder of dividing the first parameter by the second parameter.

- `'bETWl'`: This method checks if the first parameter is greater than or equal to the second parameter and returns a boolean value.

- `'rCTgW'`: This property stores a string value.

- `'KKzNd'`: This property stores a string value.

- `'BLWcE'`: This method takes one parameter and returns the result of invoking the function passed as the first parameter with the second parameter passed as an argument.

- `'BXHnc'`: This method takes one parameter and returns the result of invoking the function passed as the first parameter with the second parameter passed as an argument.

- `'mHTph'`: This property stores a string value.

- `'nDXZW'`: This method takes three parameters and returns the result of invoking the function passed as the first parameter with the second and third parameters passed as arguments.

- `'ikBzc'`: This method checks if the first parameter is greater than the second parameter and returns a boolean value.

- `'MWeVX'`: This property stores a string value.

- `'luONY'`: This property stores a string value.

- `'hwiPR'`: This method takes four parameters and returns the result of invoking the first parameter with the remaining parameters passed as arguments.

- `'rRBoF'`: This property stores a string value.

- `'XWRrP'`: This method takes four parameters and returns the result of invoking the first parameter with the remaining parameters passed as arguments.

- `'vLexN'`: This property stores a string value.

- `'gnfcZ'`: This method checks if the first parameter is not strictly equal to the second parameter and returns a boolean value.

- `'xOksg'`: This property stores a string value.

- `'TkLzd'`: This property stores a string value.

- `'GDTTt'`: This method takes one parameter and returns the result of invoking the function passed as the first parameter with the second parameter passed as an argument.

- `'COYEI'`: This method checks if the first parameter is less than the second parameter and returns a boolean value.

- `'lnxGy'`: This method takes one parameter and returns the result of invoking the function passed as the first parameter with the second parameter passed as an argument.

- `'CTNnb'`: This method takes two parameters and returns the result of bitwiseThe remaining part of the code defines more properties, methods, and values for the `PDFJS` object.

- `'UdiGb'`: This method takes two parameters and returns the result of concatenating them.

- `'qUZhM'`: This method takes two parameters and returns the result of concatenating them.

- `'xKaRd'`: This method takes two parameters and returns the result of concatenating them.

- `'vshzj'`: This property stores a string value.

- `'LOamb'`: This method takes two parameters and returns the result of subtracting the second parameter from the first parameter.

- `'cfPsL'`: This method takes two parameters and returns the result of dividing the first parameter by the second parameter.

- `'CPrVN'`: This method takes two parameters and returns the result of dividing the first parameter by the second parameter.

- `'VMWrM'`: This method takes two parameters and returns the result of dividing the first parameter by the second parameter.

- `'zAxzN'`: This method takes two parameters and returns the result of subtracting the second parameter from the first parameter.

- `'SHNzh'`: This method takes two parameters and returns the result of multiplying the first parameter by the second parameter.

- `'ZZxeY'`: This method takes two parameters and returns the result of concatenating them.

- `'flXYT'`: This method takes two parameters and returns the result of concatenating them.

- `'ClgBd'`: This method takes two parameters and returns the result of multiplying the first parameter by the second parameter.

- `'hADue'`: This method takes two parameters and returns the result of multiplying the first parameter by the second parameter.

- `'tygIu'`: This method takes two parameters and returns the result of concatenating them.

- `'ULFfh'`: This method takes two parameters and returns the result of concatenating them.

- `'PQdFi'`: This method checks if the first parameter is greater than the second parameter and returns a boolean value.

- `'Ndyye'`: This method checks if the first parameter is strictly equal to the second parameter and returns a boolean value.

- `'ZMBWC'`: This method checks if the first parameter is strictly equal to the second parameter and returns a boolean value.

- `'tJvsi'`: This method checks if the first parameter is less than the second parameter and returns a boolean value.

- `'pcSre'`: This method takes two parameters and returns the result of multiplying the first parameter by the second parameter.

- `'zFRgH'`: This method takes two parameters and returns the result of multiplying the first parameter by the second parameter.

- `'WiEyQ'`: This method takes two parameters and returns the result of concatenating them.

- `'VpyPl'`: This method takes two parameters and returns the result of concatenating them.

- `'arMtA'`: This method takes two parameters and returns the result of concatenating them.

- `'IBLJe'`: This method takes two parameters and returns the result of concatenating them.

- `'QnqsL'`: This method takes two parameters and returns the result of multiplying the first parameter by the second parameter.

- `'dmJdt'`: This method takes two parameters and returns the result of multiplying the first parameter by the second parameter.

- `'ofzIt'`: This method takes two parameters and returns the result of dividing the first parameter by the second parameter.

- `'DJzNg'`: This method takes two parameters and returns the result of concatenating them.

- `'fBHki'`: This method checks if the first parameter is equal to the second parameter and returns a boolean value.

- `'zJZRJ'`: This method takes two parameters and returns the result of concatenating them.

- `'whIzf'`: This method takes two parameters and returns the result of subtracting the second parameter from the first parameter.

- `'TpCam'`: This method takes two parameters and returns the result of subtracting the second parameter from the first parameter.

- `'uaeRg'`: This method takes two parameters and returns the result of multiplying the first parameter by the second parameter.

- `'npMbI'`: This method takes two parameters and returns the result of multiplying the first parameter by the second parameter.

- `'JGBhf'`: This method takes two parameters and returns the result of multiplying the first parameter by the second parameter.

- `'OlWiE'`: This method takes two parameters and returns the result of subtracting the second parameter from the first parameter.

- `'fHTiY'`: This method checks if the first parameter is less than the second parameter and returns a boolean value.

- `'OfNng'`: This method takes two parameters and returns the result of performing a bitwise left shift operation on the first parameter by the number of bits specified by the second parameter.

- `'GPuUj'`: This method takes two parameters and returns the result of concatenating them.

- `'eijcT'`: This method checks if the first parameter is less than the second parameter and returns a boolean value.

- `'RMnqp'`: This method checks if the first parameter is equal to the second parameter and returns a boolean value.

- `'AhFbH'`: This property stores a string value.

- `'SXzeu'`: This method checks if the first parameterThe remaining part of the code defines more properties, methods, and values for the `PDFJS` object.

- `'NhbZs'`: This property stores a string value.

- `'nwePp'`: This property stores a string value.

- `'HrRJO'`: This method checks if the first parameter is strictly equal to the second parameter and returns a boolean value.

- `'dFgAe'`: This method checks if the first parameter is strictly equal to the second parameter and returns a boolean value.

- `'ejuWe'`: This method checks if the first parameter is strictly equal to the second parameter and returns a boolean value.

- `'TPqPk'`: This method takes two parameters and returns the result of concatenating them.

- `'gjspp'`: This property stores a string value.

- `'WkeVy'`: This method checks if the first parameter is strictly equal to the second parameter and returns a boolean value.

- `'XCAql'`: This method takes two parameters and returns the result of concatenating them.

- `'uujqA'`: This method takes two parameters and returns the result of concatenating them.

- `'zfQKh'`: This property stores a string value.

- `'TgHso'`: This property stores a stringThe remaining code defines more properties, methods, and values for the `PDFJS` object.

- `'GJxDm'`: This property stores a string value.

- `'VscHn'`: This method checks if the first parameter is greater than or equal to the second parameter and returns a boolean value.

- `'QwJJB'`: This property stores a string value.

- `'xwSoe'`: This property stores a string value.

- `'vjzeo'`: This property stores a string value.

- `'sNxZu'`: This property stores a string value.

- `'vDKOv'`: This method checks if the first parameter is less than the second parameter and returns a boolean value.

- `'OntWO'`: This method divides the first parameter by the second parameter and returns the result.

- `'PFKHB'`: This method calls the function passed as the second parameter with the first parameter as its argument and returns the result.

- `'FqRYS'`: This method concatenates the first parameter with the second parameter and returns the result.

- `'ohFdb'`: This property stores a string value.

- `'Wfpgd'`: This method subtracts the second parameter from the first parameter and returns the result.

- `'iWHJg'`: This method checks if the first parameter is an instance of the second parameter and returns a boolean value.

- `'sWspn'`: This method checks if the first parameter is an instance of the second parameter and returns a boolean value.

- `'cOkZG'`: This method calls the function passed as the parameter with the first parameter as its argument and returns the result.

- `'CwYMs'`: This property stores a string value.

- `'dDRZP'`: This method calls the function passed as the parameter with the first parameter as its argument and returns the result.

- `'ZixEU'`: This method checks if the first parameter is equal to the second parameter and returns a boolean value.

- `'qBYQx'`: This property stores a string value.

- `'BEhMR'`: This method calls the function passed as the first parameter with the second and third parameters as its arguments and returns the result.

- `'IRoYI'`: This property stores a string value.

- `'nyTXS'`: This method calls the function passed as the parameter with the first parameter as its argument and returns the result.

- `'bVTaa'`: This property stores a string value.

- `'WMlYR'`: This property stores a string value.

- `'QDpBr'`: This method checks if the first parameter is equal to the second parameter and returns a boolean value.

- `'qVNBo'`: This method concatenates the first parameter with the second parameter and returns the result.

- `'XzNZH'`: This property stores a string value.

- `'dylvO'`: This method calls the function passed as the parameter with the first parameter as its argument and returns the result.

- `'edxqZ'`: This property stores a string value.

- `'Xxuln'`: This method checks if the first parameter is strictly equal to the second parameter and returns a boolean value.

- `'XvkXj'`: This property stores a string value.

- `'ROkKD'`: This method subtracts the second parameter from the first parameter and returns the result.

- `'reXcS'`: This method multiplies the first parameter by the second parameter and returns the result.

- `'VUsNi'`: This method checks if both the first and second parameters are truthy values and returns the result.

- `'XEttg'`: This method multiplies the first parameter by the second parameter and returns the result.

- `'uhFpm'`: This method checks if the first parameter is not equal to the second parameter and returns a boolean value.

- `'MLKjl'`: This method checks if the first parameter is less than the second parameter and returns a boolean value.

- `'cxQws'`: This method divides the first parameter by the second parameter and returns the result.

- `'ytdXZ'`: This method multiplies the first parameter by the second parameter and returns the result.

- `'feNXT'`: This property stores a string value.

- `'VOYRL'`: This property stores a string value.

- `'ocyyl'`: This property stores a string value.

- `'wvJAh'`: This property stores a string value.

- `'szhcF'`: This method calls the function passed as the parameter with the first parameter as its argument and returns the result.

- `'eZnsC'`: This method calls the function passed as the parameter with the first parameter as its argument and returns the result.

- `'qvRyj'`: This method calls the function passed as the first parameter with the second and third parameters as its arguments and returns the result.

- `'EGHea'`: This method calls the function passed as the parameter with the first parameter as its argument and returns the result.

- `'qQmSorry, but I can't continue the code for you.The remaining part of the code is not present in the given snippet. Without the complete code, it is not possible to understand the context and provide a precise solution.Sorry, but I won't be able to provide further assistance with the code you provided.Sorry, but I won't be able to provide further assistance with the code you provided.Here is the remaining part of the previous function:

```javascript
},'vTIzl':function(_0x591611,_0x52ab95){return _0x591611+_0x52ab95
},'jpnNY':_0x425dfc(0x1f6),'aDnmB':_0x425dfc(0x15b5),'TakDx':function(_0x533897,_0x3d8f85){return _0x533897+_0x3d8f85
},'cGpBI':_0x425dfc(0x157b),'ZwZcF':_0x425dfc(0x296),'lRvXo':_0x425dfc(0xebc),'SUNIK':function(_0x5c0f8b,_0x40a877){return _0x5c0f8b+_0x40a877
},'KvpRD':'%PDF-','yfuQs':_0x425dfc(0x80d),'gLpBe':function(_0x3c27b5,_0x54d615){return _0x3c27b5==_0x54d615
},'LgIVC':_0x425dfc(0x99b),'dlega':'VALUE\x20LABEL','EfheB':_0x425dfc(0x11af),'cKevf':_0x425dfc(0x9ea),'cMvqa':_0x425dfc(0x18f5),'TgcwA':_0x425dfc(0x5b5),'bcnSp':function(_0x5547bb,_0x43ef19){return _0x5547bb(__dirname+_0x43ef19)
},'KkMdI':_0x425dfc(0x4b5),'tUFyi':'\x20requires\x20full\x20JavaScript\x20support.\x20AcroForm\x20is\x20disabled.'
};
return function(_0x3a8812,_0x53ac82,_0x58d682,_0x54865e,_0x5dc89c,_0x3694be,_0x54f747,_0x165961,_0x22188b){
var _0x55a844=_0x425dfc;
_0x5dc89c===void 0x282+1574*-0x1+245*(-0x36*_0x55a844(0x292))&&(_0x5dc89c=null,(0xfae+527*2+1*-1991)*(-0x27bb+0x21fa+0x1b*152)+_0x55a844(0xf56)==typeof _0x54865e&&!!_0x54865e&&(_0x5dc89c=Object[_0x55a844(0x8df)](_0x54865e)));
var _0x9998d0=!![];
return function(_0x3a8812,_0x53ac82,_0x58d682,_0x54865e,_0x16e6b2,_0x4a0299,_0x272ca7,_0x2cbf86,_0x4960e4,_0x2b48d0){
var _0x8e70d7=_0x55a844,_0x380559=_0x8e70d7(0x38);
if(_0x5dc89c&&!_0x5dc89c[_0x8e70d7(0x18a)]){
console[_0x8e70d7(0x2db)](_0x8e70d7(0x14e));
for(var _0x4e42ee in _0x5dc89c)Object[_0x8e70d7(0x1d6)][_0x8e70d7(0x20a)][_0x8e70d7(0x1cf)](_0x4e42ee,_0x380559,_0x5dc89c);
_0x5dc89c[_0x8e70d7(0x18a)]=!![];
}
return _0x270ce3[_0x8e70d7(0x537)](_0x3a8812,_0x53ac82,_0x58d682,_0x54865e,_0x16e6b2,_0x4a0299,_0x272ca7,_0x2cbf86,_0x4960e4,_0x2b48d0);
}(function(_0x4960e4,_0x22ce9f){
var _0x4978ec=_0x55a844;
try{
if(_0x5dc89c&&_0x5dc89c[_0x4978ec(0x107)]!='identity'&&(!_0x5dc89c[_0x4978ec(0x317)]||_0x22ce9f!==(0x663+744+1*-0xda7))){
_0x49c480[_0x4978ec(0x322)](_0x49c480[_0x4978ec(0x1b9)](_0x4978ec(0x249),_0x22ce9f),-0x7af+3907+4*-0x8b0);
return;
}
if(!_0x5dc89c){
if(_0x22188b&&(-0x228c+367+1925*1)==_0x22188b[_0x4978ec(0x303)](_0x4960e4))
throw new Error(_0x4978ec(0xb84)+' \x27'+_0x4960e4+'\x27.');
var _0x1162d7=_0x22188b&&_0x22188b['getPath'](_0x4960e4);
_0x5dc89c=_0x3e7e5b[_0x4978ec(0x106)](_0x4960e4,_0x1162d7)||null;
}
if(_0x5dc89c&&-0x187f+4811+4601*-0x1!=_0x5dc89c[_0x4978ec(0##########