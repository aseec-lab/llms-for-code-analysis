The given code, which appears to be in Javascript, looks like it defines a function for a rock-paper-scissors game. 

Here's how it works:

1. `game()` is the main function that is invoked at the very bottom of the script. Inside this function, it initializes player's score and computer's score to 0. 

2. It then defines various nested functions like `_0x73ff2f` which seems to manage some click animations on the game's intro screen.

3. `_0x5ca5ee` creates an event listener for the player's choices (rock, paper, scissors).

4. When the player makes a choice, the computer makes a random choice and the game result is then analysed by `_0x34daca`. 

5. This function checks who won the round and accordingly increment's the player's or computer's score and updates the score display on the screen. 

6. `_0x13fc57` is the function which updates the scores on the display.

Specific details are obfuscated by the hexadecimal identifiers used for variable names, but it's clear that the overall flow of the code is about handling the gameplay of rock-paper-sissors. 

In the top part of the code, it's setting up an array of some kind, and it seems to shuffle it until a certain condition (calculated from a range of operations with specific constant numbers) is met. Due to its ambiguous nature, it is hard to understand completely its purpose without additional context. It could potentially be related to generating predictable sequence or consistent randomization for the computer's choices in the game. 

It's also worth to mention that the functions `a0_0x16c8` and `a0_0x2cc5` seems to functionally represent some kind of data transformation or encryption logic.